******************************************************************************
              TMS320C55x Linker PC v4.4.1                      
******************************************************************************
>> Linked Sat Sep 15 05:24:37 2018

OUTPUT FILE NAME:   <test.out>
ENTRY POINT SYMBOL: "_c_int00"  address: 000350ff


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  MMR                   00000000   000000c0  00000000  000000c0  RWIX
  DARAM0                000000c0   0000ff40  0000ddfe  00002142  RWIX
  SARAM0                00010000   00010000  00000000  00010000  RWIX
  SARAM1                00020000   00020000  0001522a  0000add6  RWIX
  SARAM2                00040000   0000fe00  0000fdf8  00000008  RWIX
  VECS                  0004fe00   00000200  00000200  00000000  RWIX
  PDROM                 00ff8000   00008000  00000000  00008000  R IX

PAGE 2:
  IOPORT                00000000   00020000  00000000  00020000  RWI 


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.pinit       0   [ 00040000 ]  00020000          *   00000000   UNINITIALIZED

.stack       0   [ 000000c0 ]  00000060          *   00001000   UNINITIALIZED
                 [ 000000c0 ]  00000060          *   00001000   --HOLE--

.data        0   [ 000000c0 ]  00000060          *   00000000   UNINITIALIZED

.sysstack 
*            0   [ 000020c0 ]  00001060          *   00000800   UNINITIALIZED
                 [ 000020c0 ]  00001060          *   00000800   --HOLE--

.bss.1       0   [ 000030c0 ]  00001860          *   0000250d   UNINITIALIZED
                 [ 000030c0 ]  00001860          *   0000138c   heap_1.obj (.bss)
                 [ 000057d8 ]  00002bec          *   0000050d   csl_mmcsd_ataIf.obj (.bss)
                 [ 000061f2 ]  000030f9          *   00000400   mem_test.obj (.bss)
                 [ 000069f2 ]  000034f9          *   00000200   spiflash_test.obj (.bss)
                 [ 00006df2 ]  000036f9          *   00000001   integer.obj (.bss)
                 [ 00006df4 ]  000036fa          *   000001be   csl_usb.obj (.bss)
                 [ 00007170 ]  000038b8          *   00000124   dma.obj (.bss)
                 [ 000073b8 ]  000039dc          *   00000119   rts55x.lib : defs.obj (.bss)
                 [ 000075ea ]  00003af5          *   00000001              : fopen.obj (.bss)
                 [ 000075ec ]  00003af6          *   00000112   ezdsp5535_spiflash.obj (.bss)
                 [ 00007810 ]  00003c08          *   000000d0   rts55x.lib : trgdrv.obj (.bss)
                 [ 000079b0 ]  00003cd8          *   00000095   ezdsp5535_sdcard.obj (.bss)

.bss.2       0   [ 00007adc ]  00003d6e          *   00000101   UNINITIALIZED
                 [ 00007adc ]  00003d6e          *   00000084   csl_intc.obj (.bss)
                 [ 00007be4 ]  00003df2          *   0000007d   tasks_sysStk.obj (.bss)

.bss.3       0   [ 00007ce0 ]  00003e70          *   000001ff   UNINITIALIZED
                 [ 00007ce0 ]  00003e70          *   00000071   rts55x.lib : lowlev.obj (.bss)
                 [ 00007dc2 ]  00003ee1          *   00000061   i2s.obj (.bss)
                 [ 00007e84 ]  00003f42          *   00000040   croutine.obj (.bss)
                 [ 00007f04 ]  00003f82          *   0000002a   csl_i2s.obj (.bss)
                 [ 00007f58 ]  00003fac          *   00000020   queue.obj (.bss)
                 [ 00007f98 ]  00003fcc          *   0000001c   port.obj (.bss)
                 [ 00007fd0 ]  00003fe8          *   0000001a   main.obj (.bss)
                 [ 00008004 ]  00004002          *   00000016   ezdsp5535_uart.obj (.bss)
                 [ 00008030 ]  00004018          *   00000014   rtc.obj (.bss)
                 [ 00008058 ]  0000402c          *   00000012   csl_i2c.obj (.bss)
                 [ 0000807c ]  0000403e          *   00000012   dynamic.obj (.bss)
                 [ 000080a0 ]  00004050          *   0000000c   QPeek.obj (.bss)
                 [ 000080b8 ]  0000405c          *   0000000a   blocktim.obj (.bss)
                 [ 000080cc ]  00004066          *   00000009   semtest.obj (.bss)

.bss.4       0   [ 000080e0 ]  00004070          *   00000039   UNINITIALIZED
                 [ 000080e0 ]  00004070          *   00000008   QueueOverwrite.obj (.bss)
                 [ 000080f0 ]  00004078          *   00000008   ezdsp5535_sar.obj (.bss)
                 [ 00008100 ]  00004080          *   00000006   rts55x.lib : memory.obj (.bss)
                 [ 0000810c ]  00004086          *   00000004   ParTest.obj (.bss)
                 [ 00008114 ]  0000408a          *   00000004   PollQ.obj (.bss)
                 [ 0000811c ]  0000408e          *   00000004   ezdsp5535_gpio.obj (.bss)
                 [ 00008124 ]  00004092          *   00000004   flash.obj (.bss)
                 [ 0000812c ]  00004096          *   00000004   flop.obj (.bss)
                 [ 00008134 ]  0000409a          *   00000004   rts55x.lib : _lock.obj (.bss)
                 [ 0000813c ]  0000409e          *   00000004              : exit.obj (.bss)
                 [ 00008144 ]  000040a2          *   00000004   timer.obj (.bss)
                 [ 0000814c ]  000040a6          *   00000003   csl_spi.obj (.bss)

.bss.5       0   [ 00008154 ]  000040aa          *   00000002   UNINITIALIZED
                 [ 00008154 ]  000040aa          *   00000002   ezdsp5535_i2s.obj (.bss)

.sysmem      0   [ 00008158 ]  000040ac          *   00002800   UNINITIALIZED
                 [ 00008158 ]  000040ac          *   00002800   --HOLE--

.const.1     0   [ 0000d158 ]  000068ac          *   00000447   
                 [ 0000d158 ]  000068ac          *   00000346   ezdsp5535_sdcard.obj (.const:.string)
                 [ 0000d7e4 ]  00006bf2          *   00000101   rts55x.lib : ctype.obj (.const:__ctypes_)

.const.2     0   [ 0000d9e8 ]  00006cf4          *   00000081   
                 [ 0000d9e8 ]  00006cf4          *   00000081   csl_cdc.obj (.const:.string)

.const.3     0   [ 0000daec ]  00006d76          *   0000005d   
                 [ 0000daec ]  00006d76          *   0000005d   spiflash_test.obj (.const:.string)

.const.4     0   [ 0000dba8 ]  00006dd4          *   0000003f   
                 [ 0000dba8 ]  00006dd4          *   0000003f   semtest.obj (.const:.string)

.const.5     0   [ 0000dc28 ]  00006e14          *   0000006b   
                 [ 0000dc28 ]  00006e14          *   0000003e   dynamic.obj (.const:.string)
                 [ 0000dca4 ]  00006e52          *   0000002d   QPeek.obj (.const:.string)

.const.6     0   [ 0000dd00 ]  00006e80          *   00000045   
                 [ 0000dd00 ]  00006e80          *   00000024   rts55x.lib : _printfi.obj (.const:.string)
                 [ 0000dd48 ]  00006ea4          *   00000021   blocktim.obj (.const:.string)

.const.7     0   [ 0000dd8c ]  00006ec6          *   00000021   
                 [ 0000dd8c ]  00006ec6          *   00000021   main.obj (.const:.string)

.const.8     0   [ 0000ddd0 ]  00006ee8          *   00000073   
                 [ 0000ddd0 ]  00006ee8          *   00000020   PollQ.obj (.const:.string)
                 [ 0000de10 ]  00006f08          *   00000018   flop.obj (.const:.string)
                 [ 0000de40 ]  00006f20          *   00000014   flop.obj (.const)
                 [ 0000de68 ]  00006f34          *   0000000c   rts55x.lib : _printfi.obj (.const)
                 [ 0000de80 ]  00006f40          *   00000008   integer.obj (.const:.string)
                 [ 0000de90 ]  00006f48          *   00000008   rts55x.lib : divd.obj (.const:_initial_approx$1)
                 [ 0000dea0 ]  00006f50          *   00000006   QueueOverwrite.obj (.const:.string)
                 [ 0000deac ]  00006f56          *   00000005   flash.obj (.const:.string)

.const.9     0   [ 0000deb8 ]  00006f5c          *   00000009   
                 [ 0000deb8 ]  00006f5c          *   00000005   tasks_sysStk.obj (.const:.string)
                 [ 0000dec2 ]  00006f61          *   00000004   main.obj (.const:_$P$T0$2)

.const.10 
*            0   [ 0000decc ]  00006f66          *   00000006   
                 [ 0000decc ]  00006f66          *   00000002   rts55x.lib : fputs.obj (.const:.string)
                 [ 0000ded0 ]  00006f68          *   00000002              : fltlid.obj (.const)
                 [ 0000ded4 ]  00006f6a          *   00000002              : fltuld.obj (.const)

.text.1      0     00020000  [ 00010000 ] 00004d10          *   
                   00020000  [ 00010000 ] 000015a4          *   rts55x.lib : _printfi.obj (.text)
                   000215a4  [ 00010ad2 ] 00001478          *   queue.obj (.text)
                   00022a1c  [ 0001150e ] 000011eb          *   csl_nand.obj (.text)
                   00023c07  [ 00011e03 ] 00000001          *   --HOLE-- [fill = 20]
                   00023c08  [ 00011e04 ] 00001106          *   csl_uart.obj (.text)
                   00024d0e  [ 00012687 ] 00000002          *   --HOLE-- [fill = 20]

.text.2      0     00024d10  [ 00012688 ] 00000dc2          *   
                   00024d10  [ 00012688 ] 00000dc1          *   csl_dat.obj (.text)
                   00025ad1  [ 00012d68 ] 00000001          *   --HOLE-- [fill = 20]

.text.3      0     00025ad4  [ 00012d6a ] 000019da          *   
                   00025ad4  [ 00012d6a ] 00000d74          *   csl_audioClass.obj (.text)
                   00026848  [ 00013424 ] 00000c65          *   csl_cdc.obj (.text)
                   000274ad  [ 00013a56 ] 00000001          *   --HOLE-- [fill = 20]

.text.4      0     000274b0  [ 00013a58 ] 0000178c          *   
                   000274b0  [ 00013a58 ] 00000c4c          *   csl_i2c.obj (.text)
                   000280fc  [ 0001407e ] 00000b3e          *   csl_mmcsd_ataIf.obj (.text)
                   00028c3a  [ 0001461d ] 00000002          *   --HOLE-- [fill = 20]

.text.5      0     00028c3c  [ 0001461e ] 00002e1a          *   
                   00028c3c  [ 0001461e ] 00000b2b          *   csl_sar.obj (.text)
                   00029767  [ 00014bb3 ] 00000001          *   --HOLE-- [fill = 20]
                   00029768  [ 00014bb4 ] 000009e3          *   csl_i2s.obj (.text)
                   0002a14b  [ 000150a5 ] 00000001          *   --HOLE-- [fill = 20]
                   0002a14c  [ 000150a6 ] 000008b4          *   csl_rtc.obj (.text)
                   0002aa00  [ 00015500 ] 00000838          *   csl_lcdc.obj (.text)
                   0002b238  [ 0001591c ] 0000081d          *   oled_test.obj (.text)
                   0002ba55  [ 00015d2a ] 00000001          *   --HOLE-- [fill = 20]

.text.6      0     0002ba58  [ 00015d2c ] 0000233c          *   
                   0002ba58  [ 00015d2c ] 00000697          *   csl_gpio.obj (.text)
                   0002c0ef  [ 00016077 ] 00000001          *   --HOLE-- [fill = 20]
                   0002c0f0  [ 00016078 ] 0000067c          *   main.obj (.text)
                   0002c76c  [ 000163b6 ] 000005bb          *   csl_spi.obj (.text)
                   0002cd27  [ 00016693 ] 00000001          *   --HOLE-- [fill = 20]
                   0002cd28  [ 00016694 ] 000005b3          *   blocktim.obj (.text)
                   0002d2db  [ 0001696d ] 00000001          *   --HOLE-- [fill = 20]
                   0002d2dc  [ 0001696e ] 00000573          *   event_groups.obj (.text)
                   0002d84f  [ 00016c27+] 00000543          *   rts55x.lib : lowlev.obj (.text)
                   0002dd92  [ 00016ec9 ] 00000002          *   --HOLE-- [fill = 20]

.text.7      0     0002dd94  [ 00016eca ] 000013ec          *   
                   0002dd94  [ 00016eca ] 00000538          *   csl_intc.obj (.text)
                   0002e2cc  [ 00017166 ] 00000528          *   rts55x.lib : trgdrv.obj (.text)
                   0002e7f4  [ 000173fa ] 000004d5          *   ezdsp5535_sdcard.obj (.text)
                   0002ecc9  [ 00017664+] 000004b5          *   rts55x.lib : memory.obj (.text)
                   0002f17e  [ 000178bf ] 00000002          *   --HOLE-- [fill = 20]

.text.8      0     0002f180  [ 000178c0 ] 00000430          *   
                   0002f180  [ 000178c0 ] 0000042e          *   QPeek.obj (.text)
                   0002f5ae  [ 00017ad7 ] 00000002          *   --HOLE-- [fill = 20]

.text.9      0     0002f5b0  [ 00017ad8 ] 00000812          *   
                   0002f5b0  [ 00017ad8 ] 00000427          *   croutine.obj (.text)
                   0002f9d7  [ 00017ceb ] 00000001          *   --HOLE-- [fill = 20]
                   0002f9d8  [ 00017cec ] 000003e9          *   portASM.obj (.text)
                   0002fdc1  [ 00017ee0 ] 00000001          *   --HOLE-- [fill = 20]

.text.10     0     0002fdc4  [ 00017ee2 ] 000007a0          *   
                   0002fdc4  [ 00017ee2 ] 000003d2          *   flop.obj (.text)
                   00030196  [ 000180cb ] 000003cc          *   rts55x.lib : divd.obj (.text)
                   00030562  [ 000182b1 ] 00000002          *   --HOLE-- [fill = 20]

.text.11     0     00030564  [ 000182b2 ] 000003c4          *   
                   00030564  [ 000182b2 ] 000003c2          *   ezdsp5535_spiflash.obj (.text)
                   00030926  [ 00018493 ] 00000002          *   --HOLE-- [fill = 20]

.text.12     0     00030928  [ 00018494 ] 000006ca          *   
                   00030928  [ 00018494 ] 00000383          *   dynamic.obj (.text)
                   00030cab  [ 00018655 ] 00000001          *   --HOLE-- [fill = 20]
                   00030cac  [ 00018656 ] 00000345          *   csl_mem.obj (.text)
                   00030ff1  [ 000187f8 ] 00000001          *   --HOLE-- [fill = 20]

.text.13     0     00030ff4  [ 000187fa ] 000017c0          *   
                   00030ff4  [ 000187fa ] 000002f7          *   csl_gpt.obj (.text)
                   000312eb  [ 00018975 ] 00000001          *   --HOLE-- [fill = 20]
                   000312ec  [ 00018976 ] 000002f4          *   semtest.obj (.text)
                   000315e0  [ 00018af0 ] 000002ef          *   aic_test_i2c.obj (.text)
                   000318cf  [ 00018c67 ] 00000001          *   --HOLE-- [fill = 20]
                   000318d0  [ 00018c68 ] 000002ac          *   csl_pll.obj (.text)
                   00031b7c  [ 00018dbe ] 00000298          *   i2s_register.obj (.text)
                   00031e14  [ 00018f0a ] 0000027f          *   rts55x.lib : fopen.obj (.text)
                   00032093  [ 00019049 ] 00000001          *   --HOLE-- [fill = 20]
                   00032094  [ 0001904a ] 00000266          *   csl_wdt.obj (.text)
                   000322fa  [ 0001917d ] 0000025e          *   rts55x.lib : llmpy.obj (.text)
                   00032558  [ 000192ac ] 0000025a          *              : addd.obj (.text)
                   000327b2  [ 000193d9 ] 00000002          *   --HOLE-- [fill = 20]

.text.14     0     000327b4  [ 000193da ] 00000220          *   
                   000327b4  [ 000193da ] 0000021e          *   dma.obj (.text)
                   000329d2  [ 000194e9 ] 00000002          *   --HOLE-- [fill = 20]

.text.15     0     000329d4  [ 000194ea ] 000003e2          *   
                   000329d4  [ 000194ea ] 000001f7          *   ezdsp5535_led.obj (.text)
                   00032bcb  [ 000195e5+] 000001ea          *   rts55x.lib : cmpd.obj (.text)
                   00032db5  [ 000196da ] 00000001          *   --HOLE-- [fill = 20]

.text.16     0     00032db8  [ 000196dc ] 000001c4          *   
                   00032db8  [ 000196dc ] 000001c2          *   PollQ.obj (.text)
                   00032f7a  [ 000197bd ] 00000002          *   --HOLE-- [fill = 20]

.text.17     0     00032f7c  [ 000197be ] 00000370          *   
                   00032f7c  [ 000197be ] 000001c0          *   port.obj (.text)
                   0003313c  [ 0001989e ] 000001ae          *   list.obj (.text)
                   000332ea  [ 00019975 ] 00000002          *   --HOLE-- [fill = 20]

.text.18     0     000332ec  [ 00019976 ] 00000196          *   
                   000332ec  [ 00019976 ] 00000195          *   ezdsp5535_lcd.obj (.text)
                   00033481  [ 00019a40 ] 00000001          *   --HOLE-- [fill = 20]

.text.19     0     00033484  [ 00019a42 ] 000007f8          *   
                   00033484  [ 00019a42 ] 0000018b          *   spiflash_test.obj (.text)
                   0003360f  [ 00019b07 ] 00000001          *   --HOLE-- [fill = 20]
                   00033610  [ 00019b08 ] 0000017c          *   ezdsp5535_sar.obj (.text)
                   0003378c  [ 00019bc6 ] 00000163          *   rts55x.lib : fputs.obj (.text)
                   000338ef  [ 00019c77+] 0000014c          *              : mpyd.obj (.text)
                   00033a3b  [ 00019d1d ] 00000001          *   --HOLE-- [fill = 20]
                   00033a3c  [ 00019d1e ] 0000012b          *   timer.obj (.text:retain)
                   00033b67  [ 00019db3 ] 00000001          *   --HOLE-- [fill = 20]
                   00033b68  [ 00019db4 ] 00000112          *   ezdsp5535_i2s.obj (.text)
                   00033c7a  [ 00019e3d ] 00000002          *   --HOLE-- [fill = 20]

.text.20     0     00033c7c  [ 00019e3e ] 000002e8          *   
                   00033c7c  [ 00019e3e ] 00000104          *   integer.obj (.text)
                   00033d80  [ 00019ec0 ] 000000fc          *   rtc.obj (.text)
                   00033e7c  [ 00019f3e ] 000000e6          *   rts55x.lib : setvbuf.obj (.text)
                   00033f62  [ 00019fb1 ] 00000002          *   --HOLE-- [fill = 20]

.text.21     0     00033f64  [ 00019fb2 ] 00000408          *   
                   00033f64  [ 00019fb2 ] 000000de          *   flash.obj (.text)
                   00034042  [ 0001a021 ] 000000dd          *   rts55x.lib : _io_perm.obj (.text)
                   0003411f  [ 0001a08f ] 00000001          *   --HOLE-- [fill = 20]
                   00034120  [ 0001a090 ] 000000ce          *   heap_1.obj (.text)
                   000341ee  [ 0001a0f7 ] 000000c2          *   rts55x.lib : fflush.obj (.text)
                   000342b0  [ 0001a158 ] 000000ba          *              : trgmsg.obj (.text:CIO_breakpoint)
                   0003436a  [ 0001a1b5 ] 00000002          *   --HOLE-- [fill = 20]

.text.22     0     0003436c  [ 0001a1b6 ] 00000156          *   
                   0003436c  [ 0001a1b6 ] 000000af          *   mem_test.obj (.text)
                   0003441b  [ 0001a20d+] 000000a6          *   rts55x.lib : fputc.obj (.text)
                   000344c1  [ 0001a260 ] 00000001          *   --HOLE-- [fill = 20]

.text.23     0     000344c4  [ 0001a262 ] 000001e0          *   
                   000344c4  [ 0001a262 ] 000000a2          *   ezdsp5535_uart.obj (.text)
                   00034566  [ 0001a2b3 ] 000000a1          *   rts55x.lib : divul.obj (.text)
                   00034607  [ 0001a303 ] 00000001          *   --HOLE-- [fill = 20]
                   00034608  [ 0001a304 ] 0000009a          *   ParTest.obj (.text)
                   000346a2  [ 0001a351 ] 00000002          *   --HOLE-- [fill = 20]

.text.24     0     000346a4  [ 0001a352 ] 0000076e          *   
                   000346a4  [ 0001a352 ] 00000094          *   ezdsp5535_i2c.obj (.text)
                   00034738  [ 0001a39c ] 0000008c          *   csl_irqplug.obj (.text)
                   000347c4  [ 0001a3e2 ] 0000008c          *   i2s.obj (.text)
                   00034850  [ 0001a428 ] 0000008a          *   ezdsp5535_gpio.obj (.text)
                   000348da  [ 0001a46d ] 0000007f          *   vectors.obj (.text)
                   00034959  [ 0001a4ac+] 0000007d          *   rts55x.lib : ltoa.obj (.text)
                   000349d6  [ 0001a4eb ] 0000007b          *              : fclose.obj (.text)
                   00034a51  [ 0001a528+] 00000076          *              : frcmpyd.obj (.text)
                   00034ac7  [ 0001a563+] 00000073          *              : frcmpyd_div.obj (.text)
                   00034b3a  [ 0001a59d ] 00000072          *              : remul.obj (.text)
                   00034bac  [ 0001a5d6 ] 0000006f          *              : fixdli.obj (.text)
                   00034c1b  [ 0001a60d+] 0000006d          *              : trgmsg.obj (.text)
                   00034c88  [ 0001a644 ] 0000006b          *              : fseek.obj (.text)
                   00034cf3  [ 0001a679+] 00000067          *              : fltlid.obj (.text)
                   00034d5a  [ 0001a6ad ] 0000005c          *              : atoi.obj (.text)
                   00034db6  [ 0001a6db ] 0000005b          *              : fltuld.obj (.text)
                   00034e11  [ 0001a708 ] 00000001          *   --HOLE-- [fill = 20]

.text.25     0     00034e14  [ 0001a70a ] 000000a8          *   
                   00034e14  [ 0001a70a ] 00000056          *   ezdsp5535.obj (.text)
                   00034e6a  [ 0001a735 ] 00000050          *   rts55x.lib : printf.obj (.text)
                   00034eba  [ 0001a75d ] 00000002          *   --HOLE-- [fill = 20]

.text.26     0     00034ebc  [ 0001a75e ] 00000380          *   
                   00034ebc  [ 0001a75e ] 0000004e          *   rtc.obj (.text:retain)
                   00034f0a  [ 0001a785 ] 0000004d          *   rts55x.lib : autoinit.obj (.text)
                   00034f57  [ 0001a7ab ] 00000001          *   --HOLE-- [fill = 20]
                   00034f58  [ 0001a7ac ] 0000004c          *   timer.obj (.text)
                   00034fa4  [ 0001a7d2 ] 0000004b          *   rts55x.lib : args_main.obj (.text)
                   00034fef  [ 0001a7f7+] 0000004b          *              : remli.obj (.text)
                   0003503a  [ 0001a81d ] 00000048          *              : divli.obj (.text)
                   00035082  [ 0001a841 ] 0000003f          *              : memcpy.obj (.text)
                   000350c1  [ 0001a860+] 0000003e          *              : exit.obj (.text)
                   000350ff  [ 0001a87f+] 00000034          *              : boot.obj (.text)
                   00035133  [ 0001a899+] 0000002a          *              : fixdi.obj (.text)
                   0003515d  [ 0001a8ae+] 0000002a          *              : udiv.obj (.text)
                   00035187  [ 0001a8c3+] 00000023          *              : memccpy.obj (.text)
                   000351aa  [ 0001a8d5 ] 0000001a          *              : isinf.obj (.text)
                   000351c4  [ 0001a8e2 ] 00000013          *              : lmpy.obj (.text)
                   000351d7  [ 0001a8eb+] 00000012          *              : _lock.obj (.text)
                   000351e9  [ 0001a8f4+] 00000011          *              : memset.obj (.text)
                   000351fa  [ 0001a8fd ] 00000011          *              : strlen.obj (.text)
                   0003520b  [ 0001a905+] 00000010          *              : negd.obj (.text)
                   0003521b  [ 0001a90d+] 0000000e          *              : fltud.obj (.text)
                   00035229  [ 0001a914+] 0000000a          *              : remove.obj (.text)
                   00035233  [ 0001a919+] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   0003523a  [ 0001a91d ] 00000002          *   --HOLE-- [fill = 20]

.cinit       0   [ 00040000 ]  00020000          *   00000313   
                 [ 00040000 ]  00020000          *   000000dc   dma.obj (.cinit)
                 [ 000401b8 ]  000200dc          *   00000061   port.obj (.cinit)
                 [ 0004027a ]  0002013d          *   0000003d   tasks_sysStk.obj (.cinit)
                 [ 000402f4 ]  0002017a          *   00000039   main.obj (.cinit)
                 [ 00040366 ]  000201b3          *   0000002d   rts55x.lib : lowlev.obj (.cinit)
                 [ 000403c0 ]  000201e0          *   0000002a              : defs.obj (.cinit)
                 [ 00040414 ]  0002020a          *   0000001f   dynamic.obj (.cinit)
                 [ 00040452 ]  00020229          *   00000018   croutine.obj (.cinit)
                 [ 00040482 ]  00020241          *   00000015   csl_mmcsd_ataIf.obj (.cinit)
                 [ 000404ac ]  00020256          *   00000014   blocktim.obj (.cinit)
                 [ 000404d4 ]  0002026a          *   00000013   QueueOverwrite.obj (.cinit)
                 [ 000404fa ]  0002027d          *   00000010   timer.obj (.cinit)
                 [ 0004051a ]  0002028d          *   0000000e   QPeek.obj (.cinit)
                 [ 00040536 ]  0002029b          *   0000000d   ParTest.obj (.cinit)
                 [ 00040550 ]  000202a8          *   0000000c   ezdsp5535_sar.obj (.cinit)
                 [ 00040568 ]  000202b4          *   0000000c   semtest.obj (.cinit)
                 [ 00040580 ]  000202c0          *   0000000a   rts55x.lib : _lock.obj (.cinit)
                 [ 00040594 ]  000202ca          *   0000000a              : exit.obj (.cinit)
                 [ 000405a8 ]  000202d4          *   00000009   flash.obj (.cinit)
                 [ 000405ba ]  000202dd          *   00000009   heap_1.obj (.cinit)
                 [ 000405cc ]  000202e6          *   00000008   PollQ.obj (.cinit)
                 [ 000405dc ]  000202ee          *   00000008   csl_i2s.obj (.cinit)
                 [ 000405ec ]  000202f6          *   00000008   rtc.obj (.cinit)
                 [ 000405fc ]  000202fe          *   00000004   flop.obj (.cinit)
                 [ 00040604 ]  00020302          *   00000004   i2s.obj (.cinit)
                 [ 0004060c ]  00020306          *   00000004   integer.obj (.cinit)
                 [ 00040614 ]  0002030a          *   00000004   rts55x.lib : fopen.obj (.cinit)
                 [ 0004061c ]  0002030e          *   00000004              : memory.obj (.cinit)
                 [ 00040624 ]  00020312          *   00000001   --HOLE-- [fill = 0]

.cio         0   [ 00040628 ]  00020314          *   00000120   UNINITIALIZED
                 [ 00040628 ]  00020314          *   00000120   rts55x.lib : trgmsg.obj (.cio)

.switch      0   [ 00040868 ]  00020434          *   000000e0   
                 [ 00040868 ]  00020434          *   00000022   csl_sdio.obj (.switch:_SDIO_eventDisable)
                 [ 000408ac ]  00020456          *   00000022   csl_sdio.obj (.switch:_SDIO_eventEnable)
                 [ 000408f0 ]  00020478          *   00000020   csl_dma.obj (.switch:_DMA_config)
                 [ 00040930 ]  00020498          *   00000020   csl_dma.obj (.switch:_DMA_getConfig)
                 [ 00040970 ]  000204b8          *   00000020   csl_dma.obj (.switch:_DMA_reset)
                 [ 000409b0 ]  000204d8          *   00000018   csl_usb.obj (.switch:_USB_coreEventProcessEp0)
                 [ 000409e0 ]  000204f0          *   00000014   rtc.obj (.switch:_NtoC)
                 [ 00040a08 ]  00020504          *   00000010   csl_msc.obj (.switch:_MSC_Bulk)

.text.27     0     00040a28  [ 00020514 ] 0000d8da          *   
                   00040a28  [ 00020514 ] 0000444f          *   csl_mmcsd.obj (.text)
                   00044e77  [ 0002273b ] 00000001          *   --HOLE-- [fill = 20]
                   00044e78  [ 0002273c ] 00002b4f          *   csl_msc.obj (.text)
                   000479c7  [ 00023ce3 ] 00000001          *   --HOLE-- [fill = 20]
                   000479c8  [ 00023ce4 ] 00002a24          *   csl_sdio.obj (.text)
                   0004a3ec  [ 000251f6 ] 000021d5          *   csl_usb.obj (.text)
                   0004c5c1  [ 000262e0+] 00000002          *   rts55x.lib : vectors.obj (.text)
                   0004c5c3  [ 000262e1 ] 00000001          *   --HOLE-- [fill = 20]
                   0004c5c4  [ 000262e2 ] 00001d3d          *   tasks_sysStk.obj (.text)
                   0004e301  [ 00027180 ] 00000001          *   --HOLE-- [fill = 20]

.text.28     0     0004e304  [ 00027182 ] 00001af8          *   
                   0004e304  [ 00027182 ] 000018ac          *   csl_dma.obj (.text)
                   0004fbb0  [ 00027dd8 ] 00000236          *   QueueOverwrite.obj (.text)
                   0004fde6  [ 00027ef3 ] 00000014          *   rts55x.lib : subd.obj (.text)
                   0004fdfa  [ 00027efd ] 00000002          *   --HOLE-- [fill = 20]

vectors      0     0004fe00  [ 00027f00 ] 00000200          *   
                   0004fe00  [ 00027f00 ] 00000100          *   rts55x.lib : vectors.obj (vectors)
                   0004ff00  [ 00027f80 ] 00000100          *   vectors.obj (vectors)


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
ffffffff                .bss
ffffffff                .data
ffffffff                .text
00035234                C$$EXIT
00034365                C$$IO$$
000351c4                I$$LMPY
0003515d                I$$UDIV
00035172                I$$UMOD
00025d98                _AC_Close
00025dd4                _AC_Ctrl
00026068                _AC_GetactivityFlagStatus
00026084                _AC_GetsuspendFlagStatus
00025fcc                _AC_Iso
00025b50                _AC_Open
0002609c                _AC_initDescriptors
00026600                _AC_reqGetCurrent
0002634c                _AC_reqGetDescriptor
00026708                _AC_reqGetMaximum
000266c4                _AC_reqGetMinimum
0002674c                _AC_reqGetResolution
00026524                _AC_reqSetCurrent
00026790                _AC_reqSetInterface
000315e0                _AIC3254_init
            000030f8    _ATA_No_Swap
0002c4e4                _BlinkLED
            00003f41    _Buf_Address
            00004021    _Buf_day
            0000401e    _Buf_hour
            0000401b    _Buf_min
            00004024    _Buf_month
            00004018    _Buf_sec
            00004027    _Buf_year
00026ad4                _CDC_Close
00026b10                _CDC_GetactivityFlagStatus
00026b28                _CDC_GetsuspendFlagStatus
000268dc                _CDC_Open
00026900                _CDC_OpenFullspeed
00026f3c                _CDC_bulkInHandler
00026e3c                _CDC_bulkOutHandler
00026b40                _CDC_eventHandler
0002722c                _CDC_getData
000272bc                _CDC_putData
0002c4c8                _ConfigPort
            0000402b    _Conunt_RTC
00024de8                _DAT_close
00024f7c                _DAT_copy
00025478                _DAT_fill
00024d10                _DAT_open
00025988                _DAT_wait
            00003fdc    _DBSTAT_HIGH
            00003fdb    _DBSTAT_LOW
            000039d8    _DMA_Count
            000039db    _DMA_Done
0004e428                _DMA_close
0004e448                _DMA_config
0004f01c                _DMA_getConfig
0004fb04                _DMA_getLastTransferType
0004e304                _DMA_init
0004e33c                _DMA_open
0004f7a0                _DMA_reset
0004f58c                _DMA_start
0004f69c                _DMA_stop
0004fa8c                _DMA_swapWords
0003454c                _EVM5515_UART_getChar
00034534                _EVM5515_UART_putChar
000348bc                _EZDSP5535_GPIO_getInput
00034850                _EZDSP5535_GPIO_init
0003487c                _EZDSP5535_GPIO_setDirection
000348a0                _EZDSP5535_GPIO_setOutput
000346a4                _EZDSP5535_I2C_init
00034710                _EZDSP5535_I2C_read
000346dc                _EZDSP5535_I2C_reset
000346e8                _EZDSP5535_I2C_write
00033c68                _EZDSP5535_I2S_close
00033b68                _EZDSP5535_I2S_init
00033bc4                _EZDSP5535_I2S_readLeft
00033c28                _EZDSP5535_I2S_readRight
00033bf8                _EZDSP5535_I2S_writeLeft
00033c4c                _EZDSP5535_I2S_writeRight
00032a0c                _EZDSP5535_LED_getall
000329d4                _EZDSP5535_LED_init
00032b08                _EZDSP5535_LED_off
00032ad0                _EZDSP5535_LED_on
00032a60                _EZDSP5535_LED_setall
00032b3c                _EZDSP5535_LED_toggle
00033360                _EZDSP5535_OSD9616_init
00033314                _EZDSP5535_OSD9616_multiSend
00033444                _EZDSP5535_OSD9616_printLetter
000332ec                _EZDSP5535_OSD9616_send
000336d8                _EZDSP5535_SAR_getKey
00033610                _EZDSP5535_SAR_init
0002ec04                _EZDSP5535_SDCARD_close
0002e7f4                _EZDSP5535_SDCARD_init
0002eb9c                _EZDSP5535_SDCARD_read
0002ebd0                _EZDSP5535_SDCARD_write
0003060c                _EZDSP5535_SPIFLASH_erase
00030564                _EZDSP5535_SPIFLASH_init
00030710                _EZDSP5535_SPIFLASH_read
000305c8                _EZDSP5535_SPIFLASH_status
000307c0                _EZDSP5535_SPIFLASH_write
000344c4                _EZDSP5535_UART_open
00032b9c                _EZDSP5535_XF_get
00032b90                _EZDSP5535_XF_off
00032b84                _EZDSP5535_XF_on
00032bac                _EZDSP5535_XF_toggle
00034e5c                _EZDSP5535_init
00034e14                _EZDSP5535_wait
00034e48                _EZDSP5535_waitusec
            000039d9    _Error_Count_L
            000039da    _Error_Count_R
            0000402a    _Flag_RTC
0002bf4c                _GPIO_clearInt
0002ba9c                _GPIO_close
0002bac0                _GPIO_config
0002bcf8                _GPIO_configBit
0002be40                _GPIO_disableInt
0002bec0                _GPIO_enableInt
0002bb48                _GPIO_getConfig
0002ba58                _GPIO_open
0002bbd0                _GPIO_read
0002c060                _GPIO_reset
0002bfd8                _GPIO_statusBit
0002bc54                _GPIO_write
00031134                _GPT_close
00031244                _GPT_config
00031208                _GPT_getCnt
00030ff4                _GPT_open
000310b8                _GPT_reset
000311ac                _GPT_start
000311dc                _GPT_stop
0002c51c                _GenerateAudioTone
            0000408e    _GpioObj
0002e796                _HOSTclock
0002e72b                _HOSTclose
0002e676                _HOSTlseek
0002e5d7                _HOSTopen
0002e54a                _HOSTread
0002e49c                _HOSTrename
0002e43e                _HOSTtime
0002e3d4                _HOSTunlink
0002e347                _HOSTwrite
0002755c                _I2C_config
00027f30                _I2C_eventDisable
00027dfc                _I2C_eventEnable
000276c4                _I2C_getConfig
000280e0                _I2C_getEventId
000274b0                _I2C_init
00027bdc                _I2C_read
00028050                _I2C_setCallback
0002779c                _I2C_setup
00027998                _I2C_write
            00003ee1    _I2S_RCV_L
            00003f11    _I2S_RCV_R
00029b94                _I2S_close
00029768                _I2S_open
00029c40                _I2S_read
0002a054                _I2S_reset
000298ac                _I2S_setup
0002a100                _I2S_transEnable
00029efc                _I2S_write
0002de1c                _IRQ_clear
0002de88                _IRQ_clearAll
0002de98                _IRQ_config
0002dfa8                _IRQ_disable
0002e028                _IRQ_disableAll
0002e038                _IRQ_enable
0002e134                _IRQ_getArg
0002df20                _IRQ_getConfig
0002e280                _IRQ_globalDisable
0002e29c                _IRQ_globalEnable
0002e2b8                _IRQ_globalRestore
0002dd94                _IRQ_init
0002e1ac                _IRQ_map
00034738                _IRQ_plug
0002e0c4                _IRQ_restore
0002e178                _IRQ_setArg
0002e1d8                _IRQ_setVecs
0002e20c                _IRQ_test
0002c460                _InitSystem
0002b218                _LCD_close
0002aec8                _LCD_configDMA
0002aa00                _LCD_init
0002aa28                _LCD_open
0002aa6c                _LCD_setup
            00004094    _LED_Blink_ctr
0002c63c                _LED_TaskBlue
0002c664                _LED_TaskRed
00030e80                _MEM_disablePartialRetentionMode
00030cf4                _MEM_disableRetentionMode
00030d38                _MEM_enablePartialRetentionMode
00030cb0                _MEM_enableRetentionMode
00030fe0                _MEM_getmSDRAMClock
00030cac                _MEM_init
00030fa4                _MEM_setmSDRAMClock
00028bc4                _MMC_busyStatusCheck
00044db4                _MMC_checkReadDmaDone
00040d90                _MMC_clearResponse
00040c70                _MMC_close
00028bac                _MMC_commandReadyStatusCheck
000414c8                _MMC_config
00028bb8                _MMC_dataReadyStatusCheck
00041818                _MMC_deselectCard
000412e0                _MMC_drrdy
00041328                _MMC_dxrdy
00041108                _MMC_eventDisable
00040f0c                _MMC_eventEnable
00028be0                _MMC_file_system_format
00028c08                _MMC_flushFat
000424b4                _MMC_getCardCsd
00044b8c                _MMC_getCardStatus
00041564                _MMC_getConfig
00040d58                _MMC_getNumberOfCards
00028bd0                _MMC_getSerialID
000413b0                _MMC_getStatus
00028c00                _MMC_get_date
00028c04                _MMC_get_mod_date
00028bfc                _MMC_get_mod_time
00028bf8                _MMC_get_time
00040eb0                _MMC_ierDisable
00040e6c                _MMC_ierEnable
00040a28                _MMC_init
000280fc                _MMC_initState
00040ee4                _MMC_intEnable
00028520                _MMC_issueReadCommand
00040a60                _MMC_open
00042fe4                _MMC_read
00028918                _MMC_readNSectors
000287c0                _MMC_readNextNWords
000286dc                _MMC_readNextWord
0002874c                _MMC_readNextWord1
00028240                _MMC_readWriteControl
00028ac8                _MMC_read_CID
00028b34                _MMC_read_CSD
00028bec                _MMC_reset
00041370                _MMC_saveStatus
000418e8                _MMC_selectCard
000420f0                _MMC_sendAllCID
00041604                _MMC_sendCmd
000416b8                _MMC_sendGoIdle
00041e78                _MMC_sendOpCond
00044854                _MMC_setBlockLength
00040d18                _MMC_setCallBack
00040ce4                _MMC_setCardPtr
00040cb0                _MMC_setCardType
0004469c                _MMC_setDataTransferCallback
000446ec                _MMC_setDmaChanConfig
0004463c                _MMC_setDmaHandle
000447cc                _MMC_setEndianMode
00041f1c                _MMC_setRca
000448ec                _MMC_setWriteBlkEraseCnt
00041414                _MMC_setupNative
00041740                _MMC_stop
00043a00                _MMC_write
000289f0                _MMC_writeNSectors
00028830                _MMC_writeSector
00028ba0                _MMC_writeSectorFlush
00045dec                _MSC_Bulk
000459c8                _MSC_Close
00045bf4                _MSC_Ctrl
00046680                _MSC_ExecuteRead
00046a74                _MSC_ExecuteWrite
00045ee8                _MSC_GetLunLockedStatus
00045f18                _MSC_GetactivityFlagStatus
00045f34                _MSC_GetsuspendFlagStatus
0004724c                _MSC_HandlePreventAllowMediaRemoval
000473f0                _MSC_HandleReadCapacity
000463dc                _MSC_HandleStateWaitForCBW
00047028                _MSC_HandleTestUnitReady
00045658                _MSC_Open
0004567c                _MSC_OpenFullspeed
00045a04                _MSC_SetLunAttr
0004794c                _MSC_handleDataDirMisMatch
00047878                _MSC_reqBotMscReset
00047640                _MSC_reqGetDescriptor
000478e4                _MSC_sendCswWithPhaseError
000231e0                _NAND_checkCommandStatus
000233b4                _NAND_disableHwECC
0002328c                _NAND_enableHwECC
00022fcc                _NAND_getBankInfo
00023ac0                _NAND_getIntrNum
000239a0                _NAND_hasCacheProg
000239d0                _NAND_hasCopyBack
00023940                _NAND_hasRandomRead
00023970                _NAND_hasRandomWrite
00022a1c                _NAND_init
00023ba8                _NAND_intrClear
00023a60                _NAND_intrDisable
00023a00                _NAND_intrEnable
00023ae0                _NAND_intrReadAT
00023b20                _NAND_intrReadLT
00023b64                _NAND_intrReadWR
000230cc                _NAND_isStatusWriteProtected
0002349c                _NAND_readECC
00023650                _NAND_readNBytes
000231b4                _NAND_sendCommand
00023248                _NAND_setAddress
00023090                _NAND_setLatchEnableOffset
00022ab0                _NAND_setup
00023764                _NAND_writeNBytes
00031ac0                _PLL_bypass
00031934                _PLL_config
00031a58                _PLL_enable
000318fc                _PLL_init
00031b10                _PLL_reset
0004ff00                _RST
00034ebc                _RTC_Isr
0002a8e4                _RTC_bcdToDec
0002a214                _RTC_config
0002a8a4                _RTC_decToBcd
0002a79c                _RTC_eventDisable
0002a6b0                _RTC_eventEnable
0002a300                _RTC_getConfig
0002a4e8                _RTC_getDate
0002a850                _RTC_getEventId
0002a42c                _RTC_getTime
0002a1d8                _RTC_reset
0002a528                _RTC_setAlarm
0002a924                _RTC_setCallback
0002a9b4                _RTC_setCompensation
0002a478                _RTC_setDate
0002a5fc                _RTC_setPeriodicInterval
0002a3b0                _RTC_setTime
0002a1e8                _RTC_start
0002a20c                _RTC_stop
            00003978    _RcvL_Sine
            000039a8    _RcvR_Sine
0004fe00                _Reset
000291d0                _SAR_A2DMeasParamSet
0002964c                _SAR_GPODirSet
00028d3c                _SAR_chanClose
00028dc0                _SAR_chanConfig
000290c0                _SAR_chanCycSet
00028cbc                _SAR_chanInit
00028cd8                _SAR_chanOpen
00028eac                _SAR_chanSetup
00028c9c                _SAR_deInit
00028e38                _SAR_getConfig
00029728                _SAR_getStatus
00028c3c                _SAR_init
0002918c                _SAR_readData
00029110                _SAR_startConversion
00029144                _SAR_stopConversion
00048960                _SDIO_clearResponse
00047ad4                _SDIO_close
00047afc                _SDIO_config
00048574                _SDIO_deselectCard
00047bd4                _SDIO_detectCard
00048d38                _SDIO_eventDisable
00048b10                _SDIO_eventEnable
000484ac                _SDIO_getRca
000487cc                _SDIO_getResponse
00048aa4                _SDIO_getSdioStatus
00048a3c                _SDIO_getStatus
000479c8                _SDIO_init
00047f40                _SDIO_initCard
00047a08                _SDIO_open
00049a50                _SDIO_readBlocks
000491cc                _SDIO_readBytes
00048fa0                _SDIO_readSingleByte
00048f68                _SDIO_readWaitDisable
00048f30                _SDIO_readWaitEnable
000483c4                _SDIO_resetCard
00048634                _SDIO_selectCard
000486f8                _SDIO_sendCommand
0004a364                _SDIO_setClock
0004a2e4                _SDIO_setEndianMode
00049e90                _SDIO_writeBlocks
00049610                _SDIO_writeBytes
000490cc                _SDIO_writeSingleByte
00044c88                _SD_configurePullup
00042908                _SD_getCardCsd
000422c8                _SD_sendAllCID
00041ff4                _SD_sendRca
00044a1c                _SD_setBusWidth
0002c804                _SPI_close
0002c830                _SPI_config
0002ccb4                _SPI_dataTransaction
0002cab8                _SPI_deInit
0002c76c                _SPI_init
0002c7d0                _SPI_open
0002cae4                _SPI_read
0002cbc8                _SPI_write
            00003fde    _STATUS0_HIGH
            00003fdd    _STATUS0_LOW
            00003fe0    _STATUS1_HIGH
            00003fdf    _STATUS1_LOW
            00003fe2    _STATUS2_HIGH
            00003fe1    _STATUS2_LOW
0002c4d8                _SYS_GlobalIntDisable
0002c4d0                _SYS_GlobalIntEnable
            0000407c    _SarHandle
            00004078    _SarObj
00034f9c                _StartTimer0
00034f58                _Timer0Init
            000040a4    _Timer0_Int_CTR
            000040a5    _Timer2_Int_CTR
00033a3c                _Timer_isr
000241f8                _UART_config
00024538                _UART_eventDisable
000244a0                _UART_eventEnable
00024878                _UART_fgetc
000249a0                _UART_fgets
00024918                _UART_fputc
00024ad0                _UART_fputs
00024be8                _UART_getConfig
00024bc0                _UART_getEventId
00023c94                _UART_init
000245c8                _UART_read
0002440c                _UART_reset
00024454                _UART_resetOff
00024ca8                _UART_setCallback
00023d50                _UART_setup
00024300                _UART_setupBaudRate
000246f4                _UART_write
0004bb94                _USB_abortAllTransaction
0004ba34                _USB_abortTransaction
0004b490                _USB_bytesRemaining
0004b698                _USB_clearEndptStall
0004bbe8                _USB_connectDev
0004c108                _USB_coreEventProcessEp0
0004bc1c                _USB_disconnectDev
0004b904                _USB_epNumToHandle
0004bf84                _USB_findFifoSize
0004bf2c                _USB_getDataCountReadFromFifo
0004b880                _USB_getEndptStall
0004b0bc                _USB_getEvents
0004bd2c                _USB_getFrameNo
0004bed8                _USB_getMaxPower
0004bc7c                _USB_getRemoteWakeupStat
0004b1a4                _USB_getSetupPacket
0004a680                _USB_init
0004acd4                _USB_initEndptObj
0004bdf8                _USB_initPLL
0004b408                _USB_isTransactionDone
0004bc94                _USB_issueRemoteWakeup
0004b134                _USB_peekEvents
0004b24c                _USB_postTransaction
0004aaa4                _USB_resetDev
0004bd8c                _USB_selfwakeup
0004bce4                _USB_setDevAddr
0004bef8                _USB_setFullSpeedMode
0004be7c                _USB_setParams
0004bc4c                _USB_setRemoteWakeup
0004b524                _USB_stallEndpt
0004bd48                _USB_suspendDevice
0004ff00                _VECSTART
000321cc                _WDTIM_close
00032244                _WDTIM_config
0003219c                _WDTIM_getCnt
000322b0                _WDTIM_getConfig
00032094                _WDTIM_open
00032210                _WDTIM_service
0003210c                _WDTIM_start
00032154                _WDTIM_stop
            000038b8    _XmitL_Sine_1K
            000038e8    _XmitL_Sine_2K
            00003918    _XmitR_Sine_1K
            00003948    _XmitR_Sine_2K
            00020314    __CIOBUF_
            00001060    __STACK_END
00002000                __STACK_SIZE
00005000                __SYSMEM_SIZE
00001000                __SYSSTACK_SIZE
00000001                __TI_args_main
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
            00020000    ___cinit__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
000351aa                ___isinf
ffffffff                ___pinit__
ffffffff                ___text__
00032558                __addd
00034fa4                __args_main
00031f35                __cleanup
            0000409e    __cleanup_ptr
00032d5d                __cmpd
            00006bf2    __ctypes_
00030196                __divd
0003503a                __divli
00032523                __divlli
0003515d                __divu
00034566                __divul
0003242f                __divull
000341ee                __doflush
            000040a0    __dtors_ptr
00032d29                __eqld
00035133                __fixdi
00034bac                __fixdli
00034cf3                __fltlid
0003521b                __fltud
00034db6                __fltuld
00034a51                __frcmpyd
00034ac7                __frcmpyd_div
            00003af4    __ft_end
            000039dc    __ftable
00032cdf                __geqd
00032c94                __gtrd
00032c47                __leqd
            0000409a    __lock
00032bff                __lssd
000338ef                __mpyd
000351c4                __mpyli
00032377                __mpylli
0003520b                __negd
00032bcb                __neqd
000351e7                __nop
00021362                __printfi
000340c2                __rd_ok
000351df                __register_lock
000351d7                __register_unlock
00034fef                __remli
00032348                __remlli
00035172                __remu
00034b3a                __remul
000322fa                __remull
            00000060    __stack
0004fde6                __subd
            000040ac    __sys_memory
            00001060    __sysstack
            00003a54    __tmpnams
            0000409c    __unlock
00034042                __wrt_ok
00035233                _abort
0002dca2                _add_device
00034d5a                _atoi
00034f0a                _auto_init
000350ff                _c_int00
            000030f0    _cached_phySector0
            000030f2    _cached_phySector1
            000030f4    _cached_phySector2
            000030f6    _cached_phySector3
0002f158                _calloc
            00003d6a    _cardAddr
0002f150                _chkheap
0002dc2f                _close
00033e48                _convert_number_to_string
00031ddc                _disable_i2s0
00031dea                _disable_i2s1
00031df8                _disable_i2s2
00031e06                _disable_i2s3
000329c4                _enable_dma_int
00031da4                _enable_i2s0
00031db2                _enable_i2s1
00031dc0                _enable_i2s2
00031dce                _enable_i2s3
00033d80                _enable_rtc_second_int
000350c1                _exit
            00003fe9    _f1KToneOn
            00003fea    _f2KToneOn
            00003fe8    _fSineWave
            000040a2    _fTimer
            000040a3    _fTimer02
000349d6                _fclose
00034257                _fflush
0002dc26                _find_registered_device
            00003fd6    _first_flag
            00003fd2    _first_save_xsp
            00003fd4    _first_save_xssp
00032058                _fopen
0003441b                _fputc
0003378c                _fputs
0002ecc9                _free
0002f0fa                _free_memory
00031f8f                _freopen
            00003faa    _fsError
00034c88                _fseek
            000037d2    _gBulkInTransfer
            000037e0    _gBulkOutTransfer
            000037c4    _gCtrlTransfer
            00003818    _gEpStatus
            0000402c    _gI2cObj
            0000380a    _gIntInTransfer
            000037ee    _gIsoInTransfer
            000037fc    _gIsoOutTransfer
            00002cee    _gNextPhySector
            00002bec    _gReadBuf
            000036fc    _gUsbContext
            000038a8    _gUsbEpHandle
            00002cec    _gWordCount
            00002cf0    _gWriteBuf
0002e2cc                _getenv
            00004090    _hGpio
            000040aa    _hI2s
            00003c06    _hSpi
            00004016    _hUart
            0000403c    _i2cHandle
00031b7c                _i2s0_read_CR
00031bc4                _i2s0_read_INTR
00031bca                _i2s0_read_INT_MASK
00031bd6                _i2s0_read_RXL_LSW
00031be2                _i2s0_read_RXL_MSW
00031bee                _i2s0_read_RXR_LSW
00031bfa                _i2s0_read_RXR_MSW
00031b88                _i2s0_read_SRGR
00031b94                _i2s0_read_TXL_LSW
00031ba0                _i2s0_read_TXL_MSW
00031bac                _i2s0_read_TXR_LSW
00031bb8                _i2s0_read_TXR_MSW
00031b82                _i2s0_write_CR
00031bd0                _i2s0_write_INT_MASK
00031bdc                _i2s0_write_RXL_LSW
00031be8                _i2s0_write_RXL_MSW
00031bf4                _i2s0_write_RXR_LSW
00031c00                _i2s0_write_RXR_MSW
00031b8e                _i2s0_write_SRGR
00031b9a                _i2s0_write_TXL_LSW
00031ba6                _i2s0_write_TXL_MSW
00031bb2                _i2s0_write_TXR_LSW
00031bbe                _i2s0_write_TXR_MSW
00031c06                _i2s1_read_CR
00031c4e                _i2s1_read_INTR
00031c54                _i2s1_read_INT_MASK
00031c60                _i2s1_read_RXL_LSW
00031c6c                _i2s1_read_RXL_MSW
00031c78                _i2s1_read_RXR_LSW
00031c84                _i2s1_read_RXR_MSW
00031c12                _i2s1_read_SRGR
00031c1e                _i2s1_read_TXL_LSW
00031c2a                _i2s1_read_TXL_MSW
00031c36                _i2s1_read_TXR_LSW
00031c42                _i2s1_read_TXR_MSW
00031c0c                _i2s1_write_CR
00031c5a                _i2s1_write_INT_MASK
00031c66                _i2s1_write_RXL_LSW
00031c72                _i2s1_write_RXL_MSW
00031c7e                _i2s1_write_RXR_LSW
00031c8a                _i2s1_write_RXR_MSW
00031c18                _i2s1_write_SRGR
00031c24                _i2s1_write_TXL_LSW
00031c30                _i2s1_write_TXL_MSW
00031c3c                _i2s1_write_TXR_LSW
00031c48                _i2s1_write_TXR_MSW
00031c90                _i2s2_read_CR
00031cd8                _i2s2_read_INTR
00031cde                _i2s2_read_INT_MASK
00031cea                _i2s2_read_RXL_LSW
00031cf6                _i2s2_read_RXL_MSW
00031d02                _i2s2_read_RXR_LSW
00031d0e                _i2s2_read_RXR_MSW
00031c9c                _i2s2_read_SRGR
00031ca8                _i2s2_read_TXL_LSW
00031cb4                _i2s2_read_TXL_MSW
00031cc0                _i2s2_read_TXR_LSW
00031ccc                _i2s2_read_TXR_MSW
00031c96                _i2s2_write_CR
00031ce4                _i2s2_write_INT_MASK
00031cf0                _i2s2_write_RXL_LSW
00031cfc                _i2s2_write_RXL_MSW
00031d08                _i2s2_write_RXR_LSW
00031d14                _i2s2_write_RXR_MSW
00031ca2                _i2s2_write_SRGR
00031cae                _i2s2_write_TXL_LSW
00031cba                _i2s2_write_TXL_MSW
00031cc6                _i2s2_write_TXR_LSW
00031cd2                _i2s2_write_TXR_MSW
00031d1a                _i2s3_read_CR
00031d62                _i2s3_read_INTR
00031d68                _i2s3_read_INT_MASK
00031d74                _i2s3_read_RXL_LSW
00031d80                _i2s3_read_RXL_MSW
00031d8c                _i2s3_read_RXR_LSW
00031d98                _i2s3_read_RXR_MSW
00031d26                _i2s3_read_SRGR
00031d32                _i2s3_read_TXL_LSW
00031d3e                _i2s3_read_TXL_MSW
00031d4a                _i2s3_read_TXR_LSW
00031d56                _i2s3_read_TXR_MSW
00031d20                _i2s3_write_CR
00031d6e                _i2s3_write_INT_MASK
00031d7a                _i2s3_write_RXL_LSW
00031d86                _i2s3_write_RXL_MSW
00031d92                _i2s3_write_RXR_LSW
00031d9e                _i2s3_write_RXR_MSW
00031d2c                _i2s3_write_SRGR
00031d38                _i2s3_write_TXL_LSW
00031d44                _i2s3_write_TXL_MSW
00031d50                _i2s3_write_TXR_LSW
00031d5c                _i2s3_write_TXR_MSW
            0000407e    _keyCnt1
            0000407f    _keyCnt2
            00004086    _led_tsk_ctr
0002dbc0                _lseek
00034959                _ltoa
0002c0f0                _main
0002edfa                _malloc
0002f0a0                _max_free
            000030f9    _mem
0003436c                _mem_test
00035187                _memccpy
00035082                _memcpy
000351e9                _memset
0002ed95                _minit
            00003d1a    _mmcCardObj
            00003d6c    _mmcStatus
            00003d18    _mmcsdHandle
            00002ced    _nbuf_cached
0002b238                _oled_test
0002db01                _open
            00003fab    _ouError
            00003cd8    _pMmcsdContObj
00022960                _pcQueueGetName
0004d1c4                _pcTaskGetName
            00003fcc    _portFLAGS_INT_ENABLED
            00003fcd    _portFLAGS_INT_ENABLED_POPPED
            0000407b    _preKey
00034e6a                _printf
00033128                _prvSetupTimerInterrupt
0003441b                _putc
000344b2                _putchar
000338c1                _puts
00034120                _pvPortMalloc
0004dc00                _pvTaskIncrementMutexHeldCount
            00003f78    _pxCurrentCoRoutine
            00003df6    _pxCurrentTCB
00032f7c                _pxPortInitialiseStack
0002da53                _read
00034c1b                _readmsg
0002eeef                _realloc
00035229                _remove
0002da1d                _remove_device
0002d9c4                _rename
00033d8c                _reset_RTC
            00003fd7    _save_xar6
            00003fd8    _save_xar7
            00003fce    _save_xsp
            00003fd0    _save_xssp
            00003d48    _sdCardCsdObj
            00003d38    _sdCardIdObj
00032880                _set_dma0_ch0_i2s0_Lout
000327cc                _set_dma0_ch0_stop
00032958                _set_dma0_ch1_i2s0_Rout
000327fc                _set_dma0_ch1_stop
00032814                _set_dma1_ch0_i2s2_Lout
000327b4                _set_dma1_ch0_stop
000328ec                _set_dma1_ch1_i2s2_Rout
000327e4                _set_dma1_ch1_stop
000347f8                _set_i2s0_master
0003482c                _set_i2s0_slave
000347c4                _set_i2s2_master
00033e7c                _setvbuf
00033484                _spiflash_test
            00003df4    _stackStruct
000351fa                _strlen
            000036fb    _sysCtrlRegs
0002c5a8                _systemInit
            00003fe4    _tOne
            00003fe6    _tThree
            00003fe5    _tTwo
            00003fe3    _tZero
            00003fda    _tickIRQctr
            00004002    _uartObj
0004dc20                _ulTaskNotifyTake
0002d991                _unlink
            00003fe7    _usCriticalNesting
            000036fa    _usbRegisters
00033288                _uxListRemove
0002229c                _uxQueueMessagesWaiting
00022334                _uxQueueMessagesWaitingFromISR
000222e4                _uxQueueSpacesAvailable
0004d1bc                _uxTaskGetNumberOfTasks
0004d844                _uxTaskGetStackHighWaterMark
0004cafc                _uxTaskPriorityGet
0004cb44                _uxTaskPriorityGetFromISR
0004dbd0                _uxTaskResetEventItemValue
0002c394                _vApplicationIdleHook
0002c624                _vApplicationMallocFailedHook
0002c62c                _vApplicationStackOverflowHook
0002f68c                _vCoRoutineAddToDelayedList
0002f884                _vCoRoutineSchedule
0002cd28                _vCreateBlockTimeTasks
0002d800                _vEventGroupClearBitsCallback
0002d78c                _vEventGroupDelete
0002d7ec                _vEventGroupSetBitsCallback
0003313c                _vListInitialise
00033180                _vListInitialiseItem
000331e8                _vListInsert
00033194                _vListInsertEnd
00034608                _vParTestInitialise
0003460c                _vParTestSetLED
00034624                _vParTestToggleLED
00033124                _vPortEndScheduler
000341bc                _vPortFree
000341d8                _vPortInitialiseBlocks
0002fc59                _vPortYield
00022900                _vQueueAddToRegistry
00022354                _vQueueDelete
0004fd0c                _vQueueOverwritePeriodicISRDemo
000229bc                _vQueueUnregisterQueue
00030928                _vStartDynamicPriorityTasks
00033c7c                _vStartIntegerMathTasks
00033f64                _vStartLEDFlashTasks
0002fdc4                _vStartMathTasks
00032db8                _vStartPolledQueueTasks
0004fbb0                _vStartQueueOverwriteTask
0002f180                _vStartQueuePeekTasks
000312ec                _vStartSemaphoreTasks
0004cabc                _vTaskDelay
0004c9f8                _vTaskDelayUntil
0004c920                _vTaskDelete
0004d024                _vTaskEndScheduler
0004d610                _vTaskInternalSetTimeOutState
0004d6f8                _vTaskMissedYield
0004e110                _vTaskNotifyGiveFromISR
0004d3ec                _vTaskPlaceOnEventList
0004d41c                _vTaskPlaceOnUnorderedEventList
0004dac0                _vTaskPriorityDisinheritAfterTimeout
0004cb68                _vTaskPrioritySet
0004d51c                _vTaskRemoveFromUnorderedEventList
0004ce58                _vTaskResume
0004d5bc                _vTaskSetTimeOutState
0004cfb8                _vTaskStartScheduler
0004ccd8                _vTaskSuspend
0004d038                _vTaskSuspendAll
0004d34c                _vTaskSwitchContext
0002fad5                _vTickISR
            00003df2    _wall_clk_ctr
0002d84f                _write
000342b0                _writemsg
0002d28c                _xAreBlockTimeTestTasksStillRunning
00030c4c                _xAreDynamicPriorityTasksStillRunning
00033d50                _xAreIntegerMathsTaskStillRunning
0003015c                _xAreMathsTaskStillRunning
00032f50                _xArePollingQueuesStillRunning
0002f578                _xAreQueuePeekTasksStillRunning
00031590                _xAreSemaphoreTasksStillRunning
0002f5b0                _xCoRoutineCreate
0002f988                _xCoRoutineRemoveFromEventList
0002d5bc                _xEventGroupClearBits
0002d2dc                _xEventGroupCreate
0002d634                _xEventGroupGetBitsFromISR
0002d654                _xEventGroupSetBits
0002d304                _xEventGroupSync
0002d450                _xEventGroupWaitBits
            00004056    _xHighPriorityTask
            00004058    _xHighestPriorityTask
0004fcdc                _xIsQueueOverwriteTaskStillRunning
            00004054    _xMediumPriorityTask
000341e0                _xPortGetFreeHeapSize
0002f9d8                _xPortStartScheduler
0002274c                _xQueueCRReceive
00022864                _xQueueCRReceiveFromISR
000226b8                _xQueueCRSend
00022810                _xQueueCRSendFromISR
00021818                _xQueueCreateCountingSemaphore
0002174c                _xQueueCreateMutex
00021678                _xQueueGenericCreate
000215a4                _xQueueGenericReset
00021860                _xQueueGenericSend
00021a34                _xQueueGenericSendFromISR
00021b0c                _xQueueGiveFromISR
0002176c                _xQueueGiveMutexRecursive
00022614                _xQueueIsQueueEmptyFromISR
00022688                _xQueueIsQueueFullFromISR
00021fb4                _xQueuePeek
0002221c                _xQueuePeekFromISR
00021bd0                _xQueueReceive
00022168                _xQueueReceiveFromISR
            00003fac    _xQueueRegistry
00021d80                _xQueueSemaphoreTake
000217c4                _xQueueTakeMutexRecursive
            00004048    _xSuspendedTestQueue
0004d630                _xTaskCheckForTimeOut
0004c5c4                _xTaskCreate
0004ddf0                _xTaskGenericNotify
0004df7c                _xTaskGenericNotifyFromISR
0004d8dc                _xTaskGetCurrentTaskHandle
0004d168                _xTaskGetTickCount
0004d1a4                _xTaskGetTickCountFromISR
0004d1ec                _xTaskIncrementTick
0004e1f4                _xTaskNotifyStateClear
0004dcf4                _xTaskNotifyWait
0004d9fc                _xTaskPriorityDisinherit
0004d8f0                _xTaskPriorityInherit
0004d474                _xTaskRemoveFromEventList
0004d044                _xTaskResumeAll
0004cf18                _xTaskResumeFromISR
ffffffff                binit
            00020000    cinit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit
000348da                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000001                __TI_args_main
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
            00000060    __stack
00001000                __SYSSTACK_SIZE
00002000                __STACK_SIZE
            00001060    __STACK_END
            00001060    __sysstack
00005000                __SYSMEM_SIZE
            00002bec    _gReadBuf
            00002cec    _gWordCount
            00002ced    _nbuf_cached
            00002cee    _gNextPhySector
            00002cf0    _gWriteBuf
            000030f0    _cached_phySector0
            000030f2    _cached_phySector1
            000030f4    _cached_phySector2
            000030f6    _cached_phySector3
            000030f8    _ATA_No_Swap
            000030f9    _mem
            000036fa    _usbRegisters
            000036fb    _sysCtrlRegs
            000036fc    _gUsbContext
            000037c4    _gCtrlTransfer
            000037d2    _gBulkInTransfer
            000037e0    _gBulkOutTransfer
            000037ee    _gIsoInTransfer
            000037fc    _gIsoOutTransfer
            0000380a    _gIntInTransfer
            00003818    _gEpStatus
            000038a8    _gUsbEpHandle
            000038b8    _XmitL_Sine_1K
            000038e8    _XmitL_Sine_2K
            00003918    _XmitR_Sine_1K
            00003948    _XmitR_Sine_2K
            00003978    _RcvL_Sine
            000039a8    _RcvR_Sine
            000039d8    _DMA_Count
            000039d9    _Error_Count_L
            000039da    _Error_Count_R
            000039db    _DMA_Done
            000039dc    __ftable
            00003a54    __tmpnams
            00003af4    __ft_end
            00003c06    _hSpi
            00003cd8    _pMmcsdContObj
            00003d18    _mmcsdHandle
            00003d1a    _mmcCardObj
            00003d38    _sdCardIdObj
            00003d48    _sdCardCsdObj
            00003d6a    _cardAddr
            00003d6c    _mmcStatus
            00003df2    _wall_clk_ctr
            00003df4    _stackStruct
            00003df6    _pxCurrentTCB
            00003ee1    _I2S_RCV_L
            00003f11    _I2S_RCV_R
            00003f41    _Buf_Address
            00003f78    _pxCurrentCoRoutine
            00003faa    _fsError
            00003fab    _ouError
            00003fac    _xQueueRegistry
            00003fcc    _portFLAGS_INT_ENABLED
            00003fcd    _portFLAGS_INT_ENABLED_POPPED
            00003fce    _save_xsp
            00003fd0    _save_xssp
            00003fd2    _first_save_xsp
            00003fd4    _first_save_xssp
            00003fd6    _first_flag
            00003fd7    _save_xar6
            00003fd8    _save_xar7
            00003fda    _tickIRQctr
            00003fdb    _DBSTAT_LOW
            00003fdc    _DBSTAT_HIGH
            00003fdd    _STATUS0_LOW
            00003fde    _STATUS0_HIGH
            00003fdf    _STATUS1_LOW
            00003fe0    _STATUS1_HIGH
            00003fe1    _STATUS2_LOW
            00003fe2    _STATUS2_HIGH
            00003fe3    _tZero
            00003fe4    _tOne
            00003fe5    _tTwo
            00003fe6    _tThree
            00003fe7    _usCriticalNesting
            00003fe8    _fSineWave
            00003fe9    _f1KToneOn
            00003fea    _f2KToneOn
            00004002    _uartObj
            00004016    _hUart
            00004018    _Buf_sec
            0000401b    _Buf_min
            0000401e    _Buf_hour
            00004021    _Buf_day
            00004024    _Buf_month
            00004027    _Buf_year
            0000402a    _Flag_RTC
            0000402b    _Conunt_RTC
            0000402c    _gI2cObj
            0000403c    _i2cHandle
            00004048    _xSuspendedTestQueue
            00004054    _xMediumPriorityTask
            00004056    _xHighPriorityTask
            00004058    _xHighestPriorityTask
            00004078    _SarObj
            0000407b    _preKey
            0000407c    _SarHandle
            0000407e    _keyCnt1
            0000407f    _keyCnt2
            00004086    _led_tsk_ctr
            0000408e    _GpioObj
            00004090    _hGpio
            00004094    _LED_Blink_ctr
            0000409a    __lock
            0000409c    __unlock
            0000409e    __cleanup_ptr
            000040a0    __dtors_ptr
            000040a2    _fTimer
            000040a3    _fTimer02
            000040a4    _Timer0_Int_CTR
            000040a5    _Timer2_Int_CTR
            000040aa    _hI2s
            000040ac    __sys_memory
            00006bf2    __ctypes_
00021362                __printfi
000215a4                _xQueueGenericReset
00021678                _xQueueGenericCreate
0002174c                _xQueueCreateMutex
0002176c                _xQueueGiveMutexRecursive
000217c4                _xQueueTakeMutexRecursive
00021818                _xQueueCreateCountingSemaphore
00021860                _xQueueGenericSend
00021a34                _xQueueGenericSendFromISR
00021b0c                _xQueueGiveFromISR
00021bd0                _xQueueReceive
00021d80                _xQueueSemaphoreTake
00021fb4                _xQueuePeek
00022168                _xQueueReceiveFromISR
0002221c                _xQueuePeekFromISR
0002229c                _uxQueueMessagesWaiting
000222e4                _uxQueueSpacesAvailable
00022334                _uxQueueMessagesWaitingFromISR
00022354                _vQueueDelete
00022614                _xQueueIsQueueEmptyFromISR
00022688                _xQueueIsQueueFullFromISR
000226b8                _xQueueCRSend
0002274c                _xQueueCRReceive
00022810                _xQueueCRSendFromISR
00022864                _xQueueCRReceiveFromISR
00022900                _vQueueAddToRegistry
00022960                _pcQueueGetName
000229bc                _vQueueUnregisterQueue
00022a1c                _NAND_init
00022ab0                _NAND_setup
00022fcc                _NAND_getBankInfo
00023090                _NAND_setLatchEnableOffset
000230cc                _NAND_isStatusWriteProtected
000231b4                _NAND_sendCommand
000231e0                _NAND_checkCommandStatus
00023248                _NAND_setAddress
0002328c                _NAND_enableHwECC
000233b4                _NAND_disableHwECC
0002349c                _NAND_readECC
00023650                _NAND_readNBytes
00023764                _NAND_writeNBytes
00023940                _NAND_hasRandomRead
00023970                _NAND_hasRandomWrite
000239a0                _NAND_hasCacheProg
000239d0                _NAND_hasCopyBack
00023a00                _NAND_intrEnable
00023a60                _NAND_intrDisable
00023ac0                _NAND_getIntrNum
00023ae0                _NAND_intrReadAT
00023b20                _NAND_intrReadLT
00023b64                _NAND_intrReadWR
00023ba8                _NAND_intrClear
00023c94                _UART_init
00023d50                _UART_setup
000241f8                _UART_config
00024300                _UART_setupBaudRate
0002440c                _UART_reset
00024454                _UART_resetOff
000244a0                _UART_eventEnable
00024538                _UART_eventDisable
000245c8                _UART_read
000246f4                _UART_write
00024878                _UART_fgetc
00024918                _UART_fputc
000249a0                _UART_fgets
00024ad0                _UART_fputs
00024bc0                _UART_getEventId
00024be8                _UART_getConfig
00024ca8                _UART_setCallback
00024d10                _DAT_open
00024de8                _DAT_close
00024f7c                _DAT_copy
00025478                _DAT_fill
00025988                _DAT_wait
00025b50                _AC_Open
00025d98                _AC_Close
00025dd4                _AC_Ctrl
00025fcc                _AC_Iso
00026068                _AC_GetactivityFlagStatus
00026084                _AC_GetsuspendFlagStatus
0002609c                _AC_initDescriptors
0002634c                _AC_reqGetDescriptor
00026524                _AC_reqSetCurrent
00026600                _AC_reqGetCurrent
000266c4                _AC_reqGetMinimum
00026708                _AC_reqGetMaximum
0002674c                _AC_reqGetResolution
00026790                _AC_reqSetInterface
000268dc                _CDC_Open
00026900                _CDC_OpenFullspeed
00026ad4                _CDC_Close
00026b10                _CDC_GetactivityFlagStatus
00026b28                _CDC_GetsuspendFlagStatus
00026b40                _CDC_eventHandler
00026e3c                _CDC_bulkOutHandler
00026f3c                _CDC_bulkInHandler
0002722c                _CDC_getData
000272bc                _CDC_putData
000274b0                _I2C_init
0002755c                _I2C_config
000276c4                _I2C_getConfig
0002779c                _I2C_setup
00027998                _I2C_write
00027bdc                _I2C_read
00027dfc                _I2C_eventEnable
00027f30                _I2C_eventDisable
00028050                _I2C_setCallback
000280e0                _I2C_getEventId
000280fc                _MMC_initState
00028240                _MMC_readWriteControl
00028520                _MMC_issueReadCommand
000286dc                _MMC_readNextWord
0002874c                _MMC_readNextWord1
000287c0                _MMC_readNextNWords
00028830                _MMC_writeSector
00028918                _MMC_readNSectors
000289f0                _MMC_writeNSectors
00028ac8                _MMC_read_CID
00028b34                _MMC_read_CSD
00028ba0                _MMC_writeSectorFlush
00028bac                _MMC_commandReadyStatusCheck
00028bb8                _MMC_dataReadyStatusCheck
00028bc4                _MMC_busyStatusCheck
00028bd0                _MMC_getSerialID
00028be0                _MMC_file_system_format
00028bec                _MMC_reset
00028bf8                _MMC_get_time
00028bfc                _MMC_get_mod_time
00028c00                _MMC_get_date
00028c04                _MMC_get_mod_date
00028c08                _MMC_flushFat
00028c3c                _SAR_init
00028c9c                _SAR_deInit
00028cbc                _SAR_chanInit
00028cd8                _SAR_chanOpen
00028d3c                _SAR_chanClose
00028dc0                _SAR_chanConfig
00028e38                _SAR_getConfig
00028eac                _SAR_chanSetup
000290c0                _SAR_chanCycSet
00029110                _SAR_startConversion
00029144                _SAR_stopConversion
0002918c                _SAR_readData
000291d0                _SAR_A2DMeasParamSet
0002964c                _SAR_GPODirSet
00029728                _SAR_getStatus
00029768                _I2S_open
000298ac                _I2S_setup
00029b94                _I2S_close
00029c40                _I2S_read
00029efc                _I2S_write
0002a054                _I2S_reset
0002a100                _I2S_transEnable
0002a1d8                _RTC_reset
0002a1e8                _RTC_start
0002a20c                _RTC_stop
0002a214                _RTC_config
0002a300                _RTC_getConfig
0002a3b0                _RTC_setTime
0002a42c                _RTC_getTime
0002a478                _RTC_setDate
0002a4e8                _RTC_getDate
0002a528                _RTC_setAlarm
0002a5fc                _RTC_setPeriodicInterval
0002a6b0                _RTC_eventEnable
0002a79c                _RTC_eventDisable
0002a850                _RTC_getEventId
0002a8a4                _RTC_decToBcd
0002a8e4                _RTC_bcdToDec
0002a924                _RTC_setCallback
0002a9b4                _RTC_setCompensation
0002aa00                _LCD_init
0002aa28                _LCD_open
0002aa6c                _LCD_setup
0002aec8                _LCD_configDMA
0002b218                _LCD_close
0002b238                _oled_test
0002ba58                _GPIO_open
0002ba9c                _GPIO_close
0002bac0                _GPIO_config
0002bb48                _GPIO_getConfig
0002bbd0                _GPIO_read
0002bc54                _GPIO_write
0002bcf8                _GPIO_configBit
0002be40                _GPIO_disableInt
0002bec0                _GPIO_enableInt
0002bf4c                _GPIO_clearInt
0002bfd8                _GPIO_statusBit
0002c060                _GPIO_reset
0002c0f0                _main
0002c394                _vApplicationIdleHook
0002c460                _InitSystem
0002c4c8                _ConfigPort
0002c4d0                _SYS_GlobalIntEnable
0002c4d8                _SYS_GlobalIntDisable
0002c4e4                _BlinkLED
0002c51c                _GenerateAudioTone
0002c5a8                _systemInit
0002c624                _vApplicationMallocFailedHook
0002c62c                _vApplicationStackOverflowHook
0002c63c                _LED_TaskBlue
0002c664                _LED_TaskRed
0002c76c                _SPI_init
0002c7d0                _SPI_open
0002c804                _SPI_close
0002c830                _SPI_config
0002cab8                _SPI_deInit
0002cae4                _SPI_read
0002cbc8                _SPI_write
0002ccb4                _SPI_dataTransaction
0002cd28                _vCreateBlockTimeTasks
0002d28c                _xAreBlockTimeTestTasksStillRunning
0002d2dc                _xEventGroupCreate
0002d304                _xEventGroupSync
0002d450                _xEventGroupWaitBits
0002d5bc                _xEventGroupClearBits
0002d634                _xEventGroupGetBitsFromISR
0002d654                _xEventGroupSetBits
0002d78c                _vEventGroupDelete
0002d7ec                _vEventGroupSetBitsCallback
0002d800                _vEventGroupClearBitsCallback
0002d84f                _write
0002d991                _unlink
0002d9c4                _rename
0002da1d                _remove_device
0002da53                _read
0002db01                _open
0002dbc0                _lseek
0002dc26                _find_registered_device
0002dc2f                _close
0002dca2                _add_device
0002dd94                _IRQ_init
0002de1c                _IRQ_clear
0002de88                _IRQ_clearAll
0002de98                _IRQ_config
0002df20                _IRQ_getConfig
0002dfa8                _IRQ_disable
0002e028                _IRQ_disableAll
0002e038                _IRQ_enable
0002e0c4                _IRQ_restore
0002e134                _IRQ_getArg
0002e178                _IRQ_setArg
0002e1ac                _IRQ_map
0002e1d8                _IRQ_setVecs
0002e20c                _IRQ_test
0002e280                _IRQ_globalDisable
0002e29c                _IRQ_globalEnable
0002e2b8                _IRQ_globalRestore
0002e2cc                _getenv
0002e347                _HOSTwrite
0002e3d4                _HOSTunlink
0002e43e                _HOSTtime
0002e49c                _HOSTrename
0002e54a                _HOSTread
0002e5d7                _HOSTopen
0002e676                _HOSTlseek
0002e72b                _HOSTclose
0002e796                _HOSTclock
0002e7f4                _EZDSP5535_SDCARD_init
0002eb9c                _EZDSP5535_SDCARD_read
0002ebd0                _EZDSP5535_SDCARD_write
0002ec04                _EZDSP5535_SDCARD_close
0002ecc9                _free
0002ed95                _minit
0002edfa                _malloc
0002eeef                _realloc
0002f0a0                _max_free
0002f0fa                _free_memory
0002f150                _chkheap
0002f158                _calloc
0002f180                _vStartQueuePeekTasks
0002f578                _xAreQueuePeekTasksStillRunning
0002f5b0                _xCoRoutineCreate
0002f68c                _vCoRoutineAddToDelayedList
0002f884                _vCoRoutineSchedule
0002f988                _xCoRoutineRemoveFromEventList
0002f9d8                _xPortStartScheduler
0002fad5                _vTickISR
0002fc59                _vPortYield
0002fdc4                _vStartMathTasks
0003015c                _xAreMathsTaskStillRunning
00030196                __divd
00030564                _EZDSP5535_SPIFLASH_init
000305c8                _EZDSP5535_SPIFLASH_status
0003060c                _EZDSP5535_SPIFLASH_erase
00030710                _EZDSP5535_SPIFLASH_read
000307c0                _EZDSP5535_SPIFLASH_write
00030928                _vStartDynamicPriorityTasks
00030c4c                _xAreDynamicPriorityTasksStillRunning
00030cac                _MEM_init
00030cb0                _MEM_enableRetentionMode
00030cf4                _MEM_disableRetentionMode
00030d38                _MEM_enablePartialRetentionMode
00030e80                _MEM_disablePartialRetentionMode
00030fa4                _MEM_setmSDRAMClock
00030fe0                _MEM_getmSDRAMClock
00030ff4                _GPT_open
000310b8                _GPT_reset
00031134                _GPT_close
000311ac                _GPT_start
000311dc                _GPT_stop
00031208                _GPT_getCnt
00031244                _GPT_config
000312ec                _vStartSemaphoreTasks
00031590                _xAreSemaphoreTasksStillRunning
000315e0                _AIC3254_init
000318fc                _PLL_init
00031934                _PLL_config
00031a58                _PLL_enable
00031ac0                _PLL_bypass
00031b10                _PLL_reset
00031b7c                _i2s0_read_CR
00031b82                _i2s0_write_CR
00031b88                _i2s0_read_SRGR
00031b8e                _i2s0_write_SRGR
00031b94                _i2s0_read_TXL_LSW
00031b9a                _i2s0_write_TXL_LSW
00031ba0                _i2s0_read_TXL_MSW
00031ba6                _i2s0_write_TXL_MSW
00031bac                _i2s0_read_TXR_LSW
00031bb2                _i2s0_write_TXR_LSW
00031bb8                _i2s0_read_TXR_MSW
00031bbe                _i2s0_write_TXR_MSW
00031bc4                _i2s0_read_INTR
00031bca                _i2s0_read_INT_MASK
00031bd0                _i2s0_write_INT_MASK
00031bd6                _i2s0_read_RXL_LSW
00031bdc                _i2s0_write_RXL_LSW
00031be2                _i2s0_read_RXL_MSW
00031be8                _i2s0_write_RXL_MSW
00031bee                _i2s0_read_RXR_LSW
00031bf4                _i2s0_write_RXR_LSW
00031bfa                _i2s0_read_RXR_MSW
00031c00                _i2s0_write_RXR_MSW
00031c06                _i2s1_read_CR
00031c0c                _i2s1_write_CR
00031c12                _i2s1_read_SRGR
00031c18                _i2s1_write_SRGR
00031c1e                _i2s1_read_TXL_LSW
00031c24                _i2s1_write_TXL_LSW
00031c2a                _i2s1_read_TXL_MSW
00031c30                _i2s1_write_TXL_MSW
00031c36                _i2s1_read_TXR_LSW
00031c3c                _i2s1_write_TXR_LSW
00031c42                _i2s1_read_TXR_MSW
00031c48                _i2s1_write_TXR_MSW
00031c4e                _i2s1_read_INTR
00031c54                _i2s1_read_INT_MASK
00031c5a                _i2s1_write_INT_MASK
00031c60                _i2s1_read_RXL_LSW
00031c66                _i2s1_write_RXL_LSW
00031c6c                _i2s1_read_RXL_MSW
00031c72                _i2s1_write_RXL_MSW
00031c78                _i2s1_read_RXR_LSW
00031c7e                _i2s1_write_RXR_LSW
00031c84                _i2s1_read_RXR_MSW
00031c8a                _i2s1_write_RXR_MSW
00031c90                _i2s2_read_CR
00031c96                _i2s2_write_CR
00031c9c                _i2s2_read_SRGR
00031ca2                _i2s2_write_SRGR
00031ca8                _i2s2_read_TXL_LSW
00031cae                _i2s2_write_TXL_LSW
00031cb4                _i2s2_read_TXL_MSW
00031cba                _i2s2_write_TXL_MSW
00031cc0                _i2s2_read_TXR_LSW
00031cc6                _i2s2_write_TXR_LSW
00031ccc                _i2s2_read_TXR_MSW
00031cd2                _i2s2_write_TXR_MSW
00031cd8                _i2s2_read_INTR
00031cde                _i2s2_read_INT_MASK
00031ce4                _i2s2_write_INT_MASK
00031cea                _i2s2_read_RXL_LSW
00031cf0                _i2s2_write_RXL_LSW
00031cf6                _i2s2_read_RXL_MSW
00031cfc                _i2s2_write_RXL_MSW
00031d02                _i2s2_read_RXR_LSW
00031d08                _i2s2_write_RXR_LSW
00031d0e                _i2s2_read_RXR_MSW
00031d14                _i2s2_write_RXR_MSW
00031d1a                _i2s3_read_CR
00031d20                _i2s3_write_CR
00031d26                _i2s3_read_SRGR
00031d2c                _i2s3_write_SRGR
00031d32                _i2s3_read_TXL_LSW
00031d38                _i2s3_write_TXL_LSW
00031d3e                _i2s3_read_TXL_MSW
00031d44                _i2s3_write_TXL_MSW
00031d4a                _i2s3_read_TXR_LSW
00031d50                _i2s3_write_TXR_LSW
00031d56                _i2s3_read_TXR_MSW
00031d5c                _i2s3_write_TXR_MSW
00031d62                _i2s3_read_INTR
00031d68                _i2s3_read_INT_MASK
00031d6e                _i2s3_write_INT_MASK
00031d74                _i2s3_read_RXL_LSW
00031d7a                _i2s3_write_RXL_LSW
00031d80                _i2s3_read_RXL_MSW
00031d86                _i2s3_write_RXL_MSW
00031d8c                _i2s3_read_RXR_LSW
00031d92                _i2s3_write_RXR_LSW
00031d98                _i2s3_read_RXR_MSW
00031d9e                _i2s3_write_RXR_MSW
00031da4                _enable_i2s0
00031db2                _enable_i2s1
00031dc0                _enable_i2s2
00031dce                _enable_i2s3
00031ddc                _disable_i2s0
00031dea                _disable_i2s1
00031df8                _disable_i2s2
00031e06                _disable_i2s3
00031f35                __cleanup
00031f8f                _freopen
00032058                _fopen
00032094                _WDTIM_open
0003210c                _WDTIM_start
00032154                _WDTIM_stop
0003219c                _WDTIM_getCnt
000321cc                _WDTIM_close
00032210                _WDTIM_service
00032244                _WDTIM_config
000322b0                _WDTIM_getConfig
000322fa                __remull
00032348                __remlli
00032377                __mpylli
0003242f                __divull
00032523                __divlli
00032558                __addd
000327b4                _set_dma1_ch0_stop
000327cc                _set_dma0_ch0_stop
000327e4                _set_dma1_ch1_stop
000327fc                _set_dma0_ch1_stop
00032814                _set_dma1_ch0_i2s2_Lout
00032880                _set_dma0_ch0_i2s0_Lout
000328ec                _set_dma1_ch1_i2s2_Rout
00032958                _set_dma0_ch1_i2s0_Rout
000329c4                _enable_dma_int
000329d4                _EZDSP5535_LED_init
00032a0c                _EZDSP5535_LED_getall
00032a60                _EZDSP5535_LED_setall
00032ad0                _EZDSP5535_LED_on
00032b08                _EZDSP5535_LED_off
00032b3c                _EZDSP5535_LED_toggle
00032b84                _EZDSP5535_XF_on
00032b90                _EZDSP5535_XF_off
00032b9c                _EZDSP5535_XF_get
00032bac                _EZDSP5535_XF_toggle
00032bcb                __neqd
00032bff                __lssd
00032c47                __leqd
00032c94                __gtrd
00032cdf                __geqd
00032d29                __eqld
00032d5d                __cmpd
00032db8                _vStartPolledQueueTasks
00032f50                _xArePollingQueuesStillRunning
00032f7c                _pxPortInitialiseStack
00033124                _vPortEndScheduler
00033128                _prvSetupTimerInterrupt
0003313c                _vListInitialise
00033180                _vListInitialiseItem
00033194                _vListInsertEnd
000331e8                _vListInsert
00033288                _uxListRemove
000332ec                _EZDSP5535_OSD9616_send
00033314                _EZDSP5535_OSD9616_multiSend
00033360                _EZDSP5535_OSD9616_init
00033444                _EZDSP5535_OSD9616_printLetter
00033484                _spiflash_test
00033610                _EZDSP5535_SAR_init
000336d8                _EZDSP5535_SAR_getKey
0003378c                _fputs
000338c1                _puts
000338ef                __mpyd
00033a3c                _Timer_isr
00033b68                _EZDSP5535_I2S_init
00033bc4                _EZDSP5535_I2S_readLeft
00033bf8                _EZDSP5535_I2S_writeLeft
00033c28                _EZDSP5535_I2S_readRight
00033c4c                _EZDSP5535_I2S_writeRight
00033c68                _EZDSP5535_I2S_close
00033c7c                _vStartIntegerMathTasks
00033d50                _xAreIntegerMathsTaskStillRunning
00033d80                _enable_rtc_second_int
00033d8c                _reset_RTC
00033e48                _convert_number_to_string
00033e7c                _setvbuf
00033f64                _vStartLEDFlashTasks
00034042                __wrt_ok
000340c2                __rd_ok
00034120                _pvPortMalloc
000341bc                _vPortFree
000341d8                _vPortInitialiseBlocks
000341e0                _xPortGetFreeHeapSize
000341ee                __doflush
00034257                _fflush
000342b0                _writemsg
00034365                C$$IO$$
0003436c                _mem_test
0003441b                _fputc
0003441b                _putc
000344b2                _putchar
000344c4                _EZDSP5535_UART_open
00034534                _EVM5515_UART_putChar
0003454c                _EVM5515_UART_getChar
00034566                __divul
00034608                _vParTestInitialise
0003460c                _vParTestSetLED
00034624                _vParTestToggleLED
000346a4                _EZDSP5535_I2C_init
000346dc                _EZDSP5535_I2C_reset
000346e8                _EZDSP5535_I2C_write
00034710                _EZDSP5535_I2C_read
00034738                _IRQ_plug
000347c4                _set_i2s2_master
000347f8                _set_i2s0_master
0003482c                _set_i2s0_slave
00034850                _EZDSP5535_GPIO_init
0003487c                _EZDSP5535_GPIO_setDirection
000348a0                _EZDSP5535_GPIO_setOutput
000348bc                _EZDSP5535_GPIO_getInput
000348da                reset_isr
00034959                _ltoa
000349d6                _fclose
00034a51                __frcmpyd
00034ac7                __frcmpyd_div
00034b3a                __remul
00034bac                __fixdli
00034c1b                _readmsg
00034c88                _fseek
00034cf3                __fltlid
00034d5a                _atoi
00034db6                __fltuld
00034e14                _EZDSP5535_wait
00034e48                _EZDSP5535_waitusec
00034e5c                _EZDSP5535_init
00034e6a                _printf
00034ebc                _RTC_Isr
00034f0a                _auto_init
00034f58                _Timer0Init
00034f9c                _StartTimer0
00034fa4                __args_main
00034fef                __remli
0003503a                __divli
00035082                _memcpy
000350c1                _exit
000350ff                _c_int00
00035133                __fixdi
0003515d                I$$UDIV
0003515d                __divu
00035172                I$$UMOD
00035172                __remu
00035187                _memccpy
000351aa                ___isinf
000351c4                I$$LMPY
000351c4                __mpyli
000351d7                __register_unlock
000351df                __register_lock
000351e7                __nop
000351e9                _memset
000351fa                _strlen
0003520b                __negd
0003521b                __fltud
00035229                _remove
00035233                _abort
00035234                C$$EXIT
            00020000    ___cinit__
            00020000    cinit
            00020314    __CIOBUF_
00040a28                _MMC_init
00040a60                _MMC_open
00040c70                _MMC_close
00040cb0                _MMC_setCardType
00040ce4                _MMC_setCardPtr
00040d18                _MMC_setCallBack
00040d58                _MMC_getNumberOfCards
00040d90                _MMC_clearResponse
00040e6c                _MMC_ierEnable
00040eb0                _MMC_ierDisable
00040ee4                _MMC_intEnable
00040f0c                _MMC_eventEnable
00041108                _MMC_eventDisable
000412e0                _MMC_drrdy
00041328                _MMC_dxrdy
00041370                _MMC_saveStatus
000413b0                _MMC_getStatus
00041414                _MMC_setupNative
000414c8                _MMC_config
00041564                _MMC_getConfig
00041604                _MMC_sendCmd
000416b8                _MMC_sendGoIdle
00041740                _MMC_stop
00041818                _MMC_deselectCard
000418e8                _MMC_selectCard
00041e78                _MMC_sendOpCond
00041f1c                _MMC_setRca
00041ff4                _SD_sendRca
000420f0                _MMC_sendAllCID
000422c8                _SD_sendAllCID
000424b4                _MMC_getCardCsd
00042908                _SD_getCardCsd
00042fe4                _MMC_read
00043a00                _MMC_write
0004463c                _MMC_setDmaHandle
0004469c                _MMC_setDataTransferCallback
000446ec                _MMC_setDmaChanConfig
000447cc                _MMC_setEndianMode
00044854                _MMC_setBlockLength
000448ec                _MMC_setWriteBlkEraseCnt
00044a1c                _SD_setBusWidth
00044b8c                _MMC_getCardStatus
00044c88                _SD_configurePullup
00044db4                _MMC_checkReadDmaDone
00045658                _MSC_Open
0004567c                _MSC_OpenFullspeed
000459c8                _MSC_Close
00045a04                _MSC_SetLunAttr
00045bf4                _MSC_Ctrl
00045dec                _MSC_Bulk
00045ee8                _MSC_GetLunLockedStatus
00045f18                _MSC_GetactivityFlagStatus
00045f34                _MSC_GetsuspendFlagStatus
000463dc                _MSC_HandleStateWaitForCBW
00046680                _MSC_ExecuteRead
00046a74                _MSC_ExecuteWrite
00047028                _MSC_HandleTestUnitReady
0004724c                _MSC_HandlePreventAllowMediaRemoval
000473f0                _MSC_HandleReadCapacity
00047640                _MSC_reqGetDescriptor
00047878                _MSC_reqBotMscReset
000478e4                _MSC_sendCswWithPhaseError
0004794c                _MSC_handleDataDirMisMatch
000479c8                _SDIO_init
00047a08                _SDIO_open
00047ad4                _SDIO_close
00047afc                _SDIO_config
00047bd4                _SDIO_detectCard
00047f40                _SDIO_initCard
000483c4                _SDIO_resetCard
000484ac                _SDIO_getRca
00048574                _SDIO_deselectCard
00048634                _SDIO_selectCard
000486f8                _SDIO_sendCommand
000487cc                _SDIO_getResponse
00048960                _SDIO_clearResponse
00048a3c                _SDIO_getStatus
00048aa4                _SDIO_getSdioStatus
00048b10                _SDIO_eventEnable
00048d38                _SDIO_eventDisable
00048f30                _SDIO_readWaitEnable
00048f68                _SDIO_readWaitDisable
00048fa0                _SDIO_readSingleByte
000490cc                _SDIO_writeSingleByte
000491cc                _SDIO_readBytes
00049610                _SDIO_writeBytes
00049a50                _SDIO_readBlocks
00049e90                _SDIO_writeBlocks
0004a2e4                _SDIO_setEndianMode
0004a364                _SDIO_setClock
0004a680                _USB_init
0004aaa4                _USB_resetDev
0004acd4                _USB_initEndptObj
0004b0bc                _USB_getEvents
0004b134                _USB_peekEvents
0004b1a4                _USB_getSetupPacket
0004b24c                _USB_postTransaction
0004b408                _USB_isTransactionDone
0004b490                _USB_bytesRemaining
0004b524                _USB_stallEndpt
0004b698                _USB_clearEndptStall
0004b880                _USB_getEndptStall
0004b904                _USB_epNumToHandle
0004ba34                _USB_abortTransaction
0004bb94                _USB_abortAllTransaction
0004bbe8                _USB_connectDev
0004bc1c                _USB_disconnectDev
0004bc4c                _USB_setRemoteWakeup
0004bc7c                _USB_getRemoteWakeupStat
0004bc94                _USB_issueRemoteWakeup
0004bce4                _USB_setDevAddr
0004bd2c                _USB_getFrameNo
0004bd48                _USB_suspendDevice
0004bd8c                _USB_selfwakeup
0004bdf8                _USB_initPLL
0004be7c                _USB_setParams
0004bed8                _USB_getMaxPower
0004bef8                _USB_setFullSpeedMode
0004bf2c                _USB_getDataCountReadFromFifo
0004bf84                _USB_findFifoSize
0004c108                _USB_coreEventProcessEp0
0004c5c4                _xTaskCreate
0004c920                _vTaskDelete
0004c9f8                _vTaskDelayUntil
0004cabc                _vTaskDelay
0004cafc                _uxTaskPriorityGet
0004cb44                _uxTaskPriorityGetFromISR
0004cb68                _vTaskPrioritySet
0004ccd8                _vTaskSuspend
0004ce58                _vTaskResume
0004cf18                _xTaskResumeFromISR
0004cfb8                _vTaskStartScheduler
0004d024                _vTaskEndScheduler
0004d038                _vTaskSuspendAll
0004d044                _xTaskResumeAll
0004d168                _xTaskGetTickCount
0004d1a4                _xTaskGetTickCountFromISR
0004d1bc                _uxTaskGetNumberOfTasks
0004d1c4                _pcTaskGetName
0004d1ec                _xTaskIncrementTick
0004d34c                _vTaskSwitchContext
0004d3ec                _vTaskPlaceOnEventList
0004d41c                _vTaskPlaceOnUnorderedEventList
0004d474                _xTaskRemoveFromEventList
0004d51c                _vTaskRemoveFromUnorderedEventList
0004d5bc                _vTaskSetTimeOutState
0004d610                _vTaskInternalSetTimeOutState
0004d630                _xTaskCheckForTimeOut
0004d6f8                _vTaskMissedYield
0004d844                _uxTaskGetStackHighWaterMark
0004d8dc                _xTaskGetCurrentTaskHandle
0004d8f0                _xTaskPriorityInherit
0004d9fc                _xTaskPriorityDisinherit
0004dac0                _vTaskPriorityDisinheritAfterTimeout
0004dbd0                _uxTaskResetEventItemValue
0004dc00                _pvTaskIncrementMutexHeldCount
0004dc20                _ulTaskNotifyTake
0004dcf4                _xTaskNotifyWait
0004ddf0                _xTaskGenericNotify
0004df7c                _xTaskGenericNotifyFromISR
0004e110                _vTaskNotifyGiveFromISR
0004e1f4                _xTaskNotifyStateClear
0004e304                _DMA_init
0004e33c                _DMA_open
0004e428                _DMA_close
0004e448                _DMA_config
0004f01c                _DMA_getConfig
0004f58c                _DMA_start
0004f69c                _DMA_stop
0004f7a0                _DMA_reset
0004fa8c                _DMA_swapWords
0004fb04                _DMA_getLastTransferType
0004fbb0                _vStartQueueOverwriteTask
0004fcdc                _xIsQueueOverwriteTaskStillRunning
0004fd0c                _vQueueOverwritePeriodicISRDemo
0004fde6                __subd
0004fe00                _Reset
0004ff00                _RST
0004ff00                _VECSTART
ffffffff                .bss
ffffffff                .data
ffffffff                .text
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
ffffffff                ___pinit__
ffffffff                ___text__
ffffffff                binit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit

[890 symbols]
