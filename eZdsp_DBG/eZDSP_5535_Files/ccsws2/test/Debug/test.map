******************************************************************************
              TMS320C55x Linker PC v4.4.1                      
******************************************************************************
>> Linked Sun Sep 16 02:44:01 2018

OUTPUT FILE NAME:   <test.out>
ENTRY POINT SYMBOL: "_c_int00"  address: 0003829c


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  MMR                   00000000   000000c0  00000000  000000c0  RWIX
  DARAM0                000000c0   0000ff40  0000c742  000037fe  RWIX
  SARAM0                00010000   00010000  00000000  00010000  RWIX
  SARAM1                00020000   00020000  0001d3d2  00002c2e  RWIX
  SARAM2                00040000   0000cf00  0000cefe  00000002  RWIX
  VECS                  0004de00   00000200  00000200  00000000  RWIX
  PDROM                 00ff8000   00008000  00000000  00008000  R IX

PAGE 2:
  IOPORT                00000000   00020000  00000000  00020000  RWI 


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.pinit       0   [ 00040000 ]  00020000          *   00000000   UNINITIALIZED

.stack       0   [ 000000c0 ]  00000060          *   00001000   UNINITIALIZED
                 [ 000000c0 ]  00000060          *   00001000   --HOLE--

.data        0   [ 000000c0 ]  00000060          *   00000000   UNINITIALIZED

.sysstack 
*            0   [ 000020c0 ]  00001060          *   00000800   UNINITIALIZED
                 [ 000020c0 ]  00001060          *   00000800   --HOLE--

.bss.1       0   [ 000030c0 ]  00001860          *   00004185   UNINITIALIZED
                 [ 000030c0 ]  00001860          *   00003004   heap_1.obj (.bss)
                 [ 000090c8 ]  00004864          *   0000050d   csl_mmcsd_ataIf.obj (.bss)
                 [ 00009ae2 ]  00004d71          *   00000400   mem_test.obj (.bss)
                 [ 0000a2e2 ]  00005171          *   00000200   spiflash_test.obj (.bss)
                 [ 0000a6e2 ]  00005371          *   00000001   integer.obj (.bss)
                 [ 0000a6e4 ]  00005372          *   000001be   csl_usb.obj (.bss)
                 [ 0000aa60 ]  00005530          *   00000124   dma.obj (.bss)
                 [ 0000aca8 ]  00005654          *   00000119   rts55x.lib : defs.obj (.bss)
                 [ 0000aeda ]  0000576d          *   00000001              : fopen.obj (.bss)
                 [ 0000aedc ]  0000576e          *   00000112   ezdsp5535_spiflash.obj (.bss)
                 [ 0000b100 ]  00005880          *   000000d0   rts55x.lib : trgdrv.obj (.bss)
                 [ 0000b2a0 ]  00005950          *   00000095   ezdsp5535_sdcard.obj (.bss)

.bss.2       0   [ 0000b3cc ]  000059e6          *   00000101   UNINITIALIZED
                 [ 0000b3cc ]  000059e6          *   00000084   csl_intc.obj (.bss)
                 [ 0000b4d4 ]  00005a6a          *   0000007d   tasks_sysStk.obj (.bss)

.bss.3       0   [ 0000b5d0 ]  00005ae8          *   00000211   UNINITIALIZED
                 [ 0000b5d0 ]  00005ae8          *   00000071   rts55x.lib : lowlev.obj (.bss)
                 [ 0000b6b2 ]  00005b59          *   00000061   i2s.obj (.bss)
                 [ 0000b774 ]  00005bba          *   00000040   croutine.obj (.bss)
                 [ 0000b7f4 ]  00005bfa          *   0000002a   csl_i2s.obj (.bss)
                 [ 0000b848 ]  00005c24          *   00000028   main.obj (.bss)
                 [ 0000b898 ]  00005c4c          *   00000020   port.obj (.bss)
                 [ 0000b8d8 ]  00005c6c          *   00000020   queue.obj (.bss)
                 [ 0000b918 ]  00005c8c          *   00000016   ezdsp5535_uart.obj (.bss)
                 [ 0000b944 ]  00005ca2          *   00000014   rtc.obj (.bss)
                 [ 0000b96c ]  00005cb6          *   00000012   csl_i2c.obj (.bss)
                 [ 0000b990 ]  00005cc8          *   00000012   dynamic.obj (.bss)
                 [ 0000b9b4 ]  00005cda          *   0000000c   QPeek.obj (.bss)
                 [ 0000b9cc ]  00005ce6          *   0000000a   blocktim.obj (.bss)
                 [ 0000b9e0 ]  00005cf0          *   00000009   semtest.obj (.bss)

.bss.4       0   [ 0000b9f4 ]  00005cfa          *   00000039   UNINITIALIZED
                 [ 0000b9f4 ]  00005cfa          *   00000008   QueueOverwrite.obj (.bss)
                 [ 0000ba04 ]  00005d02          *   00000008   ezdsp5535_sar.obj (.bss)
                 [ 0000ba14 ]  00005d0a          *   00000006   rts55x.lib : memory.obj (.bss)
                 [ 0000ba20 ]  00005d10          *   00000004   ParTest.obj (.bss)
                 [ 0000ba28 ]  00005d14          *   00000004   PollQ.obj (.bss)
                 [ 0000ba30 ]  00005d18          *   00000004   ezdsp5535_gpio.obj (.bss)
                 [ 0000ba38 ]  00005d1c          *   00000004   flash.obj (.bss)
                 [ 0000ba40 ]  00005d20          *   00000004   flop.obj (.bss)
                 [ 0000ba48 ]  00005d24          *   00000004   rts55x.lib : _lock.obj (.bss)
                 [ 0000ba50 ]  00005d28          *   00000004              : exit.obj (.bss)
                 [ 0000ba58 ]  00005d2c          *   00000004   timer.obj (.bss)
                 [ 0000ba60 ]  00005d30          *   00000003   csl_spi.obj (.bss)

.bss.5       0   [ 0000ba68 ]  00005d34          *   00000002   UNINITIALIZED
                 [ 0000ba68 ]  00005d34          *   00000002   ezdsp5535_i2s.obj (.bss)

.const.1     0   [ 0000ba6c ]  00005d36          *   00000447   
                 [ 0000ba6c ]  00005d36          *   00000346   ezdsp5535_sdcard.obj (.const:.string)
                 [ 0000c0f8 ]  0000607c          *   00000101   rts55x.lib : ctype.obj (.const:__ctypes_)

.const.2     0   [ 0000c2fc ]  0000617e          *   00000081   
                 [ 0000c2fc ]  0000617e          *   00000081   csl_cdc.obj (.const:.string)

.const.3     0   [ 0000c400 ]  00006200          *   0000005d   
                 [ 0000c400 ]  00006200          *   0000005d   spiflash_test.obj (.const:.string)

.const.4     0   [ 0000c4bc ]  0000625e          *   0000003f   
                 [ 0000c4bc ]  0000625e          *   0000003f   semtest.obj (.const:.string)

.const.5     0   [ 0000c53c ]  0000629e          *   00000077   
                 [ 0000c53c ]  0000629e          *   0000003e   dynamic.obj (.const:.string)
                 [ 0000c5b8 ]  000062dc          *   00000039   main.obj (.const:.string)

.const.6     0   [ 0000c62c ]  00006316          *   0000002d   
                 [ 0000c62c ]  00006316          *   0000002d   QPeek.obj (.const:.string)

.const.7     0   [ 0000c688 ]  00006344          *   00000045   
                 [ 0000c688 ]  00006344          *   00000024   rts55x.lib : _printfi.obj (.const:.string)
                 [ 0000c6d0 ]  00006368          *   00000021   blocktim.obj (.const:.string)

.const.8     0   [ 0000c714 ]  0000638a          *   00000073   
                 [ 0000c714 ]  0000638a          *   00000020   PollQ.obj (.const:.string)
                 [ 0000c754 ]  000063aa          *   00000018   flop.obj (.const:.string)
                 [ 0000c784 ]  000063c2          *   00000014   flop.obj (.const)
                 [ 0000c7ac ]  000063d6          *   0000000c   rts55x.lib : _printfi.obj (.const)
                 [ 0000c7c4 ]  000063e2          *   00000008   integer.obj (.const:.string)
                 [ 0000c7d4 ]  000063ea          *   00000008   rts55x.lib : divd.obj (.const:_initial_approx$1)
                 [ 0000c7e4 ]  000063f2          *   00000006   QueueOverwrite.obj (.const:.string)
                 [ 0000c7f0 ]  000063f8          *   00000005   flash.obj (.const:.string)

.const.9     0   [ 0000c7fc ]  000063fe          *   00000009   
                 [ 0000c7fc ]  000063fe          *   00000005   tasks_sysStk.obj (.const:.string)
                 [ 0000c806 ]  00006403          *   00000004   main.obj (.const:_$P$T0$2)

.const.10 
*            0   [ 0000c810 ]  00006408          *   00000006   
                 [ 0000c810 ]  00006408          *   00000002   rts55x.lib : fputs.obj (.const:.string)
                 [ 0000c814 ]  0000640a          *   00000002              : fltlid.obj (.const)
                 [ 0000c818 ]  0000640c          *   00000002              : fltuld.obj (.const)

.text.1      0     00020000  [ 00010000 ] 00001e0e          *   
                   00020000  [ 00010000 ] 00001e0d          *   tasks_sysStk.obj (.text)
                   00021e0d  [ 00010f06 ] 00000001          *   --HOLE-- [fill = 20]

.text.2      0     00021e10  [ 00010f08 ] 000065bc          *   
                   00021e10  [ 00010f08 ] 000018ac          *   csl_dma.obj (.text)
                   000236bc  [ 00011b5e ] 000015a4          *   rts55x.lib : _printfi.obj (.text)
                   00024c60  [ 00012630 ] 00001478          *   queue.obj (.text)
                   000260d8  [ 0001306c ] 000011eb          *   csl_nand.obj (.text)
                   000272c3  [ 00013961 ] 00000001          *   --HOLE-- [fill = 20]
                   000272c4  [ 00013962 ] 00001106          *   csl_uart.obj (.text)
                   000283ca  [ 000141e5 ] 00000002          *   --HOLE-- [fill = 20]

.text.3      0     000283cc  [ 000141e6 ] 00000dc2          *   
                   000283cc  [ 000141e6 ] 00000dc1          *   csl_dat.obj (.text)
                   0002918d  [ 000148c6 ] 00000001          *   --HOLE-- [fill = 20]

.text.4      0     00029190  [ 000148c8 ] 000019da          *   
                   00029190  [ 000148c8 ] 00000d74          *   csl_audioClass.obj (.text)
                   00029f04  [ 00014f82 ] 00000c65          *   csl_cdc.obj (.text)
                   0002ab69  [ 000155b4 ] 00000001          *   --HOLE-- [fill = 20]

.text.5      0     0002ab6c  [ 000155b6 ] 0000178c          *   
                   0002ab6c  [ 000155b6 ] 00000c4c          *   csl_i2c.obj (.text)
                   0002b7b8  [ 00015bdc ] 00000b3e          *   csl_mmcsd_ataIf.obj (.text)
                   0002c2f6  [ 0001617b ] 00000002          *   --HOLE-- [fill = 20]

.text.6      0     0002c2f8  [ 0001617c ] 0000256c          *   
                   0002c2f8  [ 0001617c ] 00000b2b          *   csl_sar.obj (.text)
                   0002ce23  [ 00016711 ] 00000001          *   --HOLE-- [fill = 20]
                   0002ce24  [ 00016712 ] 000009e3          *   csl_i2s.obj (.text)
                   0002d807  [ 00016c03 ] 00000001          *   --HOLE-- [fill = 20]
                   0002d808  [ 00016c04 ] 00000838          *   csl_lcdc.obj (.text)
                   0002e040  [ 00017020 ] 00000822          *   main.obj (.text)
                   0002e862  [ 00017431 ] 00000002          *   --HOLE-- [fill = 20]

.text.7      0     0002e864  [ 00017432 ] 0000081e          *   
                   0002e864  [ 00017432 ] 0000081d          *   oled_test.obj (.text)
                   0002f081  [ 00017840 ] 00000001          *   --HOLE-- [fill = 20]

.text.8      0     0002f084  [ 00017842 ] 00001cc0          *   
                   0002f084  [ 00017842 ] 00000697          *   csl_gpio.obj (.text)
                   0002f71b  [ 00017b8d ] 00000001          *   --HOLE-- [fill = 20]
                   0002f71c  [ 00017b8e ] 000005bb          *   csl_spi.obj (.text)
                   0002fcd7  [ 00017e6b ] 00000001          *   --HOLE-- [fill = 20]
                   0002fcd8  [ 00017e6c ] 000005b3          *   blocktim.obj (.text)
                   0003028b  [ 00018145 ] 00000001          *   --HOLE-- [fill = 20]
                   0003028c  [ 00018146 ] 00000573          *   event_groups.obj (.text)
                   000307ff  [ 000183ff+] 00000543          *   rts55x.lib : lowlev.obj (.text)
                   00030d42  [ 000186a1 ] 00000002          *   --HOLE-- [fill = 20]

.text.9      0     00030d44  [ 000186a2 ] 000013ec          *   
                   00030d44  [ 000186a2 ] 00000538          *   csl_intc.obj (.text)
                   0003127c  [ 0001893e ] 00000528          *   rts55x.lib : trgdrv.obj (.text)
                   000317a4  [ 00018bd2 ] 000004d5          *   ezdsp5535_sdcard.obj (.text)
                   00031c79  [ 00018e3c+] 000004b5          *   rts55x.lib : memory.obj (.text)
                   0003212e  [ 00019097 ] 00000002          *   --HOLE-- [fill = 20]

.text.10     0     00032130  [ 00019098 ] 00000430          *   
                   00032130  [ 00019098 ] 0000042e          *   QPeek.obj (.text)
                   0003255e  [ 000192af ] 00000002          *   --HOLE-- [fill = 20]

.text.11     0     00032560  [ 000192b0 ] 00000806          *   
                   00032560  [ 000192b0 ] 00000427          *   croutine.obj (.text)
                   00032987  [ 000194c3 ] 00000001          *   --HOLE-- [fill = 20]
                   00032988  [ 000194c4 ] 000003dd          *   portASM.obj (.text)
                   00032d65  [ 000196b2 ] 00000001          *   --HOLE-- [fill = 20]

.text.12     0     00032d68  [ 000196b4 ] 000007a0          *   
                   00032d68  [ 000196b4 ] 000003d2          *   flop.obj (.text)
                   0003313a  [ 0001989d ] 000003cc          *   rts55x.lib : divd.obj (.text)
                   00033506  [ 00019a83 ] 00000002          *   --HOLE-- [fill = 20]

.text.13     0     00033508  [ 00019a84 ] 000003c4          *   
                   00033508  [ 00019a84 ] 000003c2          *   ezdsp5535_spiflash.obj (.text)
                   000338ca  [ 00019c65 ] 00000002          *   --HOLE-- [fill = 20]

.text.14     0     000338cc  [ 00019c66 ] 000006ca          *   
                   000338cc  [ 00019c66 ] 00000383          *   dynamic.obj (.text)
                   00033c4f  [ 00019e27 ] 00000001          *   --HOLE-- [fill = 20]
                   00033c50  [ 00019e28 ] 00000345          *   csl_mem.obj (.text)
                   00033f95  [ 00019fca ] 00000001          *   --HOLE-- [fill = 20]

.text.15     0     00033f98  [ 00019fcc ] 000017c0          *   
                   00033f98  [ 00019fcc ] 000002f7          *   csl_gpt.obj (.text)
                   0003428f  [ 0001a147 ] 00000001          *   --HOLE-- [fill = 20]
                   00034290  [ 0001a148 ] 000002f4          *   semtest.obj (.text)
                   00034584  [ 0001a2c2 ] 000002ef          *   aic_test_i2c.obj (.text)
                   00034873  [ 0001a439 ] 00000001          *   --HOLE-- [fill = 20]
                   00034874  [ 0001a43a ] 000002ac          *   csl_pll.obj (.text)
                   00034b20  [ 0001a590 ] 00000298          *   i2s_register.obj (.text)
                   00034db8  [ 0001a6dc ] 0000027f          *   rts55x.lib : fopen.obj (.text)
                   00035037  [ 0001a81b ] 00000001          *   --HOLE-- [fill = 20]
                   00035038  [ 0001a81c ] 00000266          *   csl_wdt.obj (.text)
                   0003529e  [ 0001a94f ] 0000025e          *   rts55x.lib : llmpy.obj (.text)
                   000354fc  [ 0001aa7e ] 0000025a          *              : addd.obj (.text)
                   00035756  [ 0001abab ] 00000002          *   --HOLE-- [fill = 20]

.text.16     0     00035758  [ 0001abac ] 00000238          *   
                   00035758  [ 0001abac ] 00000236          *   QueueOverwrite.obj (.text)
                   0003598e  [ 0001acc7 ] 00000002          *   --HOLE-- [fill = 20]

.text.17     0     00035990  [ 0001acc8 ] 00000220          *   
                   00035990  [ 0001acc8 ] 0000021e          *   dma.obj (.text)
                   00035bae  [ 0001add7 ] 00000002          *   --HOLE-- [fill = 20]

.text.18     0     00035bb0  [ 0001add8 ] 000003e2          *   
                   00035bb0  [ 0001add8 ] 000001f7          *   ezdsp5535_led.obj (.text)
                   00035da7  [ 0001aed3+] 000001ea          *   rts55x.lib : cmpd.obj (.text)
                   00035f91  [ 0001afc8 ] 00000001          *   --HOLE-- [fill = 20]

.text.19     0     00035f94  [ 0001afca ] 000001c4          *   
                   00035f94  [ 0001afca ] 000001c2          *   PollQ.obj (.text)
                   00036156  [ 0001b0ab ] 00000002          *   --HOLE-- [fill = 20]

.text.20     0     00036158  [ 0001b0ac ] 00000370          *   
                   00036158  [ 0001b0ac ] 000001c0          *   port.obj (.text)
                   00036318  [ 0001b18c ] 000001ae          *   list.obj (.text)
                   000364c6  [ 0001b263 ] 00000002          *   --HOLE-- [fill = 20]

.text.21     0     000364c8  [ 0001b264 ] 00000196          *   
                   000364c8  [ 0001b264 ] 00000195          *   ezdsp5535_lcd.obj (.text)
                   0003665d  [ 0001b32e ] 00000001          *   --HOLE-- [fill = 20]

.text.22     0     00036660  [ 0001b330 ] 000007f8          *   
                   00036660  [ 0001b330 ] 0000018b          *   spiflash_test.obj (.text)
                   000367eb  [ 0001b3f5 ] 00000001          *   --HOLE-- [fill = 20]
                   000367ec  [ 0001b3f6 ] 0000017c          *   ezdsp5535_sar.obj (.text)
                   00036968  [ 0001b4b4 ] 00000163          *   rts55x.lib : fputs.obj (.text)
                   00036acb  [ 0001b565+] 0000014c          *              : mpyd.obj (.text)
                   00036c17  [ 0001b60b ] 00000001          *   --HOLE-- [fill = 20]
                   00036c18  [ 0001b60c ] 0000012b          *   timer.obj (.text:retain)
                   00036d43  [ 0001b6a1 ] 00000001          *   --HOLE-- [fill = 20]
                   00036d44  [ 0001b6a2 ] 00000112          *   ezdsp5535_i2s.obj (.text)
                   00036e56  [ 0001b72b ] 00000002          *   --HOLE-- [fill = 20]

.text.23     0     00036e58  [ 0001b72c ] 000002e8          *   
                   00036e58  [ 0001b72c ] 00000104          *   integer.obj (.text)
                   00036f5c  [ 0001b7ae ] 000000fc          *   rtc.obj (.text)
                   00037058  [ 0001b82c ] 000000e6          *   rts55x.lib : setvbuf.obj (.text)
                   0003713e  [ 0001b89f ] 00000002          *   --HOLE-- [fill = 20]

.text.24     0     00037140  [ 0001b8a0 ] 00000408          *   
                   00037140  [ 0001b8a0 ] 000000de          *   flash.obj (.text)
                   0003721e  [ 0001b90f ] 000000dd          *   rts55x.lib : _io_perm.obj (.text)
                   000372fb  [ 0001b97d ] 00000001          *   --HOLE-- [fill = 20]
                   000372fc  [ 0001b97e ] 000000ce          *   heap_1.obj (.text)
                   000373ca  [ 0001b9e5 ] 000000c2          *   rts55x.lib : fflush.obj (.text)
                   0003748c  [ 0001ba46 ] 000000ba          *              : trgmsg.obj (.text:CIO_breakpoint)
                   00037546  [ 0001baa3 ] 00000002          *   --HOLE-- [fill = 20]

.text.25     0     00037548  [ 0001baa4 ] 00000156          *   
                   00037548  [ 0001baa4 ] 000000af          *   mem_test.obj (.text)
                   000375f7  [ 0001bafb+] 000000a6          *   rts55x.lib : fputc.obj (.text)
                   0003769d  [ 0001bb4e ] 00000001          *   --HOLE-- [fill = 20]

.text.26     0     000376a0  [ 0001bb50 ] 000001e0          *   
                   000376a0  [ 0001bb50 ] 000000a2          *   ezdsp5535_uart.obj (.text)
                   00037742  [ 0001bba1 ] 000000a1          *   rts55x.lib : divul.obj (.text)
                   000377e3  [ 0001bbf1 ] 00000001          *   --HOLE-- [fill = 20]
                   000377e4  [ 0001bbf2 ] 0000009a          *   ParTest.obj (.text)
                   0003787e  [ 0001bc3f ] 00000002          *   --HOLE-- [fill = 20]

.text.27     0     00037880  [ 0001bc40 ] 0000076e          *   
                   00037880  [ 0001bc40 ] 00000094          *   ezdsp5535_i2c.obj (.text)
                   00037914  [ 0001bc8a ] 0000008c          *   csl_irqplug.obj (.text)
                   000379a0  [ 0001bcd0 ] 0000008c          *   i2s.obj (.text)
                   00037a2c  [ 0001bd16 ] 0000008a          *   ezdsp5535_gpio.obj (.text)
                   00037ab6  [ 0001bd5b ] 0000007f          *   vectors.obj (.text)
                   00037b35  [ 0001bd9a+] 0000007d          *   rts55x.lib : ltoa.obj (.text)
                   00037bb2  [ 0001bdd9 ] 0000007b          *              : fclose.obj (.text)
                   00037c2d  [ 0001be16+] 00000076          *              : frcmpyd.obj (.text)
                   00037ca3  [ 0001be51+] 00000073          *              : frcmpyd_div.obj (.text)
                   00037d16  [ 0001be8b ] 00000072          *              : remul.obj (.text)
                   00037d88  [ 0001bec4 ] 0000006f          *              : fixdli.obj (.text)
                   00037df7  [ 0001befb+] 0000006d          *              : trgmsg.obj (.text)
                   00037e64  [ 0001bf32 ] 0000006b          *              : fseek.obj (.text)
                   00037ecf  [ 0001bf67+] 00000067          *              : fltlid.obj (.text)
                   00037f36  [ 0001bf9b ] 0000005c          *              : atoi.obj (.text)
                   00037f92  [ 0001bfc9 ] 0000005b          *              : fltuld.obj (.text)
                   00037fed  [ 0001bff6 ] 00000001          *   --HOLE-- [fill = 20]

.text.28     0     00037ff0  [ 0001bff8 ] 000000a8          *   
                   00037ff0  [ 0001bff8 ] 00000056          *   ezdsp5535.obj (.text)
                   00038046  [ 0001c023 ] 00000050          *   rts55x.lib : printf.obj (.text)
                   00038096  [ 0001c04b ] 00000002          *   --HOLE-- [fill = 20]

.text.29     0     00038098  [ 0001c04c ] 0000034e          *   
                   00038098  [ 0001c04c ] 0000004e          *   rtc.obj (.text:retain)
                   000380e6  [ 0001c073 ] 0000004d          *   rts55x.lib : autoinit.obj (.text)
                   00038133  [ 0001c099 ] 00000001          *   --HOLE-- [fill = 20]
                   00038134  [ 0001c09a ] 0000004c          *   timer.obj (.text)
                   00038180  [ 0001c0c0 ] 0000004b          *   rts55x.lib : args_main.obj (.text)
                   000381cb  [ 0001c0e5+] 0000004b          *              : remli.obj (.text)
                   00038216  [ 0001c10b ] 00000048          *              : divli.obj (.text)
                   0003825e  [ 0001c12f ] 0000003e          *              : exit.obj (.text)
                   0003829c  [ 0001c14e ] 00000034          *              : boot.obj (.text)
                   000382d0  [ 0001c168 ] 0000002a          *              : fixdi.obj (.text)
                   000382fa  [ 0001c17d ] 0000002a          *              : udiv.obj (.text)
                   00038324  [ 0001c192 ] 00000023          *              : memccpy.obj (.text)
                   00038347  [ 0001c1a3+] 0000001a          *              : isinf.obj (.text)
                   00038361  [ 0001c1b0+] 00000014          *              : subd.obj (.text)
                   00038375  [ 0001c1ba+] 00000013          *              : lmpy.obj (.text)
                   00038388  [ 0001c1c4 ] 00000012          *              : _lock.obj (.text)
                   0003839a  [ 0001c1cd ] 00000011          *              : memset.obj (.text)
                   000383ab  [ 0001c1d5+] 00000011          *              : strlen.obj (.text)
                   000383bc  [ 0001c1de ] 00000010          *              : negd.obj (.text)
                   000383cc  [ 0001c1e6 ] 0000000e          *              : fltud.obj (.text)
                   000383da  [ 0001c1ed ] 0000000a          *              : remove.obj (.text)
                   000383e4  [ 0001c1f2 ] 00000002          *   --HOLE-- [fill = 20]

.sysmem      0   [ 000383e6 ]  0001c1f3          *   00002800   UNINITIALIZED
                 [ 000383e6 ]  0001c1f3          *   00002800   --HOLE--

.cinit       0   [ 00040000 ]  00020000          *   00000332   
                 [ 00040000 ]  00020000          *   000000dc   dma.obj (.cinit)
                 [ 000401b8 ]  000200dc          *   00000071   port.obj (.cinit)
                 [ 0004029a ]  0002014d          *   00000048   main.obj (.cinit)
                 [ 0004032a ]  00020195          *   0000003d   tasks_sysStk.obj (.cinit)
                 [ 000403a4 ]  000201d2          *   0000002d   rts55x.lib : lowlev.obj (.cinit)
                 [ 000403fe ]  000201ff          *   0000002a              : defs.obj (.cinit)
                 [ 00040452 ]  00020229          *   0000001f   dynamic.obj (.cinit)
                 [ 00040490 ]  00020248          *   00000018   croutine.obj (.cinit)
                 [ 000404c0 ]  00020260          *   00000015   csl_mmcsd_ataIf.obj (.cinit)
                 [ 000404ea ]  00020275          *   00000014   blocktim.obj (.cinit)
                 [ 00040512 ]  00020289          *   00000013   QueueOverwrite.obj (.cinit)
                 [ 00040538 ]  0002029c          *   00000010   timer.obj (.cinit)
                 [ 00040558 ]  000202ac          *   0000000e   QPeek.obj (.cinit)
                 [ 00040574 ]  000202ba          *   0000000d   ParTest.obj (.cinit)
                 [ 0004058e ]  000202c7          *   0000000c   ezdsp5535_sar.obj (.cinit)
                 [ 000405a6 ]  000202d3          *   0000000c   semtest.obj (.cinit)
                 [ 000405be ]  000202df          *   0000000a   rts55x.lib : _lock.obj (.cinit)
                 [ 000405d2 ]  000202e9          *   0000000a              : exit.obj (.cinit)
                 [ 000405e6 ]  000202f3          *   00000009   flash.obj (.cinit)
                 [ 000405f8 ]  000202fc          *   00000009   heap_1.obj (.cinit)
                 [ 0004060a ]  00020305          *   00000008   PollQ.obj (.cinit)
                 [ 0004061a ]  0002030d          *   00000008   csl_i2s.obj (.cinit)
                 [ 0004062a ]  00020315          *   00000008   rtc.obj (.cinit)
                 [ 0004063a ]  0002031d          *   00000004   flop.obj (.cinit)
                 [ 00040642 ]  00020321          *   00000004   i2s.obj (.cinit)
                 [ 0004064a ]  00020325          *   00000004   integer.obj (.cinit)
                 [ 00040652 ]  00020329          *   00000004   rts55x.lib : fopen.obj (.cinit)
                 [ 0004065a ]  0002032d          *   00000004              : memory.obj (.cinit)
                 [ 00040662 ]  00020331          *   00000001   --HOLE-- [fill = 0]

.text.30     0     00040664  [ 00020332 ] 00000004          *   
                   00040664  [ 00020332 ] 00000002          *   rts55x.lib : vectors.obj (.text)
                   00040666  [ 00020333 ] 00000002          *   --HOLE-- [fill = 20]

.cio         0   [ 00040668 ]  00020334          *   00000120   UNINITIALIZED
                 [ 00040668 ]  00020334          *   00000120   rts55x.lib : trgmsg.obj (.cio)

.switch      0   [ 000408a8 ]  00020454          *   000000e0   
                 [ 000408a8 ]  00020454          *   00000022   csl_sdio.obj (.switch:_SDIO_eventDisable)
                 [ 000408ec ]  00020476          *   00000022   csl_sdio.obj (.switch:_SDIO_eventEnable)
                 [ 00040930 ]  00020498          *   00000020   csl_dma.obj (.switch:_DMA_config)
                 [ 00040970 ]  000204b8          *   00000020   csl_dma.obj (.switch:_DMA_getConfig)
                 [ 000409b0 ]  000204d8          *   00000020   csl_dma.obj (.switch:_DMA_reset)
                 [ 000409f0 ]  000204f8          *   00000018   csl_usb.obj (.switch:_USB_coreEventProcessEp0)
                 [ 00040a20 ]  00020510          *   00000014   rtc.obj (.switch:_NtoC)
                 [ 00040a48 ]  00020524          *   00000010   csl_msc.obj (.switch:_MSC_Bulk)

.text.31     0     00040a68  [ 00020534 ] 0000bb9a          *   
                   00040a68  [ 00020534 ] 0000444f          *   csl_mmcsd.obj (.text)
                   00044eb7  [ 0002275b ] 00000001          *   --HOLE-- [fill = 20]
                   00044eb8  [ 0002275c ] 00002b4f          *   csl_msc.obj (.text)
                   00047a07  [ 00023d03 ] 00000001          *   --HOLE-- [fill = 20]
                   00047a08  [ 00023d04 ] 00002a24          *   csl_sdio.obj (.text)
                   0004a42c  [ 00025216 ] 000021d5          *   csl_usb.obj (.text)
                   0004c601  [ 00026300 ] 00000001          *   --HOLE-- [fill = 20]

.text.32     0     0004c604  [ 00026302 ] 000008fc          *   
                   0004c604  [ 00026302 ] 000008b4          *   csl_rtc.obj (.text)
                   0004ceb8  [ 0002675c ] 0000003f          *   rts55x.lib : memcpy.obj (.text)
                   0004cef7  [ 0002677b+] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   0004cefe  [ 0002677f ] 00000002          *   --HOLE-- [fill = 20]

vectors      0     0004de00  [ 00026f00 ] 00000200          *   
                   0004de00  [ 00026f00 ] 00000100          *   rts55x.lib : vectors.obj (vectors)
                   0004df00  [ 00026f80 ] 00000100          *   vectors.obj (vectors)


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
ffffffff                .bss
ffffffff                .data
ffffffff                .text
0004cef8                C$$EXIT
00037541                C$$IO$$
00038375                I$$LMPY
000382fa                I$$UDIV
0003830f                I$$UMOD
00029454                _AC_Close
00029490                _AC_Ctrl
00029724                _AC_GetactivityFlagStatus
00029740                _AC_GetsuspendFlagStatus
00029688                _AC_Iso
0002920c                _AC_Open
00029758                _AC_initDescriptors
00029cbc                _AC_reqGetCurrent
00029a08                _AC_reqGetDescriptor
00029dc4                _AC_reqGetMaximum
00029d80                _AC_reqGetMinimum
00029e08                _AC_reqGetResolution
00029be0                _AC_reqSetCurrent
00029e4c                _AC_reqSetInterface
00034584                _AIC3254_init
            00004d70    _ATA_No_Swap
0002e43c                _BlinkLED
            00005bb9    _Buf_Address
            00005cab    _Buf_day
            00005ca8    _Buf_hour
            00005ca5    _Buf_min
            00005cae    _Buf_month
            00005ca2    _Buf_sec
            00005cb1    _Buf_year
0002a190                _CDC_Close
0002a1cc                _CDC_GetactivityFlagStatus
0002a1e4                _CDC_GetsuspendFlagStatus
00029f98                _CDC_Open
00029fbc                _CDC_OpenFullspeed
0002a5f8                _CDC_bulkInHandler
0002a4f8                _CDC_bulkOutHandler
0002a1fc                _CDC_eventHandler
0002a8e8                _CDC_getData
0002a978                _CDC_putData
0002e420                _ConfigPort
            00005cb5    _Conunt_RTC
000284a4                _DAT_close
00028638                _DAT_copy
00028b34                _DAT_fill
000283cc                _DAT_open
00029044                _DAT_wait
            00005c5c    _DBSTAT_RESTORE
            00005c5b    _DBSTAT_SAVE
            00005650    _DMA_Count
            00005653    _DMA_Done
00021f34                _DMA_close
00021f54                _DMA_config
00022b28                _DMA_getConfig
00023610                _DMA_getLastTransferType
00021e10                _DMA_init
00021e48                _DMA_open
000232ac                _DMA_reset
00023098                _DMA_start
000231a8                _DMA_stop
00023598                _DMA_swapWords
00037728                _EVM5515_UART_getChar
00037710                _EVM5515_UART_putChar
00037a98                _EZDSP5535_GPIO_getInput
00037a2c                _EZDSP5535_GPIO_init
00037a58                _EZDSP5535_GPIO_setDirection
00037a7c                _EZDSP5535_GPIO_setOutput
00037880                _EZDSP5535_I2C_init
000378ec                _EZDSP5535_I2C_read
000378b8                _EZDSP5535_I2C_reset
000378c4                _EZDSP5535_I2C_write
00036e44                _EZDSP5535_I2S_close
00036d44                _EZDSP5535_I2S_init
00036da0                _EZDSP5535_I2S_readLeft
00036e04                _EZDSP5535_I2S_readRight
00036dd4                _EZDSP5535_I2S_writeLeft
00036e28                _EZDSP5535_I2S_writeRight
00035be8                _EZDSP5535_LED_getall
00035bb0                _EZDSP5535_LED_init
00035ce4                _EZDSP5535_LED_off
00035cac                _EZDSP5535_LED_on
00035c3c                _EZDSP5535_LED_setall
00035d18                _EZDSP5535_LED_toggle
0003653c                _EZDSP5535_OSD9616_init
000364f0                _EZDSP5535_OSD9616_multiSend
00036620                _EZDSP5535_OSD9616_printLetter
000364c8                _EZDSP5535_OSD9616_send
000368b4                _EZDSP5535_SAR_getKey
000367ec                _EZDSP5535_SAR_init
00031bb4                _EZDSP5535_SDCARD_close
000317a4                _EZDSP5535_SDCARD_init
00031b4c                _EZDSP5535_SDCARD_read
00031b80                _EZDSP5535_SDCARD_write
000335b0                _EZDSP5535_SPIFLASH_erase
00033508                _EZDSP5535_SPIFLASH_init
000336b4                _EZDSP5535_SPIFLASH_read
0003356c                _EZDSP5535_SPIFLASH_status
00033764                _EZDSP5535_SPIFLASH_write
000376a0                _EZDSP5535_UART_open
00035d78                _EZDSP5535_XF_get
00035d6c                _EZDSP5535_XF_off
00035d60                _EZDSP5535_XF_on
00035d88                _EZDSP5535_XF_toggle
00038038                _EZDSP5535_init
00037ff0                _EZDSP5535_wait
00038024                _EZDSP5535_waitusec
            00005651    _Error_Count_L
            00005652    _Error_Count_R
            00005cb4    _Flag_RTC
0002f578                _GPIO_clearInt
0002f0c8                _GPIO_close
0002f0ec                _GPIO_config
0002f324                _GPIO_configBit
0002f46c                _GPIO_disableInt
0002f4ec                _GPIO_enableInt
0002f174                _GPIO_getConfig
0002f084                _GPIO_open
0002f1fc                _GPIO_read
0002f68c                _GPIO_reset
0002f604                _GPIO_statusBit
0002f280                _GPIO_write
000340d8                _GPT_close
000341e8                _GPT_config
000341ac                _GPT_getCnt
00033f98                _GPT_open
0003405c                _GPT_reset
00034150                _GPT_start
00034180                _GPT_stop
0002e474                _GenerateAudioTone
            00005d18    _GpioObj
00031746                _HOSTclock
000316db                _HOSTclose
00031626                _HOSTlseek
00031587                _HOSTopen
000314fa                _HOSTread
0003144c                _HOSTrename
000313ee                _HOSTtime
00031384                _HOSTunlink
000312f7                _HOSTwrite
0002ac18                _I2C_config
0002b5ec                _I2C_eventDisable
0002b4b8                _I2C_eventEnable
0002ad80                _I2C_getConfig
0002b79c                _I2C_getEventId
0002ab6c                _I2C_init
0002b298                _I2C_read
0002b70c                _I2C_setCallback
0002ae58                _I2C_setup
0002b054                _I2C_write
            00005b59    _I2S_RCV_L
            00005b89    _I2S_RCV_R
0002d250                _I2S_close
0002ce24                _I2S_open
0002d2fc                _I2S_read
0002d710                _I2S_reset
0002cf68                _I2S_setup
0002d7bc                _I2S_transEnable
0002d5b8                _I2S_write
00030dcc                _IRQ_clear
00030e38                _IRQ_clearAll
00030e48                _IRQ_config
00030f58                _IRQ_disable
00030fd8                _IRQ_disableAll
00030fe8                _IRQ_enable
000310e4                _IRQ_getArg
00030ed0                _IRQ_getConfig
00031230                _IRQ_globalDisable
0003124c                _IRQ_globalEnable
00031268                _IRQ_globalRestore
00030d44                _IRQ_init
0003115c                _IRQ_map
00037914                _IRQ_plug
00031074                _IRQ_restore
00031128                _IRQ_setArg
00031188                _IRQ_setVecs
000311bc                _IRQ_test
0002e3b8                _InitSystem
0002e020                _LCD_close
0002dcd0                _LCD_configDMA
0002d808                _LCD_init
0002d830                _LCD_open
0002d874                _LCD_setup
            00005d1e    _LED_Blink_ctr
0002e594                _LED_TaskBlue
0002e5d4                _LED_TaskRed
00033e24                _MEM_disablePartialRetentionMode
00033c98                _MEM_disableRetentionMode
00033cdc                _MEM_enablePartialRetentionMode
00033c54                _MEM_enableRetentionMode
00033f84                _MEM_getmSDRAMClock
00033c50                _MEM_init
00033f48                _MEM_setmSDRAMClock
0002c280                _MMC_busyStatusCheck
00044df4                _MMC_checkReadDmaDone
00040dd0                _MMC_clearResponse
00040cb0                _MMC_close
0002c268                _MMC_commandReadyStatusCheck
00041508                _MMC_config
0002c274                _MMC_dataReadyStatusCheck
00041858                _MMC_deselectCard
00041320                _MMC_drrdy
00041368                _MMC_dxrdy
00041148                _MMC_eventDisable
00040f4c                _MMC_eventEnable
0002c29c                _MMC_file_system_format
0002c2c4                _MMC_flushFat
000424f4                _MMC_getCardCsd
00044bcc                _MMC_getCardStatus
000415a4                _MMC_getConfig
00040d98                _MMC_getNumberOfCards
0002c28c                _MMC_getSerialID
000413f0                _MMC_getStatus
0002c2bc                _MMC_get_date
0002c2c0                _MMC_get_mod_date
0002c2b8                _MMC_get_mod_time
0002c2b4                _MMC_get_time
00040ef0                _MMC_ierDisable
00040eac                _MMC_ierEnable
00040a68                _MMC_init
0002b7b8                _MMC_initState
00040f24                _MMC_intEnable
0002bbdc                _MMC_issueReadCommand
00040aa0                _MMC_open
00043024                _MMC_read
0002bfd4                _MMC_readNSectors
0002be7c                _MMC_readNextNWords
0002bd98                _MMC_readNextWord
0002be08                _MMC_readNextWord1
0002b8fc                _MMC_readWriteControl
0002c184                _MMC_read_CID
0002c1f0                _MMC_read_CSD
0002c2a8                _MMC_reset
000413b0                _MMC_saveStatus
00041928                _MMC_selectCard
00042130                _MMC_sendAllCID
00041644                _MMC_sendCmd
000416f8                _MMC_sendGoIdle
00041eb8                _MMC_sendOpCond
00044894                _MMC_setBlockLength
00040d58                _MMC_setCallBack
00040d24                _MMC_setCardPtr
00040cf0                _MMC_setCardType
000446dc                _MMC_setDataTransferCallback
0004472c                _MMC_setDmaChanConfig
0004467c                _MMC_setDmaHandle
0004480c                _MMC_setEndianMode
00041f5c                _MMC_setRca
0004492c                _MMC_setWriteBlkEraseCnt
00041454                _MMC_setupNative
00041780                _MMC_stop
00043a40                _MMC_write
0002c0ac                _MMC_writeNSectors
0002beec                _MMC_writeSector
0002c25c                _MMC_writeSectorFlush
00045e2c                _MSC_Bulk
00045a08                _MSC_Close
00045c34                _MSC_Ctrl
000466c0                _MSC_ExecuteRead
00046ab4                _MSC_ExecuteWrite
00045f28                _MSC_GetLunLockedStatus
00045f58                _MSC_GetactivityFlagStatus
00045f74                _MSC_GetsuspendFlagStatus
0004728c                _MSC_HandlePreventAllowMediaRemoval
00047430                _MSC_HandleReadCapacity
0004641c                _MSC_HandleStateWaitForCBW
00047068                _MSC_HandleTestUnitReady
00045698                _MSC_Open
000456bc                _MSC_OpenFullspeed
00045a44                _MSC_SetLunAttr
0004798c                _MSC_handleDataDirMisMatch
000478b8                _MSC_reqBotMscReset
00047680                _MSC_reqGetDescriptor
00047924                _MSC_sendCswWithPhaseError
0002689c                _NAND_checkCommandStatus
00026a70                _NAND_disableHwECC
00026948                _NAND_enableHwECC
00026688                _NAND_getBankInfo
0002717c                _NAND_getIntrNum
0002705c                _NAND_hasCacheProg
0002708c                _NAND_hasCopyBack
00026ffc                _NAND_hasRandomRead
0002702c                _NAND_hasRandomWrite
000260d8                _NAND_init
00027264                _NAND_intrClear
0002711c                _NAND_intrDisable
000270bc                _NAND_intrEnable
0002719c                _NAND_intrReadAT
000271dc                _NAND_intrReadLT
00027220                _NAND_intrReadWR
00026788                _NAND_isStatusWriteProtected
00026b58                _NAND_readECC
00026d0c                _NAND_readNBytes
00026870                _NAND_sendCommand
00026904                _NAND_setAddress
0002674c                _NAND_setLatchEnableOffset
0002616c                _NAND_setup
00026e20                _NAND_writeNBytes
            00005c63    _PC_REG_HIGH_RESTORE
            00005c65    _PC_REG_HIGH_SAVE
            00005c64    _PC_REG_LOW_RESTORE
            00005c66    _PC_REG_LOW_SAVE
00034a64                _PLL_bypass
000348d8                _PLL_config
000349fc                _PLL_enable
000348a0                _PLL_init
00034ab4                _PLL_reset
0004df00                _RST
00038098                _RTC_Isr
0004cd9c                _RTC_bcdToDec
0004c6cc                _RTC_config
0004cd5c                _RTC_decToBcd
0004cc54                _RTC_eventDisable
0004cb68                _RTC_eventEnable
0004c7b8                _RTC_getConfig
0004c9a0                _RTC_getDate
0004cd08                _RTC_getEventId
0004c8e4                _RTC_getTime
0004c690                _RTC_reset
0004c9e0                _RTC_setAlarm
0004cddc                _RTC_setCallback
0004ce6c                _RTC_setCompensation
0004c930                _RTC_setDate
0004cab4                _RTC_setPeriodicInterval
0004c868                _RTC_setTime
0004c6a0                _RTC_start
0004c6c4                _RTC_stop
            000055f0    _RcvL_Sine
            00005620    _RcvR_Sine
0004de00                _Reset
0002c88c                _SAR_A2DMeasParamSet
0002cd08                _SAR_GPODirSet
0002c3f8                _SAR_chanClose
0002c47c                _SAR_chanConfig
0002c77c                _SAR_chanCycSet
0002c378                _SAR_chanInit
0002c394                _SAR_chanOpen
0002c568                _SAR_chanSetup
0002c358                _SAR_deInit
0002c4f4                _SAR_getConfig
0002cde4                _SAR_getStatus
0002c2f8                _SAR_init
0002c848                _SAR_readData
0002c7cc                _SAR_startConversion
0002c800                _SAR_stopConversion
000489a0                _SDIO_clearResponse
00047b14                _SDIO_close
00047b3c                _SDIO_config
000485b4                _SDIO_deselectCard
00047c14                _SDIO_detectCard
00048d78                _SDIO_eventDisable
00048b50                _SDIO_eventEnable
000484ec                _SDIO_getRca
0004880c                _SDIO_getResponse
00048ae4                _SDIO_getSdioStatus
00048a7c                _SDIO_getStatus
00047a08                _SDIO_init
00047f80                _SDIO_initCard
00047a48                _SDIO_open
00049a90                _SDIO_readBlocks
0004920c                _SDIO_readBytes
00048fe0                _SDIO_readSingleByte
00048fa8                _SDIO_readWaitDisable
00048f70                _SDIO_readWaitEnable
00048404                _SDIO_resetCard
00048674                _SDIO_selectCard
00048738                _SDIO_sendCommand
0004a3a4                _SDIO_setClock
0004a324                _SDIO_setEndianMode
00049ed0                _SDIO_writeBlocks
00049650                _SDIO_writeBytes
0004910c                _SDIO_writeSingleByte
00044cc8                _SD_configurePullup
00042948                _SD_getCardCsd
00042308                _SD_sendAllCID
00042034                _SD_sendRca
00044a5c                _SD_setBusWidth
0002f7b4                _SPI_close
0002f7e0                _SPI_config
0002fc64                _SPI_dataTransaction
0002fa68                _SPI_deInit
0002f71c                _SPI_init
0002f780                _SPI_open
0002fa94                _SPI_read
0002fb78                _SPI_write
            00005c5e    _STATUS0_HIGH
            00005c5d    _STATUS0_LOW
            00005c60    _STATUS1_HIGH
            00005c5f    _STATUS1_LOW
            00005c62    _STATUS2_HIGH
            00005c61    _STATUS2_LOW
0002e430                _SYS_GlobalIntDisable
0002e428                _SYS_GlobalIntEnable
            00005d06    _SarHandle
            00005d02    _SarObj
00038178                _StartTimer0
00038134                _Timer0Init
            00005d2e    _Timer0_Int_CTR
            00005d2f    _Timer2_Int_CTR
00036c18                _Timer_isr
000278b4                _UART_config
00027bf4                _UART_eventDisable
00027b5c                _UART_eventEnable
00027f34                _UART_fgetc
0002805c                _UART_fgets
00027fd4                _UART_fputc
0002818c                _UART_fputs
000282a4                _UART_getConfig
0002827c                _UART_getEventId
00027350                _UART_init
00027c84                _UART_read
00027ac8                _UART_reset
00027b10                _UART_resetOff
00028364                _UART_setCallback
0002740c                _UART_setup
000279bc                _UART_setupBaudRate
00027db0                _UART_write
0004bbd4                _USB_abortAllTransaction
0004ba74                _USB_abortTransaction
0004b4d0                _USB_bytesRemaining
0004b6d8                _USB_clearEndptStall
0004bc28                _USB_connectDev
0004c148                _USB_coreEventProcessEp0
0004bc5c                _USB_disconnectDev
0004b944                _USB_epNumToHandle
0004bfc4                _USB_findFifoSize
0004bf6c                _USB_getDataCountReadFromFifo
0004b8c0                _USB_getEndptStall
0004b0fc                _USB_getEvents
0004bd6c                _USB_getFrameNo
0004bf18                _USB_getMaxPower
0004bcbc                _USB_getRemoteWakeupStat
0004b1e4                _USB_getSetupPacket
0004a6c0                _USB_init
0004ad14                _USB_initEndptObj
0004be38                _USB_initPLL
0004b448                _USB_isTransactionDone
0004bcd4                _USB_issueRemoteWakeup
0004b174                _USB_peekEvents
0004b28c                _USB_postTransaction
0004aae4                _USB_resetDev
0004bdcc                _USB_selfwakeup
0004bd24                _USB_setDevAddr
0004bf38                _USB_setFullSpeedMode
0004bebc                _USB_setParams
0004bc8c                _USB_setRemoteWakeup
0004b564                _USB_stallEndpt
0004bd88                _USB_suspendDevice
0004df00                _VECSTART
00035170                _WDTIM_close
000351e8                _WDTIM_config
00035140                _WDTIM_getCnt
00035254                _WDTIM_getConfig
00035038                _WDTIM_open
000351b4                _WDTIM_service
000350b0                _WDTIM_start
000350f8                _WDTIM_stop
            00005530    _XmitL_Sine_1K
            00005560    _XmitL_Sine_2K
            00005590    _XmitR_Sine_1K
            000055c0    _XmitR_Sine_2K
            00020334    __CIOBUF_
            00001060    __STACK_END
00002000                __STACK_SIZE
00005000                __SYSMEM_SIZE
00001000                __SYSSTACK_SIZE
00000001                __TI_args_main
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
            00020000    ___cinit__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
00038347                ___isinf
ffffffff                ___pinit__
ffffffff                ___text__
000354fc                __addd
00038180                __args_main
00034ed9                __cleanup
            00005d28    __cleanup_ptr
00035f39                __cmpd
            0000607c    __ctypes_
0003313a                __divd
00038216                __divli
000354c7                __divlli
000382fa                __divu
00037742                __divul
000353d3                __divull
000373ca                __doflush
            00005d2a    __dtors_ptr
00035f05                __eqld
000382d0                __fixdi
00037d88                __fixdli
00037ecf                __fltlid
000383cc                __fltud
00037f92                __fltuld
00037c2d                __frcmpyd
00037ca3                __frcmpyd_div
            0000576c    __ft_end
            00005654    __ftable
00035ebb                __geqd
00035e70                __gtrd
00035e23                __leqd
            00005d24    __lock
00035ddb                __lssd
00036acb                __mpyd
00038375                __mpyli
0003531b                __mpylli
000383bc                __negd
00035da7                __neqd
00038398                __nop
00024a1e                __printfi
0003729e                __rd_ok
00038390                __register_lock
00038388                __register_unlock
000381cb                __remli
000352ec                __remlli
0003830f                __remu
00037d16                __remul
0003529e                __remull
            00000060    __stack
00038361                __subd
            0001c1f3    __sys_memory
            00001060    __sysstack
            000056cc    __tmpnams
            00005d26    __unlock
0003721e                __wrt_ok
0004cef7                _abort
00030c52                _add_device
00037f36                _atoi
000380e6                _auto_init
0003829c                _c_int00
            00004d68    _cached_phySector0
            00004d6a    _cached_phySector1
            00004d6c    _cached_phySector2
            00004d6e    _cached_phySector3
00032108                _calloc
            000059e2    _cardAddr
00032100                _chkheap
00030bdf                _close
00037024                _convert_number_to_string
00034d80                _disable_i2s0
00034d8e                _disable_i2s1
00034d9c                _disable_i2s2
00034daa                _disable_i2s3
00035ba0                _enable_dma_int
00034d48                _enable_i2s0
00034d56                _enable_i2s1
00034d64                _enable_i2s2
00034d72                _enable_i2s3
00036f5c                _enable_rtc_second_int
0003825e                _exit
            00005c25    _f1KToneOn
            00005c26    _f2KToneOn
            00005c24    _fSineWave
            00005d2c    _fTimer
            00005d2d    _fTimer02
00037bb2                _fclose
00037433                _fflush
00030bd6                _find_registered_device
            00005c56    _first_flag
            00005c52    _first_save_xsp
            00005c54    _first_save_xssp
00034ffc                _fopen
000375f7                _fputc
00036968                _fputs
00031c79                _free
000320aa                _free_memory
00034f33                _freopen
            00005c22    _fsError
00037e64                _fseek
            0000544a    _gBulkInTransfer
            00005458    _gBulkOutTransfer
            0000543c    _gCtrlTransfer
            00005490    _gEpStatus
            00005cb6    _gI2cObj
            00005482    _gIntInTransfer
            00005466    _gIsoInTransfer
            00005474    _gIsoOutTransfer
            00004966    _gNextPhySector
            00004864    _gReadBuf
            00005374    _gUsbContext
            00005520    _gUsbEpHandle
            00004964    _gWordCount
            00004968    _gWriteBuf
0003127c                _getenv
            00005d1a    _hGpio
            00005d34    _hI2s
            0000587e    _hSpi
            00005ca0    _hUart
            00005cc6    _i2cHandle
00034b20                _i2s0_read_CR
00034b68                _i2s0_read_INTR
00034b6e                _i2s0_read_INT_MASK
00034b7a                _i2s0_read_RXL_LSW
00034b86                _i2s0_read_RXL_MSW
00034b92                _i2s0_read_RXR_LSW
00034b9e                _i2s0_read_RXR_MSW
00034b2c                _i2s0_read_SRGR
00034b38                _i2s0_read_TXL_LSW
00034b44                _i2s0_read_TXL_MSW
00034b50                _i2s0_read_TXR_LSW
00034b5c                _i2s0_read_TXR_MSW
00034b26                _i2s0_write_CR
00034b74                _i2s0_write_INT_MASK
00034b80                _i2s0_write_RXL_LSW
00034b8c                _i2s0_write_RXL_MSW
00034b98                _i2s0_write_RXR_LSW
00034ba4                _i2s0_write_RXR_MSW
00034b32                _i2s0_write_SRGR
00034b3e                _i2s0_write_TXL_LSW
00034b4a                _i2s0_write_TXL_MSW
00034b56                _i2s0_write_TXR_LSW
00034b62                _i2s0_write_TXR_MSW
00034baa                _i2s1_read_CR
00034bf2                _i2s1_read_INTR
00034bf8                _i2s1_read_INT_MASK
00034c04                _i2s1_read_RXL_LSW
00034c10                _i2s1_read_RXL_MSW
00034c1c                _i2s1_read_RXR_LSW
00034c28                _i2s1_read_RXR_MSW
00034bb6                _i2s1_read_SRGR
00034bc2                _i2s1_read_TXL_LSW
00034bce                _i2s1_read_TXL_MSW
00034bda                _i2s1_read_TXR_LSW
00034be6                _i2s1_read_TXR_MSW
00034bb0                _i2s1_write_CR
00034bfe                _i2s1_write_INT_MASK
00034c0a                _i2s1_write_RXL_LSW
00034c16                _i2s1_write_RXL_MSW
00034c22                _i2s1_write_RXR_LSW
00034c2e                _i2s1_write_RXR_MSW
00034bbc                _i2s1_write_SRGR
00034bc8                _i2s1_write_TXL_LSW
00034bd4                _i2s1_write_TXL_MSW
00034be0                _i2s1_write_TXR_LSW
00034bec                _i2s1_write_TXR_MSW
00034c34                _i2s2_read_CR
00034c7c                _i2s2_read_INTR
00034c82                _i2s2_read_INT_MASK
00034c8e                _i2s2_read_RXL_LSW
00034c9a                _i2s2_read_RXL_MSW
00034ca6                _i2s2_read_RXR_LSW
00034cb2                _i2s2_read_RXR_MSW
00034c40                _i2s2_read_SRGR
00034c4c                _i2s2_read_TXL_LSW
00034c58                _i2s2_read_TXL_MSW
00034c64                _i2s2_read_TXR_LSW
00034c70                _i2s2_read_TXR_MSW
00034c3a                _i2s2_write_CR
00034c88                _i2s2_write_INT_MASK
00034c94                _i2s2_write_RXL_LSW
00034ca0                _i2s2_write_RXL_MSW
00034cac                _i2s2_write_RXR_LSW
00034cb8                _i2s2_write_RXR_MSW
00034c46                _i2s2_write_SRGR
00034c52                _i2s2_write_TXL_LSW
00034c5e                _i2s2_write_TXL_MSW
00034c6a                _i2s2_write_TXR_LSW
00034c76                _i2s2_write_TXR_MSW
00034cbe                _i2s3_read_CR
00034d06                _i2s3_read_INTR
00034d0c                _i2s3_read_INT_MASK
00034d18                _i2s3_read_RXL_LSW
00034d24                _i2s3_read_RXL_MSW
00034d30                _i2s3_read_RXR_LSW
00034d3c                _i2s3_read_RXR_MSW
00034cca                _i2s3_read_SRGR
00034cd6                _i2s3_read_TXL_LSW
00034ce2                _i2s3_read_TXL_MSW
00034cee                _i2s3_read_TXR_LSW
00034cfa                _i2s3_read_TXR_MSW
00034cc4                _i2s3_write_CR
00034d12                _i2s3_write_INT_MASK
00034d1e                _i2s3_write_RXL_LSW
00034d2a                _i2s3_write_RXL_MSW
00034d36                _i2s3_write_RXR_LSW
00034d42                _i2s3_write_RXR_MSW
00034cd0                _i2s3_write_SRGR
00034cdc                _i2s3_write_TXL_LSW
00034ce8                _i2s3_write_TXL_MSW
00034cf4                _i2s3_write_TXR_LSW
00034d00                _i2s3_write_TXR_MSW
            00005d08    _keyCnt1
            00005d09    _keyCnt2
            00005d10    _led_tsk_ctr
            00005c28    _led_tsks_running
00030b70                _lseek
00037b35                _ltoa
0002e040                _main
00031daa                _malloc
00032050                _max_free
            00004d71    _mem
00037548                _mem_test
00038324                _memccpy
0004ceb8                _memcpy
0003839a                _memset
00031d45                _minit
            00005992    _mmcCardObj
            000059e4    _mmcStatus
            00005990    _mmcsdHandle
            00004965    _nbuf_cached
0002e864                _oled_test
00030ab1                _open
            00005c23    _ouError
            00005950    _pMmcsdContObj
0002601c                _pcQueueGetName
00020c08                _pcTaskGetName
            00005c4c    _portFLAGS_INT_ENABLED
            00005c4d    _portFLAGS_INT_ENABLED_POPPED
            00005d05    _preKey
00038046                _printf
00036304                _prvSetupTimerInterrupt
000375f7                _putc
0003768e                _putchar
00036a9d                _puts
000372fc                _pvPortMalloc
0002170c                _pvTaskIncrementMutexHeldCount
            00005bf0    _pxCurrentCoRoutine
            00005a6e    _pxCurrentTCB
00036158                _pxPortInitialiseStack
00030a03                _read
00037df7                _readmsg
00031e9f                _realloc
000383da                _remove
000309cd                _remove_device
00030974                _rename
00036f68                _reset_RTC
            00005c57    _save_xar6
            00005c58    _save_xar7
            00005c4e    _save_xsp
            00005c50    _save_xssp
            000059c0    _sdCardCsdObj
            000059b0    _sdCardIdObj
00035a5c                _set_dma0_ch0_i2s0_Lout
000359a8                _set_dma0_ch0_stop
00035b34                _set_dma0_ch1_i2s0_Rout
000359d8                _set_dma0_ch1_stop
000359f0                _set_dma1_ch0_i2s2_Lout
00035990                _set_dma1_ch0_stop
00035ac8                _set_dma1_ch1_i2s2_Rout
000359c0                _set_dma1_ch1_stop
000379d4                _set_i2s0_master
00037a08                _set_i2s0_slave
000379a0                _set_i2s2_master
00037058                _setvbuf
00036660                _spiflash_test
            00005a6c    _stackStruct
000383ab                _strlen
            00005373    _sysCtrlRegs
0002e500                _systemInit
            00005c68    _tOne
            00005c6a    _tThree
            00005c69    _tTwo
            00005c67    _tZero
            00005c5a    _tickIRQctr
            00005c8c    _uartObj
0002172c                _ulTaskNotifyTake
00030941                _unlink
            00005c6b    _usCriticalNesting
            00005372    _usbRegisters
00036464                _uxListRemove
00025958                _uxQueueMessagesWaiting
000259f0                _uxQueueMessagesWaitingFromISR
000259a0                _uxQueueSpacesAvailable
00020c00                _uxTaskGetNumberOfTasks
000212f0                _uxTaskGetStackHighWaterMark
00020540                _uxTaskPriorityGet
00020588                _uxTaskPriorityGetFromISR
000216dc                _uxTaskResetEventItemValue
0002e388                _vApplicationIdleHook
0002e57c                _vApplicationMallocFailedHook
0002e584                _vApplicationStackOverflowHook
0003263c                _vCoRoutineAddToDelayedList
00032834                _vCoRoutineSchedule
0002fcd8                _vCreateBlockTimeTasks
000307b0                _vEventGroupClearBitsCallback
0003073c                _vEventGroupDelete
0003079c                _vEventGroupSetBitsCallback
00036318                _vListInitialise
0003635c                _vListInitialiseItem
000363c4                _vListInsert
00036370                _vListInsertEnd
000377e4                _vParTestInitialise
000377e8                _vParTestSetLED
00037800                _vParTestToggleLED
00036300                _vPortEndScheduler
00037398                _vPortFree
000373b4                _vPortInitialiseBlocks
00032bfd                _vPortYield
00025fbc                _vQueueAddToRegistry
00025a10                _vQueueDelete
000358b4                _vQueueOverwritePeriodicISRDemo
00026078                _vQueueUnregisterQueue
000338cc                _vStartDynamicPriorityTasks
00036e58                _vStartIntegerMathTasks
00037140                _vStartLEDFlashTasks
00032d68                _vStartMathTasks
00035f94                _vStartPolledQueueTasks
00035758                _vStartQueueOverwriteTask
00032130                _vStartQueuePeekTasks
00034290                _vStartSemaphoreTasks
00020500                _vTaskDelay
0002043c                _vTaskDelayUntil
00020364                _vTaskDelete
00020a68                _vTaskEndScheduler
0002167c                _vTaskEnterCritical
000216a4                _vTaskExitCritical
000210b4                _vTaskInternalSetTimeOutState
0002119c                _vTaskMissedYield
00021c1c                _vTaskNotifyGiveFromISR
00020e90                _vTaskPlaceOnEventList
00020ec0                _vTaskPlaceOnUnorderedEventList
0002156c                _vTaskPriorityDisinheritAfterTimeout
000205ac                _vTaskPrioritySet
00020fc0                _vTaskRemoveFromUnorderedEventList
0002089c                _vTaskResume
00021060                _vTaskSetTimeOutState
000209fc                _vTaskStartScheduler
0002071c                _vTaskSuspend
00020a7c                _vTaskSuspendAll
00020d90                _vTaskSwitchContext
00032a85                _vTickISR
            00005a6a    _wall_clk_ctr
000307ff                _write
0003748c                _writemsg
0003023c                _xAreBlockTimeTestTasksStillRunning
00033bf0                _xAreDynamicPriorityTasksStillRunning
00036f2c                _xAreIntegerMathsTaskStillRunning
00033100                _xAreMathsTaskStillRunning
0003612c                _xArePollingQueuesStillRunning
00032528                _xAreQueuePeekTasksStillRunning
00034534                _xAreSemaphoreTasksStillRunning
00032560                _xCoRoutineCreate
00032938                _xCoRoutineRemoveFromEventList
0003056c                _xEventGroupClearBits
0003028c                _xEventGroupCreate
000305e4                _xEventGroupGetBitsFromISR
00030604                _xEventGroupSetBits
000302b4                _xEventGroupSync
00030400                _xEventGroupWaitBits
            00005ce0    _xHighPriorityTask
            00005ce2    _xHighestPriorityTask
00035884                _xIsQueueOverwriteTaskStillRunning
            00005cde    _xMediumPriorityTask
000373bc                _xPortGetFreeHeapSize
00032988                _xPortStartScheduler
00025e08                _xQueueCRReceive
00025f20                _xQueueCRReceiveFromISR
00025d74                _xQueueCRSend
00025ecc                _xQueueCRSendFromISR
00024ed4                _xQueueCreateCountingSemaphore
00024e08                _xQueueCreateMutex
00024d34                _xQueueGenericCreate
00024c60                _xQueueGenericReset
00024f1c                _xQueueGenericSend
000250f0                _xQueueGenericSendFromISR
000251c8                _xQueueGiveFromISR
00024e28                _xQueueGiveMutexRecursive
00025cd0                _xQueueIsQueueEmptyFromISR
00025d44                _xQueueIsQueueFullFromISR
00025670                _xQueuePeek
000258d8                _xQueuePeekFromISR
0002528c                _xQueueReceive
00025824                _xQueueReceiveFromISR
            00005c6c    _xQueueRegistry
0002543c                _xQueueSemaphoreTake
00024e80                _xQueueTakeMutexRecursive
            00005cd2    _xSuspendedTestQueue
000210d4                _xTaskCheckForTimeOut
00020000                _xTaskCreate
000218fc                _xTaskGenericNotify
00021a88                _xTaskGenericNotifyFromISR
00021388                _xTaskGetCurrentTaskHandle
00020bac                _xTaskGetTickCount
00020be8                _xTaskGetTickCountFromISR
00020c30                _xTaskIncrementTick
00021d00                _xTaskNotifyStateClear
00021800                _xTaskNotifyWait
000214a8                _xTaskPriorityDisinherit
0002139c                _xTaskPriorityInherit
00020f18                _xTaskRemoveFromEventList
00020a88                _xTaskResumeAll
0002095c                _xTaskResumeFromISR
ffffffff                binit
            00020000    cinit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit
00037ab6                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000001                __TI_args_main
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
            00000060    __stack
00001000                __SYSSTACK_SIZE
00002000                __STACK_SIZE
            00001060    __STACK_END
            00001060    __sysstack
00005000                __SYSMEM_SIZE
            00004864    _gReadBuf
            00004964    _gWordCount
            00004965    _nbuf_cached
            00004966    _gNextPhySector
            00004968    _gWriteBuf
            00004d68    _cached_phySector0
            00004d6a    _cached_phySector1
            00004d6c    _cached_phySector2
            00004d6e    _cached_phySector3
            00004d70    _ATA_No_Swap
            00004d71    _mem
            00005372    _usbRegisters
            00005373    _sysCtrlRegs
            00005374    _gUsbContext
            0000543c    _gCtrlTransfer
            0000544a    _gBulkInTransfer
            00005458    _gBulkOutTransfer
            00005466    _gIsoInTransfer
            00005474    _gIsoOutTransfer
            00005482    _gIntInTransfer
            00005490    _gEpStatus
            00005520    _gUsbEpHandle
            00005530    _XmitL_Sine_1K
            00005560    _XmitL_Sine_2K
            00005590    _XmitR_Sine_1K
            000055c0    _XmitR_Sine_2K
            000055f0    _RcvL_Sine
            00005620    _RcvR_Sine
            00005650    _DMA_Count
            00005651    _Error_Count_L
            00005652    _Error_Count_R
            00005653    _DMA_Done
            00005654    __ftable
            000056cc    __tmpnams
            0000576c    __ft_end
            0000587e    _hSpi
            00005950    _pMmcsdContObj
            00005990    _mmcsdHandle
            00005992    _mmcCardObj
            000059b0    _sdCardIdObj
            000059c0    _sdCardCsdObj
            000059e2    _cardAddr
            000059e4    _mmcStatus
            00005a6a    _wall_clk_ctr
            00005a6c    _stackStruct
            00005a6e    _pxCurrentTCB
            00005b59    _I2S_RCV_L
            00005b89    _I2S_RCV_R
            00005bb9    _Buf_Address
            00005bf0    _pxCurrentCoRoutine
            00005c22    _fsError
            00005c23    _ouError
            00005c24    _fSineWave
            00005c25    _f1KToneOn
            00005c26    _f2KToneOn
            00005c28    _led_tsks_running
            00005c4c    _portFLAGS_INT_ENABLED
            00005c4d    _portFLAGS_INT_ENABLED_POPPED
            00005c4e    _save_xsp
            00005c50    _save_xssp
            00005c52    _first_save_xsp
            00005c54    _first_save_xssp
            00005c56    _first_flag
            00005c57    _save_xar6
            00005c58    _save_xar7
            00005c5a    _tickIRQctr
            00005c5b    _DBSTAT_SAVE
            00005c5c    _DBSTAT_RESTORE
            00005c5d    _STATUS0_LOW
            00005c5e    _STATUS0_HIGH
            00005c5f    _STATUS1_LOW
            00005c60    _STATUS1_HIGH
            00005c61    _STATUS2_LOW
            00005c62    _STATUS2_HIGH
            00005c63    _PC_REG_HIGH_RESTORE
            00005c64    _PC_REG_LOW_RESTORE
            00005c65    _PC_REG_HIGH_SAVE
            00005c66    _PC_REG_LOW_SAVE
            00005c67    _tZero
            00005c68    _tOne
            00005c69    _tTwo
            00005c6a    _tThree
            00005c6b    _usCriticalNesting
            00005c6c    _xQueueRegistry
            00005c8c    _uartObj
            00005ca0    _hUart
            00005ca2    _Buf_sec
            00005ca5    _Buf_min
            00005ca8    _Buf_hour
            00005cab    _Buf_day
            00005cae    _Buf_month
            00005cb1    _Buf_year
            00005cb4    _Flag_RTC
            00005cb5    _Conunt_RTC
            00005cb6    _gI2cObj
            00005cc6    _i2cHandle
            00005cd2    _xSuspendedTestQueue
            00005cde    _xMediumPriorityTask
            00005ce0    _xHighPriorityTask
            00005ce2    _xHighestPriorityTask
            00005d02    _SarObj
            00005d05    _preKey
            00005d06    _SarHandle
            00005d08    _keyCnt1
            00005d09    _keyCnt2
            00005d10    _led_tsk_ctr
            00005d18    _GpioObj
            00005d1a    _hGpio
            00005d1e    _LED_Blink_ctr
            00005d24    __lock
            00005d26    __unlock
            00005d28    __cleanup_ptr
            00005d2a    __dtors_ptr
            00005d2c    _fTimer
            00005d2d    _fTimer02
            00005d2e    _Timer0_Int_CTR
            00005d2f    _Timer2_Int_CTR
            00005d34    _hI2s
            0000607c    __ctypes_
00020000                _xTaskCreate
00020364                _vTaskDelete
0002043c                _vTaskDelayUntil
00020500                _vTaskDelay
00020540                _uxTaskPriorityGet
00020588                _uxTaskPriorityGetFromISR
000205ac                _vTaskPrioritySet
0002071c                _vTaskSuspend
0002089c                _vTaskResume
0002095c                _xTaskResumeFromISR
000209fc                _vTaskStartScheduler
00020a68                _vTaskEndScheduler
00020a7c                _vTaskSuspendAll
00020a88                _xTaskResumeAll
00020bac                _xTaskGetTickCount
00020be8                _xTaskGetTickCountFromISR
00020c00                _uxTaskGetNumberOfTasks
00020c08                _pcTaskGetName
00020c30                _xTaskIncrementTick
00020d90                _vTaskSwitchContext
00020e90                _vTaskPlaceOnEventList
00020ec0                _vTaskPlaceOnUnorderedEventList
00020f18                _xTaskRemoveFromEventList
00020fc0                _vTaskRemoveFromUnorderedEventList
00021060                _vTaskSetTimeOutState
000210b4                _vTaskInternalSetTimeOutState
000210d4                _xTaskCheckForTimeOut
0002119c                _vTaskMissedYield
000212f0                _uxTaskGetStackHighWaterMark
00021388                _xTaskGetCurrentTaskHandle
0002139c                _xTaskPriorityInherit
000214a8                _xTaskPriorityDisinherit
0002156c                _vTaskPriorityDisinheritAfterTimeout
0002167c                _vTaskEnterCritical
000216a4                _vTaskExitCritical
000216dc                _uxTaskResetEventItemValue
0002170c                _pvTaskIncrementMutexHeldCount
0002172c                _ulTaskNotifyTake
00021800                _xTaskNotifyWait
000218fc                _xTaskGenericNotify
00021a88                _xTaskGenericNotifyFromISR
00021c1c                _vTaskNotifyGiveFromISR
00021d00                _xTaskNotifyStateClear
00021e10                _DMA_init
00021e48                _DMA_open
00021f34                _DMA_close
00021f54                _DMA_config
00022b28                _DMA_getConfig
00023098                _DMA_start
000231a8                _DMA_stop
000232ac                _DMA_reset
00023598                _DMA_swapWords
00023610                _DMA_getLastTransferType
00024a1e                __printfi
00024c60                _xQueueGenericReset
00024d34                _xQueueGenericCreate
00024e08                _xQueueCreateMutex
00024e28                _xQueueGiveMutexRecursive
00024e80                _xQueueTakeMutexRecursive
00024ed4                _xQueueCreateCountingSemaphore
00024f1c                _xQueueGenericSend
000250f0                _xQueueGenericSendFromISR
000251c8                _xQueueGiveFromISR
0002528c                _xQueueReceive
0002543c                _xQueueSemaphoreTake
00025670                _xQueuePeek
00025824                _xQueueReceiveFromISR
000258d8                _xQueuePeekFromISR
00025958                _uxQueueMessagesWaiting
000259a0                _uxQueueSpacesAvailable
000259f0                _uxQueueMessagesWaitingFromISR
00025a10                _vQueueDelete
00025cd0                _xQueueIsQueueEmptyFromISR
00025d44                _xQueueIsQueueFullFromISR
00025d74                _xQueueCRSend
00025e08                _xQueueCRReceive
00025ecc                _xQueueCRSendFromISR
00025f20                _xQueueCRReceiveFromISR
00025fbc                _vQueueAddToRegistry
0002601c                _pcQueueGetName
00026078                _vQueueUnregisterQueue
000260d8                _NAND_init
0002616c                _NAND_setup
00026688                _NAND_getBankInfo
0002674c                _NAND_setLatchEnableOffset
00026788                _NAND_isStatusWriteProtected
00026870                _NAND_sendCommand
0002689c                _NAND_checkCommandStatus
00026904                _NAND_setAddress
00026948                _NAND_enableHwECC
00026a70                _NAND_disableHwECC
00026b58                _NAND_readECC
00026d0c                _NAND_readNBytes
00026e20                _NAND_writeNBytes
00026ffc                _NAND_hasRandomRead
0002702c                _NAND_hasRandomWrite
0002705c                _NAND_hasCacheProg
0002708c                _NAND_hasCopyBack
000270bc                _NAND_intrEnable
0002711c                _NAND_intrDisable
0002717c                _NAND_getIntrNum
0002719c                _NAND_intrReadAT
000271dc                _NAND_intrReadLT
00027220                _NAND_intrReadWR
00027264                _NAND_intrClear
00027350                _UART_init
0002740c                _UART_setup
000278b4                _UART_config
000279bc                _UART_setupBaudRate
00027ac8                _UART_reset
00027b10                _UART_resetOff
00027b5c                _UART_eventEnable
00027bf4                _UART_eventDisable
00027c84                _UART_read
00027db0                _UART_write
00027f34                _UART_fgetc
00027fd4                _UART_fputc
0002805c                _UART_fgets
0002818c                _UART_fputs
0002827c                _UART_getEventId
000282a4                _UART_getConfig
00028364                _UART_setCallback
000283cc                _DAT_open
000284a4                _DAT_close
00028638                _DAT_copy
00028b34                _DAT_fill
00029044                _DAT_wait
0002920c                _AC_Open
00029454                _AC_Close
00029490                _AC_Ctrl
00029688                _AC_Iso
00029724                _AC_GetactivityFlagStatus
00029740                _AC_GetsuspendFlagStatus
00029758                _AC_initDescriptors
00029a08                _AC_reqGetDescriptor
00029be0                _AC_reqSetCurrent
00029cbc                _AC_reqGetCurrent
00029d80                _AC_reqGetMinimum
00029dc4                _AC_reqGetMaximum
00029e08                _AC_reqGetResolution
00029e4c                _AC_reqSetInterface
00029f98                _CDC_Open
00029fbc                _CDC_OpenFullspeed
0002a190                _CDC_Close
0002a1cc                _CDC_GetactivityFlagStatus
0002a1e4                _CDC_GetsuspendFlagStatus
0002a1fc                _CDC_eventHandler
0002a4f8                _CDC_bulkOutHandler
0002a5f8                _CDC_bulkInHandler
0002a8e8                _CDC_getData
0002a978                _CDC_putData
0002ab6c                _I2C_init
0002ac18                _I2C_config
0002ad80                _I2C_getConfig
0002ae58                _I2C_setup
0002b054                _I2C_write
0002b298                _I2C_read
0002b4b8                _I2C_eventEnable
0002b5ec                _I2C_eventDisable
0002b70c                _I2C_setCallback
0002b79c                _I2C_getEventId
0002b7b8                _MMC_initState
0002b8fc                _MMC_readWriteControl
0002bbdc                _MMC_issueReadCommand
0002bd98                _MMC_readNextWord
0002be08                _MMC_readNextWord1
0002be7c                _MMC_readNextNWords
0002beec                _MMC_writeSector
0002bfd4                _MMC_readNSectors
0002c0ac                _MMC_writeNSectors
0002c184                _MMC_read_CID
0002c1f0                _MMC_read_CSD
0002c25c                _MMC_writeSectorFlush
0002c268                _MMC_commandReadyStatusCheck
0002c274                _MMC_dataReadyStatusCheck
0002c280                _MMC_busyStatusCheck
0002c28c                _MMC_getSerialID
0002c29c                _MMC_file_system_format
0002c2a8                _MMC_reset
0002c2b4                _MMC_get_time
0002c2b8                _MMC_get_mod_time
0002c2bc                _MMC_get_date
0002c2c0                _MMC_get_mod_date
0002c2c4                _MMC_flushFat
0002c2f8                _SAR_init
0002c358                _SAR_deInit
0002c378                _SAR_chanInit
0002c394                _SAR_chanOpen
0002c3f8                _SAR_chanClose
0002c47c                _SAR_chanConfig
0002c4f4                _SAR_getConfig
0002c568                _SAR_chanSetup
0002c77c                _SAR_chanCycSet
0002c7cc                _SAR_startConversion
0002c800                _SAR_stopConversion
0002c848                _SAR_readData
0002c88c                _SAR_A2DMeasParamSet
0002cd08                _SAR_GPODirSet
0002cde4                _SAR_getStatus
0002ce24                _I2S_open
0002cf68                _I2S_setup
0002d250                _I2S_close
0002d2fc                _I2S_read
0002d5b8                _I2S_write
0002d710                _I2S_reset
0002d7bc                _I2S_transEnable
0002d808                _LCD_init
0002d830                _LCD_open
0002d874                _LCD_setup
0002dcd0                _LCD_configDMA
0002e020                _LCD_close
0002e040                _main
0002e388                _vApplicationIdleHook
0002e3b8                _InitSystem
0002e420                _ConfigPort
0002e428                _SYS_GlobalIntEnable
0002e430                _SYS_GlobalIntDisable
0002e43c                _BlinkLED
0002e474                _GenerateAudioTone
0002e500                _systemInit
0002e57c                _vApplicationMallocFailedHook
0002e584                _vApplicationStackOverflowHook
0002e594                _LED_TaskBlue
0002e5d4                _LED_TaskRed
0002e864                _oled_test
0002f084                _GPIO_open
0002f0c8                _GPIO_close
0002f0ec                _GPIO_config
0002f174                _GPIO_getConfig
0002f1fc                _GPIO_read
0002f280                _GPIO_write
0002f324                _GPIO_configBit
0002f46c                _GPIO_disableInt
0002f4ec                _GPIO_enableInt
0002f578                _GPIO_clearInt
0002f604                _GPIO_statusBit
0002f68c                _GPIO_reset
0002f71c                _SPI_init
0002f780                _SPI_open
0002f7b4                _SPI_close
0002f7e0                _SPI_config
0002fa68                _SPI_deInit
0002fa94                _SPI_read
0002fb78                _SPI_write
0002fc64                _SPI_dataTransaction
0002fcd8                _vCreateBlockTimeTasks
0003023c                _xAreBlockTimeTestTasksStillRunning
0003028c                _xEventGroupCreate
000302b4                _xEventGroupSync
00030400                _xEventGroupWaitBits
0003056c                _xEventGroupClearBits
000305e4                _xEventGroupGetBitsFromISR
00030604                _xEventGroupSetBits
0003073c                _vEventGroupDelete
0003079c                _vEventGroupSetBitsCallback
000307b0                _vEventGroupClearBitsCallback
000307ff                _write
00030941                _unlink
00030974                _rename
000309cd                _remove_device
00030a03                _read
00030ab1                _open
00030b70                _lseek
00030bd6                _find_registered_device
00030bdf                _close
00030c52                _add_device
00030d44                _IRQ_init
00030dcc                _IRQ_clear
00030e38                _IRQ_clearAll
00030e48                _IRQ_config
00030ed0                _IRQ_getConfig
00030f58                _IRQ_disable
00030fd8                _IRQ_disableAll
00030fe8                _IRQ_enable
00031074                _IRQ_restore
000310e4                _IRQ_getArg
00031128                _IRQ_setArg
0003115c                _IRQ_map
00031188                _IRQ_setVecs
000311bc                _IRQ_test
00031230                _IRQ_globalDisable
0003124c                _IRQ_globalEnable
00031268                _IRQ_globalRestore
0003127c                _getenv
000312f7                _HOSTwrite
00031384                _HOSTunlink
000313ee                _HOSTtime
0003144c                _HOSTrename
000314fa                _HOSTread
00031587                _HOSTopen
00031626                _HOSTlseek
000316db                _HOSTclose
00031746                _HOSTclock
000317a4                _EZDSP5535_SDCARD_init
00031b4c                _EZDSP5535_SDCARD_read
00031b80                _EZDSP5535_SDCARD_write
00031bb4                _EZDSP5535_SDCARD_close
00031c79                _free
00031d45                _minit
00031daa                _malloc
00031e9f                _realloc
00032050                _max_free
000320aa                _free_memory
00032100                _chkheap
00032108                _calloc
00032130                _vStartQueuePeekTasks
00032528                _xAreQueuePeekTasksStillRunning
00032560                _xCoRoutineCreate
0003263c                _vCoRoutineAddToDelayedList
00032834                _vCoRoutineSchedule
00032938                _xCoRoutineRemoveFromEventList
00032988                _xPortStartScheduler
00032a85                _vTickISR
00032bfd                _vPortYield
00032d68                _vStartMathTasks
00033100                _xAreMathsTaskStillRunning
0003313a                __divd
00033508                _EZDSP5535_SPIFLASH_init
0003356c                _EZDSP5535_SPIFLASH_status
000335b0                _EZDSP5535_SPIFLASH_erase
000336b4                _EZDSP5535_SPIFLASH_read
00033764                _EZDSP5535_SPIFLASH_write
000338cc                _vStartDynamicPriorityTasks
00033bf0                _xAreDynamicPriorityTasksStillRunning
00033c50                _MEM_init
00033c54                _MEM_enableRetentionMode
00033c98                _MEM_disableRetentionMode
00033cdc                _MEM_enablePartialRetentionMode
00033e24                _MEM_disablePartialRetentionMode
00033f48                _MEM_setmSDRAMClock
00033f84                _MEM_getmSDRAMClock
00033f98                _GPT_open
0003405c                _GPT_reset
000340d8                _GPT_close
00034150                _GPT_start
00034180                _GPT_stop
000341ac                _GPT_getCnt
000341e8                _GPT_config
00034290                _vStartSemaphoreTasks
00034534                _xAreSemaphoreTasksStillRunning
00034584                _AIC3254_init
000348a0                _PLL_init
000348d8                _PLL_config
000349fc                _PLL_enable
00034a64                _PLL_bypass
00034ab4                _PLL_reset
00034b20                _i2s0_read_CR
00034b26                _i2s0_write_CR
00034b2c                _i2s0_read_SRGR
00034b32                _i2s0_write_SRGR
00034b38                _i2s0_read_TXL_LSW
00034b3e                _i2s0_write_TXL_LSW
00034b44                _i2s0_read_TXL_MSW
00034b4a                _i2s0_write_TXL_MSW
00034b50                _i2s0_read_TXR_LSW
00034b56                _i2s0_write_TXR_LSW
00034b5c                _i2s0_read_TXR_MSW
00034b62                _i2s0_write_TXR_MSW
00034b68                _i2s0_read_INTR
00034b6e                _i2s0_read_INT_MASK
00034b74                _i2s0_write_INT_MASK
00034b7a                _i2s0_read_RXL_LSW
00034b80                _i2s0_write_RXL_LSW
00034b86                _i2s0_read_RXL_MSW
00034b8c                _i2s0_write_RXL_MSW
00034b92                _i2s0_read_RXR_LSW
00034b98                _i2s0_write_RXR_LSW
00034b9e                _i2s0_read_RXR_MSW
00034ba4                _i2s0_write_RXR_MSW
00034baa                _i2s1_read_CR
00034bb0                _i2s1_write_CR
00034bb6                _i2s1_read_SRGR
00034bbc                _i2s1_write_SRGR
00034bc2                _i2s1_read_TXL_LSW
00034bc8                _i2s1_write_TXL_LSW
00034bce                _i2s1_read_TXL_MSW
00034bd4                _i2s1_write_TXL_MSW
00034bda                _i2s1_read_TXR_LSW
00034be0                _i2s1_write_TXR_LSW
00034be6                _i2s1_read_TXR_MSW
00034bec                _i2s1_write_TXR_MSW
00034bf2                _i2s1_read_INTR
00034bf8                _i2s1_read_INT_MASK
00034bfe                _i2s1_write_INT_MASK
00034c04                _i2s1_read_RXL_LSW
00034c0a                _i2s1_write_RXL_LSW
00034c10                _i2s1_read_RXL_MSW
00034c16                _i2s1_write_RXL_MSW
00034c1c                _i2s1_read_RXR_LSW
00034c22                _i2s1_write_RXR_LSW
00034c28                _i2s1_read_RXR_MSW
00034c2e                _i2s1_write_RXR_MSW
00034c34                _i2s2_read_CR
00034c3a                _i2s2_write_CR
00034c40                _i2s2_read_SRGR
00034c46                _i2s2_write_SRGR
00034c4c                _i2s2_read_TXL_LSW
00034c52                _i2s2_write_TXL_LSW
00034c58                _i2s2_read_TXL_MSW
00034c5e                _i2s2_write_TXL_MSW
00034c64                _i2s2_read_TXR_LSW
00034c6a                _i2s2_write_TXR_LSW
00034c70                _i2s2_read_TXR_MSW
00034c76                _i2s2_write_TXR_MSW
00034c7c                _i2s2_read_INTR
00034c82                _i2s2_read_INT_MASK
00034c88                _i2s2_write_INT_MASK
00034c8e                _i2s2_read_RXL_LSW
00034c94                _i2s2_write_RXL_LSW
00034c9a                _i2s2_read_RXL_MSW
00034ca0                _i2s2_write_RXL_MSW
00034ca6                _i2s2_read_RXR_LSW
00034cac                _i2s2_write_RXR_LSW
00034cb2                _i2s2_read_RXR_MSW
00034cb8                _i2s2_write_RXR_MSW
00034cbe                _i2s3_read_CR
00034cc4                _i2s3_write_CR
00034cca                _i2s3_read_SRGR
00034cd0                _i2s3_write_SRGR
00034cd6                _i2s3_read_TXL_LSW
00034cdc                _i2s3_write_TXL_LSW
00034ce2                _i2s3_read_TXL_MSW
00034ce8                _i2s3_write_TXL_MSW
00034cee                _i2s3_read_TXR_LSW
00034cf4                _i2s3_write_TXR_LSW
00034cfa                _i2s3_read_TXR_MSW
00034d00                _i2s3_write_TXR_MSW
00034d06                _i2s3_read_INTR
00034d0c                _i2s3_read_INT_MASK
00034d12                _i2s3_write_INT_MASK
00034d18                _i2s3_read_RXL_LSW
00034d1e                _i2s3_write_RXL_LSW
00034d24                _i2s3_read_RXL_MSW
00034d2a                _i2s3_write_RXL_MSW
00034d30                _i2s3_read_RXR_LSW
00034d36                _i2s3_write_RXR_LSW
00034d3c                _i2s3_read_RXR_MSW
00034d42                _i2s3_write_RXR_MSW
00034d48                _enable_i2s0
00034d56                _enable_i2s1
00034d64                _enable_i2s2
00034d72                _enable_i2s3
00034d80                _disable_i2s0
00034d8e                _disable_i2s1
00034d9c                _disable_i2s2
00034daa                _disable_i2s3
00034ed9                __cleanup
00034f33                _freopen
00034ffc                _fopen
00035038                _WDTIM_open
000350b0                _WDTIM_start
000350f8                _WDTIM_stop
00035140                _WDTIM_getCnt
00035170                _WDTIM_close
000351b4                _WDTIM_service
000351e8                _WDTIM_config
00035254                _WDTIM_getConfig
0003529e                __remull
000352ec                __remlli
0003531b                __mpylli
000353d3                __divull
000354c7                __divlli
000354fc                __addd
00035758                _vStartQueueOverwriteTask
00035884                _xIsQueueOverwriteTaskStillRunning
000358b4                _vQueueOverwritePeriodicISRDemo
00035990                _set_dma1_ch0_stop
000359a8                _set_dma0_ch0_stop
000359c0                _set_dma1_ch1_stop
000359d8                _set_dma0_ch1_stop
000359f0                _set_dma1_ch0_i2s2_Lout
00035a5c                _set_dma0_ch0_i2s0_Lout
00035ac8                _set_dma1_ch1_i2s2_Rout
00035b34                _set_dma0_ch1_i2s0_Rout
00035ba0                _enable_dma_int
00035bb0                _EZDSP5535_LED_init
00035be8                _EZDSP5535_LED_getall
00035c3c                _EZDSP5535_LED_setall
00035cac                _EZDSP5535_LED_on
00035ce4                _EZDSP5535_LED_off
00035d18                _EZDSP5535_LED_toggle
00035d60                _EZDSP5535_XF_on
00035d6c                _EZDSP5535_XF_off
00035d78                _EZDSP5535_XF_get
00035d88                _EZDSP5535_XF_toggle
00035da7                __neqd
00035ddb                __lssd
00035e23                __leqd
00035e70                __gtrd
00035ebb                __geqd
00035f05                __eqld
00035f39                __cmpd
00035f94                _vStartPolledQueueTasks
0003612c                _xArePollingQueuesStillRunning
00036158                _pxPortInitialiseStack
00036300                _vPortEndScheduler
00036304                _prvSetupTimerInterrupt
00036318                _vListInitialise
0003635c                _vListInitialiseItem
00036370                _vListInsertEnd
000363c4                _vListInsert
00036464                _uxListRemove
000364c8                _EZDSP5535_OSD9616_send
000364f0                _EZDSP5535_OSD9616_multiSend
0003653c                _EZDSP5535_OSD9616_init
00036620                _EZDSP5535_OSD9616_printLetter
00036660                _spiflash_test
000367ec                _EZDSP5535_SAR_init
000368b4                _EZDSP5535_SAR_getKey
00036968                _fputs
00036a9d                _puts
00036acb                __mpyd
00036c18                _Timer_isr
00036d44                _EZDSP5535_I2S_init
00036da0                _EZDSP5535_I2S_readLeft
00036dd4                _EZDSP5535_I2S_writeLeft
00036e04                _EZDSP5535_I2S_readRight
00036e28                _EZDSP5535_I2S_writeRight
00036e44                _EZDSP5535_I2S_close
00036e58                _vStartIntegerMathTasks
00036f2c                _xAreIntegerMathsTaskStillRunning
00036f5c                _enable_rtc_second_int
00036f68                _reset_RTC
00037024                _convert_number_to_string
00037058                _setvbuf
00037140                _vStartLEDFlashTasks
0003721e                __wrt_ok
0003729e                __rd_ok
000372fc                _pvPortMalloc
00037398                _vPortFree
000373b4                _vPortInitialiseBlocks
000373bc                _xPortGetFreeHeapSize
000373ca                __doflush
00037433                _fflush
0003748c                _writemsg
00037541                C$$IO$$
00037548                _mem_test
000375f7                _fputc
000375f7                _putc
0003768e                _putchar
000376a0                _EZDSP5535_UART_open
00037710                _EVM5515_UART_putChar
00037728                _EVM5515_UART_getChar
00037742                __divul
000377e4                _vParTestInitialise
000377e8                _vParTestSetLED
00037800                _vParTestToggleLED
00037880                _EZDSP5535_I2C_init
000378b8                _EZDSP5535_I2C_reset
000378c4                _EZDSP5535_I2C_write
000378ec                _EZDSP5535_I2C_read
00037914                _IRQ_plug
000379a0                _set_i2s2_master
000379d4                _set_i2s0_master
00037a08                _set_i2s0_slave
00037a2c                _EZDSP5535_GPIO_init
00037a58                _EZDSP5535_GPIO_setDirection
00037a7c                _EZDSP5535_GPIO_setOutput
00037a98                _EZDSP5535_GPIO_getInput
00037ab6                reset_isr
00037b35                _ltoa
00037bb2                _fclose
00037c2d                __frcmpyd
00037ca3                __frcmpyd_div
00037d16                __remul
00037d88                __fixdli
00037df7                _readmsg
00037e64                _fseek
00037ecf                __fltlid
00037f36                _atoi
00037f92                __fltuld
00037ff0                _EZDSP5535_wait
00038024                _EZDSP5535_waitusec
00038038                _EZDSP5535_init
00038046                _printf
00038098                _RTC_Isr
000380e6                _auto_init
00038134                _Timer0Init
00038178                _StartTimer0
00038180                __args_main
000381cb                __remli
00038216                __divli
0003825e                _exit
0003829c                _c_int00
000382d0                __fixdi
000382fa                I$$UDIV
000382fa                __divu
0003830f                I$$UMOD
0003830f                __remu
00038324                _memccpy
00038347                ___isinf
00038361                __subd
00038375                I$$LMPY
00038375                __mpyli
00038388                __register_unlock
00038390                __register_lock
00038398                __nop
0003839a                _memset
000383ab                _strlen
000383bc                __negd
000383cc                __fltud
000383da                _remove
            0001c1f3    __sys_memory
            00020000    ___cinit__
            00020000    cinit
            00020334    __CIOBUF_
00040a68                _MMC_init
00040aa0                _MMC_open
00040cb0                _MMC_close
00040cf0                _MMC_setCardType
00040d24                _MMC_setCardPtr
00040d58                _MMC_setCallBack
00040d98                _MMC_getNumberOfCards
00040dd0                _MMC_clearResponse
00040eac                _MMC_ierEnable
00040ef0                _MMC_ierDisable
00040f24                _MMC_intEnable
00040f4c                _MMC_eventEnable
00041148                _MMC_eventDisable
00041320                _MMC_drrdy
00041368                _MMC_dxrdy
000413b0                _MMC_saveStatus
000413f0                _MMC_getStatus
00041454                _MMC_setupNative
00041508                _MMC_config
000415a4                _MMC_getConfig
00041644                _MMC_sendCmd
000416f8                _MMC_sendGoIdle
00041780                _MMC_stop
00041858                _MMC_deselectCard
00041928                _MMC_selectCard
00041eb8                _MMC_sendOpCond
00041f5c                _MMC_setRca
00042034                _SD_sendRca
00042130                _MMC_sendAllCID
00042308                _SD_sendAllCID
000424f4                _MMC_getCardCsd
00042948                _SD_getCardCsd
00043024                _MMC_read
00043a40                _MMC_write
0004467c                _MMC_setDmaHandle
000446dc                _MMC_setDataTransferCallback
0004472c                _MMC_setDmaChanConfig
0004480c                _MMC_setEndianMode
00044894                _MMC_setBlockLength
0004492c                _MMC_setWriteBlkEraseCnt
00044a5c                _SD_setBusWidth
00044bcc                _MMC_getCardStatus
00044cc8                _SD_configurePullup
00044df4                _MMC_checkReadDmaDone
00045698                _MSC_Open
000456bc                _MSC_OpenFullspeed
00045a08                _MSC_Close
00045a44                _MSC_SetLunAttr
00045c34                _MSC_Ctrl
00045e2c                _MSC_Bulk
00045f28                _MSC_GetLunLockedStatus
00045f58                _MSC_GetactivityFlagStatus
00045f74                _MSC_GetsuspendFlagStatus
0004641c                _MSC_HandleStateWaitForCBW
000466c0                _MSC_ExecuteRead
00046ab4                _MSC_ExecuteWrite
00047068                _MSC_HandleTestUnitReady
0004728c                _MSC_HandlePreventAllowMediaRemoval
00047430                _MSC_HandleReadCapacity
00047680                _MSC_reqGetDescriptor
000478b8                _MSC_reqBotMscReset
00047924                _MSC_sendCswWithPhaseError
0004798c                _MSC_handleDataDirMisMatch
00047a08                _SDIO_init
00047a48                _SDIO_open
00047b14                _SDIO_close
00047b3c                _SDIO_config
00047c14                _SDIO_detectCard
00047f80                _SDIO_initCard
00048404                _SDIO_resetCard
000484ec                _SDIO_getRca
000485b4                _SDIO_deselectCard
00048674                _SDIO_selectCard
00048738                _SDIO_sendCommand
0004880c                _SDIO_getResponse
000489a0                _SDIO_clearResponse
00048a7c                _SDIO_getStatus
00048ae4                _SDIO_getSdioStatus
00048b50                _SDIO_eventEnable
00048d78                _SDIO_eventDisable
00048f70                _SDIO_readWaitEnable
00048fa8                _SDIO_readWaitDisable
00048fe0                _SDIO_readSingleByte
0004910c                _SDIO_writeSingleByte
0004920c                _SDIO_readBytes
00049650                _SDIO_writeBytes
00049a90                _SDIO_readBlocks
00049ed0                _SDIO_writeBlocks
0004a324                _SDIO_setEndianMode
0004a3a4                _SDIO_setClock
0004a6c0                _USB_init
0004aae4                _USB_resetDev
0004ad14                _USB_initEndptObj
0004b0fc                _USB_getEvents
0004b174                _USB_peekEvents
0004b1e4                _USB_getSetupPacket
0004b28c                _USB_postTransaction
0004b448                _USB_isTransactionDone
0004b4d0                _USB_bytesRemaining
0004b564                _USB_stallEndpt
0004b6d8                _USB_clearEndptStall
0004b8c0                _USB_getEndptStall
0004b944                _USB_epNumToHandle
0004ba74                _USB_abortTransaction
0004bbd4                _USB_abortAllTransaction
0004bc28                _USB_connectDev
0004bc5c                _USB_disconnectDev
0004bc8c                _USB_setRemoteWakeup
0004bcbc                _USB_getRemoteWakeupStat
0004bcd4                _USB_issueRemoteWakeup
0004bd24                _USB_setDevAddr
0004bd6c                _USB_getFrameNo
0004bd88                _USB_suspendDevice
0004bdcc                _USB_selfwakeup
0004be38                _USB_initPLL
0004bebc                _USB_setParams
0004bf18                _USB_getMaxPower
0004bf38                _USB_setFullSpeedMode
0004bf6c                _USB_getDataCountReadFromFifo
0004bfc4                _USB_findFifoSize
0004c148                _USB_coreEventProcessEp0
0004c690                _RTC_reset
0004c6a0                _RTC_start
0004c6c4                _RTC_stop
0004c6cc                _RTC_config
0004c7b8                _RTC_getConfig
0004c868                _RTC_setTime
0004c8e4                _RTC_getTime
0004c930                _RTC_setDate
0004c9a0                _RTC_getDate
0004c9e0                _RTC_setAlarm
0004cab4                _RTC_setPeriodicInterval
0004cb68                _RTC_eventEnable
0004cc54                _RTC_eventDisable
0004cd08                _RTC_getEventId
0004cd5c                _RTC_decToBcd
0004cd9c                _RTC_bcdToDec
0004cddc                _RTC_setCallback
0004ce6c                _RTC_setCompensation
0004ceb8                _memcpy
0004cef7                _abort
0004cef8                C$$EXIT
0004de00                _Reset
0004df00                _RST
0004df00                _VECSTART
ffffffff                .bss
ffffffff                .data
ffffffff                .text
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
ffffffff                ___pinit__
ffffffff                ___text__
ffffffff                binit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit

[897 symbols]
