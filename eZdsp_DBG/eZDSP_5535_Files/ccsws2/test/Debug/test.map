******************************************************************************
              TMS320C55x Linker PC v4.4.1                      
******************************************************************************
>> Linked Sun Sep 09 04:49:50 2018

OUTPUT FILE NAME:   <test.out>
ENTRY POINT SYMBOL: "_c_int00"  address: 00043fa2


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  MMR                   00000000   000000c0  00000000  000000c0  RWIX
  DARAM0                000000c0   0000ff40  0000ec04  0000133c  RWIX
  SARAM0                00010000   00010000  00000000  00010000  RWIX
  SARAM1                00020000   00020000  0001ffee  00000012  RWIX
  SARAM2                00040000   0000dc00  000040e2  00009b1e  RWIX
  VECS                  0004fe00   00000200  00000200  00000000  RWIX
  PDROM                 00ff8000   00008000  00000000  00008000  R IX

PAGE 2:
  IOPORT                00000000   00020000  00000000  00020000  RWI 


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.pinit       0   [ 00040000 ]  00020000          *   00000000   UNINITIALIZED

.stack       0   [ 000000c0 ]  00000060          *   00001000   UNINITIALIZED
                 [ 000000c0 ]  00000060          *   00001000   --HOLE--

.data        0   [ 000000c0 ]  00000060          *   00000000   UNINITIALIZED

.sysstack 
*            0   [ 000020c0 ]  00001060          *   00000800   UNINITIALIZED
                 [ 000020c0 ]  00001060          *   00000800   --HOLE--

.bss.1       0   [ 000030c0 ]  00001860          *   00002dd3   UNINITIALIZED
                 [ 000030c0 ]  00001860          *   00001b5c   heap_1.obj (.bss)
                 [ 00006778 ]  000033bc          *   0000050d   csl_mmcsd_ataIf.obj (.bss)
                 [ 00007192 ]  000038c9          *   00000400   mem_test.obj (.bss)
                 [ 00007992 ]  00003cc9          *   00000200   spiflash_test.obj (.bss)
                 [ 00007d92 ]  00003ec9          *   00000001   flash.obj (.bss)
                 [ 00007d94 ]  00003eca          *   000001be   csl_usb.obj (.bss)
                 [ 00008110 ]  00004088          *   00000124   dma.obj (.bss)
                 [ 00008358 ]  000041ac          *   00000119   rts55x.lib : defs.obj (.bss)
                 [ 0000858a ]  000042c5          *   00000001   integer.obj (.bss)
                 [ 0000858c ]  000042c6          *   00000112   ezdsp5535_spiflash.obj (.bss)
                 [ 000087b0 ]  000043d8          *   000000d0   rts55x.lib : trgdrv.obj (.bss)
                 [ 00008950 ]  000044a8          *   00000095   ezdsp5535_sdcard.obj (.bss)
                 [ 00008a7a ]  0000453d          *   00000001   rts55x.lib : fopen.obj (.bss)
                 [ 00008a7c ]  0000453e          *   00000084   csl_intc.obj (.bss)
                 [ 00008b84 ]  000045c2          *   00000071   rts55x.lib : lowlev.obj (.bss)

.bss.2       0   [ 00008c68 ]  00004634          *   000001b5   UNINITIALIZED
                 [ 00008c68 ]  00004634          *   00000071   tasks_sysStk.obj (.bss)
                 [ 00008d4a ]  000046a5          *   00000061   i2s.obj (.bss)
                 [ 00008e0c ]  00004706          *   0000003c   croutine.obj (.bss)
                 [ 00008e84 ]  00004742          *   0000002a   csl_i2s.obj (.bss)
                 [ 00008ed8 ]  0000476c          *   00000018   port.obj (.bss)
                 [ 00008f08 ]  00004784          *   00000016   ezdsp5535_uart.obj (.bss)
                 [ 00008f34 ]  0000479a          *   00000014   rtc.obj (.bss)
                 [ 00008f5c ]  000047ae          *   00000012   csl_i2c.obj (.bss)
                 [ 00008f80 ]  000047c0          *   00000012   dynamic.obj (.bss)
                 [ 00008fa4 ]  000047d2          *   0000000c   QPeek.obj (.bss)
                 [ 00008fbc ]  000047de          *   0000000b   main.obj (.bss)

.bss.3       0   [ 00008fd4 ]  000047ea          *   00000013   UNINITIALIZED
                 [ 00008fd4 ]  000047ea          *   0000000a   blocktim.obj (.bss)
                 [ 00008fe8 ]  000047f4          *   00000009   semtest.obj (.bss)

.bss.4       0   [ 00008ffc ]  000047fe          *   00000034   UNINITIALIZED
                 [ 00008ffc ]  000047fe          *   00000008   QueueOverwrite.obj (.bss)
                 [ 0000900c ]  00004806          *   00000008   ezdsp5535_sar.obj (.bss)
                 [ 0000901c ]  0000480e          *   00000006   rts55x.lib : memory.obj (.bss)
                 [ 00009028 ]  00004814          *   00000004   PollQ.obj (.bss)
                 [ 00009030 ]  00004818          *   00000004   ezdsp5535_gpio.obj (.bss)
                 [ 00009038 ]  0000481c          *   00000004   flop.obj (.bss)
                 [ 00009040 ]  00004820          *   00000004   rts55x.lib : _lock.obj (.bss)
                 [ 00009048 ]  00004824          *   00000004              : exit.obj (.bss)
                 [ 00009050 ]  00004828          *   00000003   csl_spi.obj (.bss)
                 [ 00009056 ]  0000482b          *   00000003   timer.obj (.bss)
                 [ 0000905c ]  0000482e          *   00000002   ParTest.obj (.bss)
                 [ 00009060 ]  00004830          *   00000002   ezdsp5535_i2s.obj (.bss)

.sysmem      0   [ 00009064 ]  00004832          *   00002800   UNINITIALIZED
                 [ 00009064 ]  00004832          *   00002800   --HOLE--

.const.1     0   [ 0000e064 ]  00007032          *   00000447   
                 [ 0000e064 ]  00007032          *   00000346   ezdsp5535_sdcard.obj (.const:.string)
                 [ 0000e6f0 ]  00007378          *   00000101   rts55x.lib : ctype.obj (.const:__ctypes_)

.const.2     0   [ 0000e8f4 ]  0000747a          *   00000081   
                 [ 0000e8f4 ]  0000747a          *   00000081   csl_cdc.obj (.const:.string)

.const.3     0   [ 0000e9f8 ]  000074fc          *   0000005d   
                 [ 0000e9f8 ]  000074fc          *   0000005d   spiflash_test.obj (.const:.string)

.const.4     0   [ 0000eab4 ]  0000755a          *   00000087   
                 [ 0000eab4 ]  0000755a          *   00000028   dynamic.obj (.const:.string)
                 [ 0000eb04 ]  00007582          *   00000024   rts55x.lib : _printfi.obj (.const:.string)
                 [ 0000eb4c ]  000075a6          *   00000020   semtest.obj (.const:.string)
                 [ 0000eb8c ]  000075c6          *   0000001b   QPeek.obj (.const:.string)

.const.5     0   [ 0000ebc4 ]  000075e2          *   0000004b   
                 [ 0000ebc4 ]  000075e2          *   00000018   flop.obj (.const:.string)
                 [ 0000ebf4 ]  000075fa          *   00000014   flop.obj (.const)
                 [ 0000ec1c ]  0000760e          *   00000010   PollQ.obj (.const:.string)
                 [ 0000ec3c ]  0000761e          *   0000000f   blocktim.obj (.const:.string)

.const.6     0   [ 0000ec5c ]  0000762e          *   0000002d   
                 [ 0000ec5c ]  0000762e          *   0000000c   rts55x.lib : _printfi.obj (.const)
                 [ 0000ec74 ]  0000763a          *   00000008   integer.obj (.const:.string)
                 [ 0000ec84 ]  00007642          *   00000008   rts55x.lib : divd.obj (.const:_initial_approx$1)
                 [ 0000ec94 ]  0000764a          *   00000006   QueueOverwrite.obj (.const:.string)
                 [ 0000eca0 ]  00007650          *   00000006   main.obj (.const:.string)
                 [ 0000ecac ]  00007656          *   00000005   flash.obj (.const:.string)

.const.7     0   [ 0000ecb8 ]  0000765c          *   00000009   
                 [ 0000ecb8 ]  0000765c          *   00000005   tasks_sysStk.obj (.const:.string)
                 [ 0000ecc2 ]  00007661          *   00000004   main.obj (.const:_$P$T0$5)

.const.8     0   [ 0000eccc ]  00007666          *   00000006   
                 [ 0000eccc ]  00007666          *   00000002   rts55x.lib : fputs.obj (.const:.string)
                 [ 0000ecd0 ]  00007668          *   00000002              : fltlid.obj (.const)
                 [ 0000ecd4 ]  0000766a          *   00000002              : fltuld.obj (.const)

.text.1      0     00020000  [ 00010000 ] 00010132          *   
                   00020000  [ 00010000 ] 0000444f          *   csl_mmcsd.obj (.text)
                   0002444f  [ 00012227 ] 00000001          *   --HOLE-- [fill = 20]
                   00024450  [ 00012228 ] 00002b4f          *   csl_msc.obj (.text)
                   00026f9f  [ 000137cf ] 00000001          *   --HOLE-- [fill = 20]
                   00026fa0  [ 000137d0 ] 00002a24          *   csl_sdio.obj (.text)
                   000299c4  [ 00014ce2 ] 000021d5          *   csl_usb.obj (.text)
                   0002bb99  [ 00015dcc+] 00000002          *   rts55x.lib : vectors.obj (.text)
                   0002bb9b  [ 00015dcd ] 00000001          *   --HOLE-- [fill = 20]
                   0002bb9c  [ 00015dce ] 000018ac          *   csl_dma.obj (.text)
                   0002d448  [ 00016a24 ] 00001745          *   tasks_sysStk.obj (.text)
                   0002eb8d  [ 000175c6+] 000015a4          *   rts55x.lib : _printfi.obj (.text)
                   00030131  [ 00018098 ] 00000001          *   --HOLE-- [fill = 20]

.text.2      0     00030134  [ 0001809a ] 000022f4          *   
                   00030134  [ 0001809a ] 000011eb          *   csl_nand.obj (.text)
                   0003131f  [ 0001898f ] 00000001          *   --HOLE-- [fill = 20]
                   00031320  [ 00018990 ] 00001106          *   csl_uart.obj (.text)
                   00032426  [ 00019213 ] 00000002          *   --HOLE-- [fill = 20]

.text.3      0     00032428  [ 00019214 ] 00001cde          *   
                   00032428  [ 00019214 ] 00000f1c          *   queue.obj (.text)
                   00033344  [ 000199a2 ] 00000dc1          *   csl_dat.obj (.text)
                   00034105  [ 0001a082 ] 00000001          *   --HOLE-- [fill = 20]

.text.4      0     00034108  [ 0001a084 ] 000019da          *   
                   00034108  [ 0001a084 ] 00000d74          *   csl_audioClass.obj (.text)
                   00034e7c  [ 0001a73e ] 00000c65          *   csl_cdc.obj (.text)
                   00035ae1  [ 0001ad70 ] 00000001          *   --HOLE-- [fill = 20]

.text.5      0     00035ae4  [ 0001ad72 ] 0000178c          *   
                   00035ae4  [ 0001ad72 ] 00000c4c          *   csl_i2c.obj (.text)
                   00036730  [ 0001b398 ] 00000b3e          *   csl_mmcsd_ataIf.obj (.text)
                   0003726e  [ 0001b937 ] 00000002          *   --HOLE-- [fill = 20]

.text.6      0     00037270  [ 0001b938 ] 00002e1a          *   
                   00037270  [ 0001b938 ] 00000b2b          *   csl_sar.obj (.text)
                   00037d9b  [ 0001becd ] 00000001          *   --HOLE-- [fill = 20]
                   00037d9c  [ 0001bece ] 000009e3          *   csl_i2s.obj (.text)
                   0003877f  [ 0001c3bf ] 00000001          *   --HOLE-- [fill = 20]
                   00038780  [ 0001c3c0 ] 000008b4          *   csl_rtc.obj (.text)
                   00039034  [ 0001c81a ] 00000838          *   csl_lcdc.obj (.text)
                   0003986c  [ 0001cc36 ] 0000081d          *   oled_test.obj (.text)
                   0003a089  [ 0001d044 ] 00000001          *   --HOLE-- [fill = 20]

.text.7      0     0003a08c  [ 0001d046 ] 00001710          *   
                   0003a08c  [ 0001d046 ] 00000697          *   csl_gpio.obj (.text)
                   0003a723  [ 0001d391 ] 00000001          *   --HOLE-- [fill = 20]
                   0003a724  [ 0001d392 ] 000005bb          *   csl_spi.obj (.text)
                   0003acdf  [ 0001d66f ] 00000001          *   --HOLE-- [fill = 20]
                   0003ace0  [ 0001d670 ] 00000577          *   blocktim.obj (.text)
                   0003b257  [ 0001d92b+] 00000543          *   rts55x.lib : lowlev.obj (.text)
                   0003b79a  [ 0001dbcd ] 00000002          *   --HOLE-- [fill = 20]

.text.8      0     0003b79c  [ 0001dbce ] 00000f36          *   
                   0003b79c  [ 0001dbce ] 00000538          *   csl_intc.obj (.text)
                   0003bcd4  [ 0001de6a ] 00000528          *   rts55x.lib : trgdrv.obj (.text)
                   0003c1fc  [ 0001e0fe ] 000004d5          *   ezdsp5535_sdcard.obj (.text)
                   0003c6d1  [ 0001e368 ] 00000001          *   --HOLE-- [fill = 20]

.text.9      0     0003c6d4  [ 0001e36a ] 00000970          *   
                   0003c6d4  [ 0001e36a ] 000004b9          *   main.obj (.text)
                   0003cb8d  [ 0001e5c6+] 000004b5          *   rts55x.lib : memory.obj (.text)
                   0003d042  [ 0001e821 ] 00000002          *   --HOLE-- [fill = 20]

.text.10     0     0003d044  [ 0001e822 ] 0000081c          *   
                   0003d044  [ 0001e822 ] 0000040f          *   croutine.obj (.text)
                   0003d453  [ 0001ea29 ] 00000001          *   --HOLE-- [fill = 20]
                   0003d454  [ 0001ea2a ] 0000040a          *   QPeek.obj (.text)
                   0003d85e  [ 0001ec2f ] 00000002          *   --HOLE-- [fill = 20]

.text.11     0     0003d860  [ 0001ec30 ] 000003e6          *   
                   0003d860  [ 0001ec30 ] 000003e5          *   event_groups.obj (.text)
                   0003dc45  [ 0001ee22 ] 00000001          *   --HOLE-- [fill = 20]

.text.12     0     0003dc48  [ 0001ee24 ] 000003da          *   
                   0003dc48  [ 0001ee24 ] 000003d9          *   portASM.obj (.text)
                   0003e021  [ 0001f010 ] 00000001          *   --HOLE-- [fill = 20]

.text.13     0     0003e024  [ 0001f012 ] 000007a0          *   
                   0003e024  [ 0001f012 ] 000003d2          *   flop.obj (.text)
                   0003e3f6  [ 0001f1fb ] 000003cc          *   rts55x.lib : divd.obj (.text)
                   0003e7c2  [ 0001f3e1 ] 00000002          *   --HOLE-- [fill = 20]

.text.14     0     0003e7c4  [ 0001f3e2 ] 000003c4          *   
                   0003e7c4  [ 0001f3e2 ] 000003c2          *   ezdsp5535_spiflash.obj (.text)
                   0003eb86  [ 0001f5c3 ] 00000002          *   --HOLE-- [fill = 20]

.text.15     0     0003eb88  [ 0001f5c4 ] 00000346          *   
                   0003eb88  [ 0001f5c4 ] 00000345          *   csl_mem.obj (.text)
                   0003eecd  [ 0001f766 ] 00000001          *   --HOLE-- [fill = 20]

.text.16     0     0003eed0  [ 0001f768 ] 00000928          *   
                   0003eed0  [ 0001f768 ] 0000033f          *   dynamic.obj (.text)
                   0003f20f  [ 0001f907 ] 00000001          *   --HOLE-- [fill = 20]
                   0003f210  [ 0001f908 ] 000002f7          *   csl_gpt.obj (.text)
                   0003f507  [ 0001fa83+] 000002ef          *   aic_test_i2c.obj (.text)
                   0003f7f6  [ 0001fbfb ] 00000002          *   --HOLE-- [fill = 20]

.text.17     0     0003f7f8  [ 0001fbfc ] 00000806          *   
                   0003f7f8  [ 0001fbfc ] 000002c0          *   semtest.obj (.text)
                   0003fab8  [ 0001fd5c ] 000002ac          *   csl_pll.obj (.text)
                   0003fd64  [ 0001feb2 ] 00000298          *   i2s_register.obj (.text)
                   0003fffc  [ 0001fffe ] 00000002          *   --HOLE-- [fill = 20]

.cinit       0   [ 00040000 ]  00020000          *   000002d9   
                 [ 00040000 ]  00020000          *   000000dc   dma.obj (.cinit)
                 [ 000401b8 ]  000200dc          *   00000054   port.obj (.cinit)
                 [ 00040260 ]  00020130          *   0000003b   tasks_sysStk.obj (.cinit)
                 [ 000402d6 ]  0002016b          *   0000002d   rts55x.lib : lowlev.obj (.cinit)
                 [ 00040330 ]  00020198          *   0000002a              : defs.obj (.cinit)
                 [ 00040384 ]  000201c2          *   0000001f   dynamic.obj (.cinit)
                 [ 000403c2 ]  000201e1          *   0000001f   main.obj (.cinit)
                 [ 00040400 ]  00020200          *   00000015   croutine.obj (.cinit)
                 [ 0004042a ]  00020215          *   00000015   csl_mmcsd_ataIf.obj (.cinit)
                 [ 00040454 ]  0002022a          *   00000014   blocktim.obj (.cinit)
                 [ 0004047c ]  0002023e          *   00000013   QueueOverwrite.obj (.cinit)
                 [ 000404a2 ]  00020251          *   0000000e   QPeek.obj (.cinit)
                 [ 000404be ]  0002025f          *   0000000c   ezdsp5535_sar.obj (.cinit)
                 [ 000404d6 ]  0002026b          *   0000000c   semtest.obj (.cinit)
                 [ 000404ee ]  00020277          *   0000000c   timer.obj (.cinit)
                 [ 00040506 ]  00020283          *   0000000a   rts55x.lib : _lock.obj (.cinit)
                 [ 0004051a ]  0002028d          *   0000000a              : exit.obj (.cinit)
                 [ 0004052e ]  00020297          *   00000009   heap_1.obj (.cinit)
                 [ 00040540 ]  000202a0          *   00000008   ParTest.obj (.cinit)
                 [ 00040550 ]  000202a8          *   00000008   PollQ.obj (.cinit)
                 [ 00040560 ]  000202b0          *   00000008   csl_i2s.obj (.cinit)
                 [ 00040570 ]  000202b8          *   00000008   rtc.obj (.cinit)
                 [ 00040580 ]  000202c0          *   00000004   flash.obj (.cinit)
                 [ 00040588 ]  000202c4          *   00000004   flop.obj (.cinit)
                 [ 00040590 ]  000202c8          *   00000004   i2s.obj (.cinit)
                 [ 00040598 ]  000202cc          *   00000004   integer.obj (.cinit)
                 [ 000405a0 ]  000202d0          *   00000004   rts55x.lib : fopen.obj (.cinit)
                 [ 000405a8 ]  000202d4          *   00000004              : memory.obj (.cinit)
                 [ 000405b0 ]  000202d8          *   00000001   --HOLE-- [fill = 0]

.cio         0   [ 000405b8 ]  000202dc          *   00000120   UNINITIALIZED
                 [ 000405b8 ]  000202dc          *   00000120   rts55x.lib : trgmsg.obj (.cio)

.switch      0   [ 000407f8 ]  000203fc          *   000000e0   
                 [ 000407f8 ]  000203fc          *   00000022   csl_sdio.obj (.switch:_SDIO_eventDisable)
                 [ 0004083c ]  0002041e          *   00000022   csl_sdio.obj (.switch:_SDIO_eventEnable)
                 [ 00040880 ]  00020440          *   00000020   csl_dma.obj (.switch:_DMA_config)
                 [ 000408c0 ]  00020460          *   00000020   csl_dma.obj (.switch:_DMA_getConfig)
                 [ 00040900 ]  00020480          *   00000020   csl_dma.obj (.switch:_DMA_reset)
                 [ 00040940 ]  000204a0          *   00000018   csl_usb.obj (.switch:_USB_coreEventProcessEp0)
                 [ 00040970 ]  000204b8          *   00000014   rtc.obj (.switch:_NtoC)
                 [ 00040998 ]  000204cc          *   00000010   csl_msc.obj (.switch:_MSC_Bulk)

.text.18     0     000409b8  [ 000204dc ] 000009a0          *   
                   000409b8  [ 000204dc ] 0000027f          *   rts55x.lib : fopen.obj (.text)
                   00040c37  [ 0002061b ] 00000001          *   --HOLE-- [fill = 20]
                   00040c38  [ 0002061c ] 00000266          *   csl_wdt.obj (.text)
                   00040e9e  [ 0002074f ] 0000025e          *   rts55x.lib : llmpy.obj (.text)
                   000410fc  [ 0002087e ] 0000025a          *              : addd.obj (.text)
                   00041356  [ 000209ab ] 00000002          *   --HOLE-- [fill = 20]

.text.19     0     00041358  [ 000209ac ] 0000046c          *   
                   00041358  [ 000209ac ] 0000024b          *   timer.obj (.text:retain)
                   000415a3  [ 00020ad1 ] 00000001          *   --HOLE-- [fill = 20]
                   000415a4  [ 00020ad2 ] 0000021e          *   dma.obj (.text)
                   000417c2  [ 00020be1 ] 00000002          *   --HOLE-- [fill = 20]

.text.20     0     000417c4  [ 00020be2 ] 0000021e          *   
                   000417c4  [ 00020be2 ] 0000021d          *   QueueOverwrite.obj (.text)
                   000419e1  [ 00020cf0 ] 00000001          *   --HOLE-- [fill = 20]

.text.21     0     000419e4  [ 00020cf2 ] 000003e2          *   
                   000419e4  [ 00020cf2 ] 000001f7          *   ezdsp5535_led.obj (.text)
                   00041bdb  [ 00020ded+] 000001ea          *   rts55x.lib : cmpd.obj (.text)
                   00041dc5  [ 00020ee2 ] 00000001          *   --HOLE-- [fill = 20]

.text.22     0     00041dc8  [ 00020ee4 ] 00000374          *   
                   00041dc8  [ 00020ee4 ] 000001c0          *   port.obj (.text)
                   00041f88  [ 00020fc4 ] 000001b2          *   PollQ.obj (.text)
                   0004213a  [ 0002109d ] 00000002          *   --HOLE-- [fill = 20]

.text.23     0     0004213c  [ 0002109e ] 0000019c          *   
                   0004213c  [ 0002109e ] 0000019a          *   list.obj (.text)
                   000422d6  [ 0002116b ] 00000002          *   --HOLE-- [fill = 20]

.text.24     0     000422d8  [ 0002116c ] 00000196          *   
                   000422d8  [ 0002116c ] 00000195          *   ezdsp5535_lcd.obj (.text)
                   0004246d  [ 00021236 ] 00000001          *   --HOLE-- [fill = 20]

.text.25     0     00042470  [ 00021238 ] 000006cc          *   
                   00042470  [ 00021238 ] 0000018b          *   spiflash_test.obj (.text)
                   000425fb  [ 000212fd ] 00000001          *   --HOLE-- [fill = 20]
                   000425fc  [ 000212fe ] 0000017c          *   ezdsp5535_sar.obj (.text)
                   00042778  [ 000213bc ] 00000163          *   rts55x.lib : fputs.obj (.text)
                   000428db  [ 0002146d+] 0000014c          *              : mpyd.obj (.text)
                   00042a27  [ 00021513 ] 00000001          *   --HOLE-- [fill = 20]
                   00042a28  [ 00021514 ] 00000112          *   ezdsp5535_i2s.obj (.text)
                   00042b3a  [ 0002159d ] 00000002          *   --HOLE-- [fill = 20]

.text.26     0     00042b3c  [ 0002159e ] 00000486          *   
                   00042b3c  [ 0002159e ] 00000104          *   integer.obj (.text)
                   00042c40  [ 00021620 ] 000000fc          *   rtc.obj (.text)
                   00042d3c  [ 0002169e ] 000000e6          *   rts55x.lib : setvbuf.obj (.text)
                   00042e22  [ 00021711 ] 000000dd          *              : _io_perm.obj (.text)
                   00042eff  [ 0002177f+] 000000c2          *              : fflush.obj (.text)
                   00042fc1  [ 000217e0 ] 00000001          *   --HOLE-- [fill = 20]

.text.27     0     00042fc4  [ 000217e2 ] 0000038e          *   
                   00042fc4  [ 000217e2 ] 000000bf          *   flash.obj (.text)
                   00043083  [ 00021841 ] 00000001          *   --HOLE-- [fill = 20]
                   00043084  [ 00021842 ] 000000be          *   heap_1.obj (.text)
                   00043142  [ 000218a1 ] 000000ba          *   rts55x.lib : trgmsg.obj (.text:CIO_breakpoint)
                   000431fc  [ 000218fe ] 000000af          *   mem_test.obj (.text)
                   000432ab  [ 00021955+] 000000a6          *   rts55x.lib : fputc.obj (.text)
                   00043351  [ 000219a8 ] 00000001          *   --HOLE-- [fill = 20]

.text.28     0     00043354  [ 000219aa ] 000008f8          *   
                   00043354  [ 000219aa ] 000000a2          *   ezdsp5535_uart.obj (.text)
                   000433f6  [ 000219fb ] 000000a1          *   rts55x.lib : divul.obj (.text)
                   00043497  [ 00021a4b ] 00000001          *   --HOLE-- [fill = 20]
                   00043498  [ 00021a4c ] 0000009f          *   ParTest.obj (.text)
                   00043537  [ 00021a9b ] 00000001          *   --HOLE-- [fill = 20]
                   00043538  [ 00021a9c ] 00000094          *   ezdsp5535_i2c.obj (.text)
                   000435cc  [ 00021ae6 ] 0000008c          *   csl_irqplug.obj (.text)
                   00043658  [ 00021b2c ] 0000008c          *   i2s.obj (.text)
                   000436e4  [ 00021b72 ] 0000008a          *   ezdsp5535_gpio.obj (.text)
                   0004376e  [ 00021bb7 ] 0000007f          *   vectors.obj (.text)
                   000437ed  [ 00021bf6+] 0000007d          *   rts55x.lib : ltoa.obj (.text)
                   0004386a  [ 00021c35 ] 0000007b          *              : fclose.obj (.text)
                   000438e5  [ 00021c72+] 00000076          *              : frcmpyd.obj (.text)
                   0004395b  [ 00021cad+] 00000073          *              : frcmpyd_div.obj (.text)
                   000439ce  [ 00021ce7 ] 00000072          *              : remul.obj (.text)
                   00043a40  [ 00021d20 ] 0000006f          *              : fixdli.obj (.text)
                   00043aaf  [ 00021d57+] 0000006d          *              : trgmsg.obj (.text)
                   00043b1c  [ 00021d8e ] 0000006b          *              : fseek.obj (.text)
                   00043b87  [ 00021dc3+] 00000067          *              : fltlid.obj (.text)
                   00043bee  [ 00021df7 ] 0000005c          *              : atoi.obj (.text)
                   00043c4a  [ 00021e25 ] 00000002          *   --HOLE-- [fill = 20]

.text.29     0     00043c4c  [ 00021e26 ] 00000160          *   
                   00043c4c  [ 00021e26 ] 0000005c          *   timer.obj (.text)
                   00043ca8  [ 00021e54 ] 0000005b          *   rts55x.lib : fltuld.obj (.text)
                   00043d03  [ 00021e81 ] 00000001          *   --HOLE-- [fill = 20]
                   00043d04  [ 00021e82 ] 00000056          *   ezdsp5535.obj (.text)
                   00043d5a  [ 00021ead ] 00000050          *   rts55x.lib : printf.obj (.text)
                   00043daa  [ 00021ed5 ] 00000002          *   --HOLE-- [fill = 20]

.text.30     0     00043dac  [ 00021ed6 ] 00000346          *   
                   00043dac  [ 00021ed6 ] 0000004e          *   rtc.obj (.text:retain)
                   00043dfa  [ 00021efd ] 0000004d          *   rts55x.lib : autoinit.obj (.text)
                   00043e47  [ 00021f23+] 0000004b          *              : args_main.obj (.text)
                   00043e92  [ 00021f49 ] 0000004b          *              : remli.obj (.text)
                   00043edd  [ 00021f6e+] 00000048          *              : divli.obj (.text)
                   00043f25  [ 00021f92+] 0000003f          *              : memcpy.obj (.text)
                   00043f64  [ 00021fb2 ] 0000003e          *              : exit.obj (.text)
                   00043fa2  [ 00021fd1 ] 00000034          *              : boot.obj (.text)
                   00043fd6  [ 00021feb ] 0000002a          *              : fixdi.obj (.text)
                   00044000  [ 00022000 ] 0000002a          *              : udiv.obj (.text)
                   0004402a  [ 00022015 ] 00000023          *              : memccpy.obj (.text)
                   0004404d  [ 00022026+] 0000001a          *              : isinf.obj (.text)
                   00044067  [ 00022033+] 00000014          *              : subd.obj (.text)
                   0004407b  [ 0002203d+] 00000013          *              : lmpy.obj (.text)
                   0004408e  [ 00022047 ] 00000012          *              : _lock.obj (.text)
                   000440a0  [ 00022050 ] 00000011          *              : memset.obj (.text)
                   000440b1  [ 00022058+] 00000011          *              : strlen.obj (.text)
                   000440c2  [ 00022061 ] 00000010          *              : negd.obj (.text)
                   000440d2  [ 00022069 ] 0000000e          *              : fltud.obj (.text)
                   000440e0  [ 00022070 ] 0000000a          *              : remove.obj (.text)
                   000440ea  [ 00022075 ] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   000440f1  [ 00022078 ] 00000001          *   --HOLE-- [fill = 20]

vectors      0     0004fe00  [ 00027f00 ] 00000200          *   
                   0004fe00  [ 00027f00 ] 00000100          *   rts55x.lib : vectors.obj (vectors)
                   0004ff00  [ 00027f80 ] 00000100          *   vectors.obj (vectors)


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
ffffffff                .bss
ffffffff                .data
ffffffff                .text
000440eb                C$$EXIT
000431f7                C$$IO$$
0004407b                I$$LMPY
00044000                I$$UDIV
00044015                I$$UMOD
000343cc                _AC_Close
00034408                _AC_Ctrl
0003469c                _AC_GetactivityFlagStatus
000346b8                _AC_GetsuspendFlagStatus
00034600                _AC_Iso
00034184                _AC_Open
000346d0                _AC_initDescriptors
00034c34                _AC_reqGetCurrent
00034980                _AC_reqGetDescriptor
00034d3c                _AC_reqGetMaximum
00034cf8                _AC_reqGetMinimum
00034d80                _AC_reqGetResolution
00034b58                _AC_reqSetCurrent
00034dc4                _AC_reqSetInterface
0003f507                _AIC3254_init
            000038c8    _ATA_No_Swap
0003ca3c                _BlinkLED
            00004705    _Buf_Address
            000047a3    _Buf_day
            000047a0    _Buf_hour
            0000479d    _Buf_min
            000047a6    _Buf_month
            0000479a    _Buf_sec
            000047a9    _Buf_year
00035108                _CDC_Close
00035144                _CDC_GetactivityFlagStatus
0003515c                _CDC_GetsuspendFlagStatus
00034f10                _CDC_Open
00034f34                _CDC_OpenFullspeed
00035570                _CDC_bulkInHandler
00035470                _CDC_bulkOutHandler
00035174                _CDC_eventHandler
00035860                _CDC_getData
000358f0                _CDC_putData
0003c9c0                _ConfigPort
            000047ad    _Conunt_RTC
0003341c                _DAT_close
000335b0                _DAT_copy
00033aac                _DAT_fill
00033344                _DAT_open
00033fbc                _DAT_wait
            00004778    _DBSTAT_HIGH
            00004775    _DBSTAT_LOW
            000041a8    _DMA_Count
            000041ab    _DMA_Done
0002bcc0                _DMA_close
0002bce0                _DMA_config
0002c8b4                _DMA_getConfig
0002d39c                _DMA_getLastTransferType
0002bb9c                _DMA_init
0002bbd4                _DMA_open
0002d038                _DMA_reset
0002ce24                _DMA_start
0002cf34                _DMA_stop
0002d324                _DMA_swapWords
000433dc                _EVM5515_UART_getChar
000433c4                _EVM5515_UART_putChar
00043750                _EZDSP5535_GPIO_getInput
000436e4                _EZDSP5535_GPIO_init
00043710                _EZDSP5535_GPIO_setDirection
00043734                _EZDSP5535_GPIO_setOutput
00043538                _EZDSP5535_I2C_init
000435a4                _EZDSP5535_I2C_read
00043570                _EZDSP5535_I2C_reset
0004357c                _EZDSP5535_I2C_write
00042b28                _EZDSP5535_I2S_close
00042a28                _EZDSP5535_I2S_init
00042a84                _EZDSP5535_I2S_readLeft
00042ae8                _EZDSP5535_I2S_readRight
00042ab8                _EZDSP5535_I2S_writeLeft
00042b0c                _EZDSP5535_I2S_writeRight
00041a1c                _EZDSP5535_LED_getall
000419e4                _EZDSP5535_LED_init
00041b18                _EZDSP5535_LED_off
00041ae0                _EZDSP5535_LED_on
00041a70                _EZDSP5535_LED_setall
00041b4c                _EZDSP5535_LED_toggle
0004234c                _EZDSP5535_OSD9616_init
00042300                _EZDSP5535_OSD9616_multiSend
00042430                _EZDSP5535_OSD9616_printLetter
000422d8                _EZDSP5535_OSD9616_send
000426c4                _EZDSP5535_SAR_getKey
000425fc                _EZDSP5535_SAR_init
0003c60c                _EZDSP5535_SDCARD_close
0003c1fc                _EZDSP5535_SDCARD_init
0003c5a4                _EZDSP5535_SDCARD_read
0003c5d8                _EZDSP5535_SDCARD_write
0003e86c                _EZDSP5535_SPIFLASH_erase
0003e7c4                _EZDSP5535_SPIFLASH_init
0003e970                _EZDSP5535_SPIFLASH_read
0003e828                _EZDSP5535_SPIFLASH_status
0003ea20                _EZDSP5535_SPIFLASH_write
00043354                _EZDSP5535_UART_open
00041bac                _EZDSP5535_XF_get
00041ba0                _EZDSP5535_XF_off
00041b94                _EZDSP5535_XF_on
00041bbc                _EZDSP5535_XF_toggle
00043d4c                _EZDSP5535_init
00043d04                _EZDSP5535_wait
00043d38                _EZDSP5535_waitusec
            000041a9    _Error_Count_L
            000041aa    _Error_Count_R
            000047ac    _Flag_RTC
0003a580                _GPIO_clearInt
0003a0d0                _GPIO_close
0003a0f4                _GPIO_config
0003a32c                _GPIO_configBit
0003a474                _GPIO_disableInt
0003a4f4                _GPIO_enableInt
0003a17c                _GPIO_getConfig
0003a08c                _GPIO_open
0003a204                _GPIO_read
0003a694                _GPIO_reset
0003a60c                _GPIO_statusBit
0003a288                _GPIO_write
0003f350                _GPT_close
0003f460                _GPT_config
0003f424                _GPT_getCnt
0003f210                _GPT_open
0003f2d4                _GPT_reset
0003f3c8                _GPT_start
0003f3f8                _GPT_stop
0003ca74                _GenerateAudioTone
            00004818    _GpioObj
0003c19e                _HOSTclock
0003c133                _HOSTclose
0003c07e                _HOSTlseek
0003bfdf                _HOSTopen
0003bf52                _HOSTread
0003bea4                _HOSTrename
0003be46                _HOSTtime
0003bddc                _HOSTunlink
0003bd4f                _HOSTwrite
00035b90                _I2C_config
00036564                _I2C_eventDisable
00036430                _I2C_eventEnable
00035cf8                _I2C_getConfig
00036714                _I2C_getEventId
00035ae4                _I2C_init
00036210                _I2C_read
00036684                _I2C_setCallback
00035dd0                _I2C_setup
00035fcc                _I2C_write
            000046a5    _I2S_RCV_L
            000046d5    _I2S_RCV_R
000381c8                _I2S_close
00037d9c                _I2S_open
00038274                _I2S_read
00038688                _I2S_reset
00037ee0                _I2S_setup
00038734                _I2S_transEnable
00038530                _I2S_write
0003b824                _IRQ_clear
0003b890                _IRQ_clearAll
0003b8a0                _IRQ_config
0003b9b0                _IRQ_disable
0003ba30                _IRQ_disableAll
0003ba40                _IRQ_enable
0003bb3c                _IRQ_getArg
0003b928                _IRQ_getConfig
0003bc88                _IRQ_globalDisable
0003bca4                _IRQ_globalEnable
0003bcc0                _IRQ_globalRestore
0003b79c                _IRQ_init
0003bbb4                _IRQ_map
000435cc                _IRQ_plug
0003bacc                _IRQ_restore
0003bb80                _IRQ_setArg
0003bbe0                _IRQ_setVecs
0003bc14                _IRQ_test
0003c958                _InitSystem
0003984c                _LCD_close
000394fc                _LCD_configDMA
00039034                _LCD_init
0003905c                _LCD_open
000390a0                _LCD_setup
0003ed5c                _MEM_disablePartialRetentionMode
0003ebd0                _MEM_disableRetentionMode
0003ec14                _MEM_enablePartialRetentionMode
0003eb8c                _MEM_enableRetentionMode
0003eebc                _MEM_getmSDRAMClock
0003eb88                _MEM_init
0003ee80                _MEM_setmSDRAMClock
000371f8                _MMC_busyStatusCheck
0002438c                _MMC_checkReadDmaDone
00020368                _MMC_clearResponse
00020248                _MMC_close
000371e0                _MMC_commandReadyStatusCheck
00020aa0                _MMC_config
000371ec                _MMC_dataReadyStatusCheck
00020df0                _MMC_deselectCard
000208b8                _MMC_drrdy
00020900                _MMC_dxrdy
000206e0                _MMC_eventDisable
000204e4                _MMC_eventEnable
00037214                _MMC_file_system_format
0003723c                _MMC_flushFat
00021a8c                _MMC_getCardCsd
00024164                _MMC_getCardStatus
00020b3c                _MMC_getConfig
00020330                _MMC_getNumberOfCards
00037204                _MMC_getSerialID
00020988                _MMC_getStatus
00037234                _MMC_get_date
00037238                _MMC_get_mod_date
00037230                _MMC_get_mod_time
0003722c                _MMC_get_time
00020488                _MMC_ierDisable
00020444                _MMC_ierEnable
00020000                _MMC_init
00036730                _MMC_initState
000204bc                _MMC_intEnable
00036b54                _MMC_issueReadCommand
00020038                _MMC_open
000225bc                _MMC_read
00036f4c                _MMC_readNSectors
00036df4                _MMC_readNextNWords
00036d10                _MMC_readNextWord
00036d80                _MMC_readNextWord1
00036874                _MMC_readWriteControl
000370fc                _MMC_read_CID
00037168                _MMC_read_CSD
00037220                _MMC_reset
00020948                _MMC_saveStatus
00020ec0                _MMC_selectCard
000216c8                _MMC_sendAllCID
00020bdc                _MMC_sendCmd
00020c90                _MMC_sendGoIdle
00021450                _MMC_sendOpCond
00023e2c                _MMC_setBlockLength
000202f0                _MMC_setCallBack
000202bc                _MMC_setCardPtr
00020288                _MMC_setCardType
00023c74                _MMC_setDataTransferCallback
00023cc4                _MMC_setDmaChanConfig
00023c14                _MMC_setDmaHandle
00023da4                _MMC_setEndianMode
000214f4                _MMC_setRca
00023ec4                _MMC_setWriteBlkEraseCnt
000209ec                _MMC_setupNative
00020d18                _MMC_stop
00022fd8                _MMC_write
00037024                _MMC_writeNSectors
00036e64                _MMC_writeSector
000371d4                _MMC_writeSectorFlush
000253c4                _MSC_Bulk
00024fa0                _MSC_Close
000251cc                _MSC_Ctrl
00025c58                _MSC_ExecuteRead
0002604c                _MSC_ExecuteWrite
000254c0                _MSC_GetLunLockedStatus
000254f0                _MSC_GetactivityFlagStatus
0002550c                _MSC_GetsuspendFlagStatus
00026824                _MSC_HandlePreventAllowMediaRemoval
000269c8                _MSC_HandleReadCapacity
000259b4                _MSC_HandleStateWaitForCBW
00026600                _MSC_HandleTestUnitReady
00024c30                _MSC_Open
00024c54                _MSC_OpenFullspeed
00024fdc                _MSC_SetLunAttr
00026f24                _MSC_handleDataDirMisMatch
00026e50                _MSC_reqBotMscReset
00026c18                _MSC_reqGetDescriptor
00026ebc                _MSC_sendCswWithPhaseError
000308f8                _NAND_checkCommandStatus
00030acc                _NAND_disableHwECC
000309a4                _NAND_enableHwECC
000306e4                _NAND_getBankInfo
000311d8                _NAND_getIntrNum
000310b8                _NAND_hasCacheProg
000310e8                _NAND_hasCopyBack
00031058                _NAND_hasRandomRead
00031088                _NAND_hasRandomWrite
00030134                _NAND_init
000312c0                _NAND_intrClear
00031178                _NAND_intrDisable
00031118                _NAND_intrEnable
000311f8                _NAND_intrReadAT
00031238                _NAND_intrReadLT
0003127c                _NAND_intrReadWR
000307e4                _NAND_isStatusWriteProtected
00030bb4                _NAND_readECC
00030d68                _NAND_readNBytes
000308cc                _NAND_sendCommand
00030960                _NAND_setAddress
000307a8                _NAND_setLatchEnableOffset
000301c8                _NAND_setup
00030e7c                _NAND_writeNBytes
0003fca8                _PLL_bypass
0003fb1c                _PLL_config
0003fc40                _PLL_enable
0003fae4                _PLL_init
0003fcf8                _PLL_reset
0004ff00                _RST
00043dac                _RTC_Isr
00038f18                _RTC_bcdToDec
00038848                _RTC_config
00038ed8                _RTC_decToBcd
00038dd0                _RTC_eventDisable
00038ce4                _RTC_eventEnable
00038934                _RTC_getConfig
00038b1c                _RTC_getDate
00038e84                _RTC_getEventId
00038a60                _RTC_getTime
0003880c                _RTC_reset
00038b5c                _RTC_setAlarm
00038f58                _RTC_setCallback
00038fe8                _RTC_setCompensation
00038aac                _RTC_setDate
00038c30                _RTC_setPeriodicInterval
000389e4                _RTC_setTime
0003881c                _RTC_start
00038840                _RTC_stop
            00004148    _RcvL_Sine
            00004178    _RcvR_Sine
0004fe00                _Reset
00037804                _SAR_A2DMeasParamSet
00037c80                _SAR_GPODirSet
00037370                _SAR_chanClose
000373f4                _SAR_chanConfig
000376f4                _SAR_chanCycSet
000372f0                _SAR_chanInit
0003730c                _SAR_chanOpen
000374e0                _SAR_chanSetup
000372d0                _SAR_deInit
0003746c                _SAR_getConfig
00037d5c                _SAR_getStatus
00037270                _SAR_init
000377c0                _SAR_readData
00037744                _SAR_startConversion
00037778                _SAR_stopConversion
00027f38                _SDIO_clearResponse
000270ac                _SDIO_close
000270d4                _SDIO_config
00027b4c                _SDIO_deselectCard
000271ac                _SDIO_detectCard
00028310                _SDIO_eventDisable
000280e8                _SDIO_eventEnable
00027a84                _SDIO_getRca
00027da4                _SDIO_getResponse
0002807c                _SDIO_getSdioStatus
00028014                _SDIO_getStatus
00026fa0                _SDIO_init
00027518                _SDIO_initCard
00026fe0                _SDIO_open
00029028                _SDIO_readBlocks
000287a4                _SDIO_readBytes
00028578                _SDIO_readSingleByte
00028540                _SDIO_readWaitDisable
00028508                _SDIO_readWaitEnable
0002799c                _SDIO_resetCard
00027c0c                _SDIO_selectCard
00027cd0                _SDIO_sendCommand
0002993c                _SDIO_setClock
000298bc                _SDIO_setEndianMode
00029468                _SDIO_writeBlocks
00028be8                _SDIO_writeBytes
000286a4                _SDIO_writeSingleByte
00024260                _SD_configurePullup
00021ee0                _SD_getCardCsd
000218a0                _SD_sendAllCID
000215cc                _SD_sendRca
00023ff4                _SD_setBusWidth
0003a7bc                _SPI_close
0003a7e8                _SPI_config
0003ac6c                _SPI_dataTransaction
0003aa70                _SPI_deInit
0003a724                _SPI_init
0003a788                _SPI_open
0003aa9c                _SPI_read
0003ab80                _SPI_write
            0000477a    _STATUS0_HIGH
            00004779    _STATUS0_LOW
            0000477c    _STATUS1_HIGH
            0000477b    _STATUS1_LOW
            0000477e    _STATUS2_HIGH
            0000477d    _STATUS2_LOW
0003c9d0                _SYS_GlobalIntDisable
0003c9c8                _SYS_GlobalIntEnable
            0000480a    _SarHandle
            00004806    _SarObj
00043c98                _StartTimer0
00043ca0                _StartTimer02
00043c74                _Timer02Init
00041480                _Timer02_isr
00043c4c                _Timer0Init
            0000482d    _Timer0_Int_CTR
00041358                _Timer_isr
00031910                _UART_config
00031c50                _UART_eventDisable
00031bb8                _UART_eventEnable
00031f90                _UART_fgetc
000320b8                _UART_fgets
00032030                _UART_fputc
000321e8                _UART_fputs
00032300                _UART_getConfig
000322d8                _UART_getEventId
000313ac                _UART_init
00031ce0                _UART_read
00031b24                _UART_reset
00031b6c                _UART_resetOff
000323c0                _UART_setCallback
00031468                _UART_setup
00031a18                _UART_setupBaudRate
00031e0c                _UART_write
0002b16c                _USB_abortAllTransaction
0002b00c                _USB_abortTransaction
0002aa68                _USB_bytesRemaining
0002ac70                _USB_clearEndptStall
0002b1c0                _USB_connectDev
0002b6e0                _USB_coreEventProcessEp0
0002b1f4                _USB_disconnectDev
0002aedc                _USB_epNumToHandle
0002b55c                _USB_findFifoSize
0002b504                _USB_getDataCountReadFromFifo
0002ae58                _USB_getEndptStall
0002a694                _USB_getEvents
0002b304                _USB_getFrameNo
0002b4b0                _USB_getMaxPower
0002b254                _USB_getRemoteWakeupStat
0002a77c                _USB_getSetupPacket
00029c58                _USB_init
0002a2ac                _USB_initEndptObj
0002b3d0                _USB_initPLL
0002a9e0                _USB_isTransactionDone
0002b26c                _USB_issueRemoteWakeup
0002a70c                _USB_peekEvents
0002a824                _USB_postTransaction
0002a07c                _USB_resetDev
0002b364                _USB_selfwakeup
0002b2bc                _USB_setDevAddr
0002b4d0                _USB_setFullSpeedMode
0002b454                _USB_setParams
0002b224                _USB_setRemoteWakeup
0002aafc                _USB_stallEndpt
0002b320                _USB_suspendDevice
0004ff00                _VECSTART
00040d70                _WDTIM_close
00040de8                _WDTIM_config
00040d40                _WDTIM_getCnt
00040e54                _WDTIM_getConfig
00040c38                _WDTIM_open
00040db4                _WDTIM_service
00040cb0                _WDTIM_start
00040cf8                _WDTIM_stop
            00004088    _XmitL_Sine_1K
            000040b8    _XmitL_Sine_2K
            000040e8    _XmitR_Sine_1K
            00004118    _XmitR_Sine_2K
            000202dc    __CIOBUF_
            00001060    __STACK_END
00002000                __STACK_SIZE
00005000                __SYSMEM_SIZE
00001000                __SYSSTACK_SIZE
00000001                __TI_args_main
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
            00020000    ___cinit__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
0004404d                ___isinf
ffffffff                ___pinit__
ffffffff                ___text__
000410fc                __addd
00043e47                __args_main
00040ad9                __cleanup
            00004824    __cleanup_ptr
00041d6d                __cmpd
            00007378    __ctypes_
0003e3f6                __divd
00043edd                __divli
000410c7                __divlli
00044000                __divu
000433f6                __divul
00040fd3                __divull
00042eff                __doflush
            00004826    __dtors_ptr
00041d39                __eqld
00043fd6                __fixdi
00043a40                __fixdli
00043b87                __fltlid
000440d2                __fltud
00043ca8                __fltuld
000438e5                __frcmpyd
0004395b                __frcmpyd_div
            000042c4    __ft_end
            000041ac    __ftable
00041cef                __geqd
00041ca4                __gtrd
00041c57                __leqd
            00004820    __lock
00041c0f                __lssd
000428db                __mpyd
0004407b                __mpyli
00040f1b                __mpylli
000440c2                __negd
00041bdb                __neqd
0004409e                __nop
0002feef                __printfi
00042ea2                __rd_ok
00044096                __register_lock
0004408e                __register_unlock
00043e92                __remli
00040eec                __remlli
00044015                __remu
000439ce                __remul
00040e9e                __remull
            00000060    __stack
00044067                __subd
            00004832    __sys_memory
            00001060    __sysstack
            00004224    __tmpnams
            00004822    __unlock
00042e22                __wrt_ok
000440ea                _abort
0003b6aa                _add_device
00043bee                _atoi
00043dfa                _auto_init
00043fa2                _c_int00
            000038c0    _cached_phySector0
            000038c2    _cached_phySector1
            000038c4    _cached_phySector2
            000038c6    _cached_phySector3
0003d01c                _calloc
            0000453a    _cardAddr
0003d014                _chkheap
0003b637                _close
00042d08                _convert_number_to_string
0003ffc4                _disable_i2s0
0003ffd2                _disable_i2s1
0003ffe0                _disable_i2s2
0003ffee                _disable_i2s3
000417b4                _enable_dma_int
0003ff8c                _enable_i2s0
0003ff9a                _enable_i2s1
0003ffa8                _enable_i2s2
0003ffb6                _enable_i2s3
00042c40                _enable_rtc_second_int
00043f64                _exit
            000047df    _f1KToneOn
            000047e0    _f2KToneOn
            000047de    _fSineWave
            0000482b    _fTimer
            0000482c    _fTimer02
0004386a                _fclose
00042f68                _fflush
0003b62e                _find_registered_device
00040bfc                _fopen
000432ab                _fputc
00042778                _fputs
0003cb8d                _free
0003cfbe                _free_memory
00040b33                _freopen
            0000476a    _fsError
00043b1c                _fseek
            00003fa2    _gBulkInTransfer
            00003fb0    _gBulkOutTransfer
            00003f94    _gCtrlTransfer
            00003fe8    _gEpStatus
            000047ae    _gI2cObj
            00003fda    _gIntInTransfer
            00003fbe    _gIsoInTransfer
            00003fcc    _gIsoOutTransfer
            000034be    _gNextPhySector
            000033bc    _gReadBuf
            00003ecc    _gUsbContext
            00004078    _gUsbEpHandle
            000034bc    _gWordCount
            000034c0    _gWriteBuf
0003bcd4                _getenv
            0000481a    _hGpio
            00004830    _hI2s
            000043d6    _hSpi
            00004798    _hUart
            000047be    _i2cHandle
0003fd64                _i2s0_read_CR
0003fdac                _i2s0_read_INTR
0003fdb2                _i2s0_read_INT_MASK
0003fdbe                _i2s0_read_RXL_LSW
0003fdca                _i2s0_read_RXL_MSW
0003fdd6                _i2s0_read_RXR_LSW
0003fde2                _i2s0_read_RXR_MSW
0003fd70                _i2s0_read_SRGR
0003fd7c                _i2s0_read_TXL_LSW
0003fd88                _i2s0_read_TXL_MSW
0003fd94                _i2s0_read_TXR_LSW
0003fda0                _i2s0_read_TXR_MSW
0003fd6a                _i2s0_write_CR
0003fdb8                _i2s0_write_INT_MASK
0003fdc4                _i2s0_write_RXL_LSW
0003fdd0                _i2s0_write_RXL_MSW
0003fddc                _i2s0_write_RXR_LSW
0003fde8                _i2s0_write_RXR_MSW
0003fd76                _i2s0_write_SRGR
0003fd82                _i2s0_write_TXL_LSW
0003fd8e                _i2s0_write_TXL_MSW
0003fd9a                _i2s0_write_TXR_LSW
0003fda6                _i2s0_write_TXR_MSW
0003fdee                _i2s1_read_CR
0003fe36                _i2s1_read_INTR
0003fe3c                _i2s1_read_INT_MASK
0003fe48                _i2s1_read_RXL_LSW
0003fe54                _i2s1_read_RXL_MSW
0003fe60                _i2s1_read_RXR_LSW
0003fe6c                _i2s1_read_RXR_MSW
0003fdfa                _i2s1_read_SRGR
0003fe06                _i2s1_read_TXL_LSW
0003fe12                _i2s1_read_TXL_MSW
0003fe1e                _i2s1_read_TXR_LSW
0003fe2a                _i2s1_read_TXR_MSW
0003fdf4                _i2s1_write_CR
0003fe42                _i2s1_write_INT_MASK
0003fe4e                _i2s1_write_RXL_LSW
0003fe5a                _i2s1_write_RXL_MSW
0003fe66                _i2s1_write_RXR_LSW
0003fe72                _i2s1_write_RXR_MSW
0003fe00                _i2s1_write_SRGR
0003fe0c                _i2s1_write_TXL_LSW
0003fe18                _i2s1_write_TXL_MSW
0003fe24                _i2s1_write_TXR_LSW
0003fe30                _i2s1_write_TXR_MSW
0003fe78                _i2s2_read_CR
0003fec0                _i2s2_read_INTR
0003fec6                _i2s2_read_INT_MASK
0003fed2                _i2s2_read_RXL_LSW
0003fede                _i2s2_read_RXL_MSW
0003feea                _i2s2_read_RXR_LSW
0003fef6                _i2s2_read_RXR_MSW
0003fe84                _i2s2_read_SRGR
0003fe90                _i2s2_read_TXL_LSW
0003fe9c                _i2s2_read_TXL_MSW
0003fea8                _i2s2_read_TXR_LSW
0003feb4                _i2s2_read_TXR_MSW
0003fe7e                _i2s2_write_CR
0003fecc                _i2s2_write_INT_MASK
0003fed8                _i2s2_write_RXL_LSW
0003fee4                _i2s2_write_RXL_MSW
0003fef0                _i2s2_write_RXR_LSW
0003fefc                _i2s2_write_RXR_MSW
0003fe8a                _i2s2_write_SRGR
0003fe96                _i2s2_write_TXL_LSW
0003fea2                _i2s2_write_TXL_MSW
0003feae                _i2s2_write_TXR_LSW
0003feba                _i2s2_write_TXR_MSW
0003ff02                _i2s3_read_CR
0003ff4a                _i2s3_read_INTR
0003ff50                _i2s3_read_INT_MASK
0003ff5c                _i2s3_read_RXL_LSW
0003ff68                _i2s3_read_RXL_MSW
0003ff74                _i2s3_read_RXR_LSW
0003ff80                _i2s3_read_RXR_MSW
0003ff0e                _i2s3_read_SRGR
0003ff1a                _i2s3_read_TXL_LSW
0003ff26                _i2s3_read_TXL_MSW
0003ff32                _i2s3_read_TXR_LSW
0003ff3e                _i2s3_read_TXR_MSW
0003ff08                _i2s3_write_CR
0003ff56                _i2s3_write_INT_MASK
0003ff62                _i2s3_write_RXL_LSW
0003ff6e                _i2s3_write_RXL_MSW
0003ff7a                _i2s3_write_RXR_LSW
0003ff86                _i2s3_write_RXR_MSW
0003ff14                _i2s3_write_SRGR
0003ff20                _i2s3_write_TXL_LSW
0003ff2c                _i2s3_write_TXL_MSW
0003ff38                _i2s3_write_TXR_LSW
0003ff44                _i2s3_write_TXR_MSW
            0000480c    _keyCnt1
            0000480d    _keyCnt2
0003b5c8                _lseek
000437ed                _ltoa
0003c6d4                _main
0003ccbe                _malloc
0003cf64                _max_free
            000038c9    _mem
000431fc                _mem_test
0004402a                _memccpy
00043f25                _memcpy
000440a0                _memset
0003cc59                _minit
            000044ea    _mmcCardObj
            0000453c    _mmcStatus
            000044e8    _mmcsdHandle
            000034bd    _nbuf_cached
0003986c                _oled_test
0003b509                _open
            0000476b    _ouError
            000044a8    _pMmcsdContObj
0002deec                _pcTaskGetName
            0000476c    _portFLAGS_INT_ENABLED
            0000476d    _portFLAGS_INT_ENABLED_POPPED
            00004809    _preKey
00043d5a                _printf
00041f74                _prvSetupTimerInterrupt
000432ab                _putc
00043342                _putchar
000428ad                _puts
00043084                _pvPortMalloc
            0000473c    _pxCurrentCoRoutine
            00004638    _pxCurrentTCB
00041dc8                _pxPortInitialiseStack
0003b45b                _read
00043aaf                _readmsg
0003cdb3                _realloc
000440e0                _remove
0003b425                _remove_device
0003b3cc                _rename
00042c4c                _reset_RTC
            00004774    _save_xar6
            00004772    _save_xar7
            0000476e    _save_xsp
            00004770    _save_xssp
            00004518    _sdCardCsdObj
            00004508    _sdCardIdObj
00041670                _set_dma0_ch0_i2s0_Lout
000415bc                _set_dma0_ch0_stop
00041748                _set_dma0_ch1_i2s0_Rout
000415ec                _set_dma0_ch1_stop
00041604                _set_dma1_ch0_i2s2_Lout
000415a4                _set_dma1_ch0_stop
000416dc                _set_dma1_ch1_i2s2_Rout
000415d4                _set_dma1_ch1_stop
0004368c                _set_i2s0_master
000436c0                _set_i2s0_slave
00043658                _set_i2s2_master
00042d3c                _setvbuf
00042470                _spiflash_test
            00004636    _stackStruct
000440b1                _strlen
            00003ecb    _sysCtrlRegs
0003cb00                _systemInit
            00004780    _tOne
            00004782    _tThree
            00004781    _tTwo
            0000477f    _tZero
            00004776    _tickIRQctr
            00004784    _uartObj
0002e574                _ulTaskNotifyTake
0003b399                _unlink
            00004783    _usCriticalNesting
            00003eca    _usbRegisters
00042274                _uxListRemove
00032d6c                _uxQueueMessagesWaiting
00032df0                _uxQueueMessagesWaitingFromISR
00032da8                _uxQueueSpacesAvailable
0002dee4                _uxTaskGetNumberOfTasks
0002e4bc                _uxTaskGetStackHighWaterMark
0002d8b8                _uxTaskPriorityGet
0002d900                _uxTaskPriorityGetFromISR
0002e548                _uxTaskResetEventItemValue
0003c924                _vApplicationIdleHook
0003cb78                _vApplicationMallocFailedHook
0003cb80                _vApplicationStackOverflowHook
0003d120                _vCoRoutineAddToDelayedList
0003d300                _vCoRoutineSchedule
0003ace0                _vCreateBlockTimeTasks
0003dc00                _vEventGroupClearBitsCallback
0003dbac                _vEventGroupDelete
0003dbec                _vEventGroupSetBitsCallback
0004213c                _vListInitialise
00042178                _vListInitialiseItem
000421e0                _vListInsert
0004218c                _vListInsertEnd
00043498                _vParTestInitialise
0004349c                _vParTestSetLED
000434b0                _vParTestToggleLED
00041f70                _vPortEndScheduler
00043120                _vPortFree
0004312c                _vPortInitialiseBlocks
0003deb9                _vPortYield
00032e08                _vQueueDelete
00041914                _vQueueOverwritePeriodicISRDemo
0003eed0                _vStartDynamicPriorityTasks
00042b3c                _vStartIntegerMathTasks
00042fc4                _vStartLEDFlashTasks
0003e024                _vStartMathTasks
00041f88                _vStartPolledQueueTasks
000417c4                _vStartQueueOverwriteTask
0003d454                _vStartQueuePeekTasks
0003f7f8                _vStartSemaphoreTasks
0002d890                _vTaskDelay
0002d810                _vTaskDelayUntil
0002d74c                _vTaskDelete
0002dd60                _vTaskEndScheduler
0002e2a0                _vTaskInternalSetTimeOutState
0002e360                _vTaskMissedYield
0002e9d0                _vTaskNotifyGiveFromISR
0002e0e4                _vTaskPlaceOnEventList
0002e104                _vTaskPlaceOnUnorderedEventList
0002d924                _vTaskPrioritySet
0002e1d8                _vTaskRemoveFromUnorderedEventList
0002dbc8                _vTaskResume
0002e258                _vTaskSetTimeOutState
0002dd10                _vTaskStartScheduler
0002da68                _vTaskSuspend
0002dd74                _vTaskSuspendAll
0002e04c                _vTaskSwitchContext
0003dd45                _vTickISR
            00004634    _wall_clk_ctr
0003b257                _write
00043142                _writemsg
0003b208                _xAreBlockTimeTestTasksStillRunning
0003f1b0                _xAreDynamicPriorityTasksStillRunning
00042c10                _xAreIntegerMathsTaskStillRunning
0003e3bc                _xAreMathsTaskStillRunning
00042110                _xArePollingQueuesStillRunning
0003d828                _xAreQueuePeekTasksStillRunning
0003fa68                _xAreSemaphoreTasksStillRunning
0003d044                _xCoRoutineCreate
0003d404                _xCoRoutineRemoveFromEventList
0003da64                _xEventGroupClearBits
0003d860                _xEventGroupCreate
0003dab0                _xEventGroupGetBitsFromISR
0003dacc                _xEventGroupSetBits
0003d888                _xEventGroupSync
0003d96c                _xEventGroupWaitBits
            000047d8    _xHighPriorityTask
            000047da    _xHighestPriorityTask
000418e4                _xIsQueueOverwriteTaskStillRunning
            000047d6    _xMediumPriorityTask
00043134                _xPortGetFreeHeapSize
0003dc48                _xPortStartScheduler
00033194                _xQueueCRReceive
000332a8                _xQueueCRReceiveFromISR
00033104                _xQueueCRSend
00033254                _xQueueCRSendFromISR
000324f4                _xQueueGenericCreate
00032428                _xQueueGenericReset
00032584                _xQueueGenericSend
00032708                _xQueueGenericSendFromISR
00032794                _xQueueGiveFromISR
00033070                _xQueueIsQueueEmptyFromISR
000330dc                _xQueueIsQueueFullFromISR
00032b14                _xQueuePeek
00032d28                _xQueuePeekFromISR
0003281c                _xQueueReceive
00032c9c                _xQueueReceiveFromISR
000329a0                _xQueueSemaphoreTake
            000047ca    _xSuspendedTestQueue
0002e2c0                _xTaskCheckForTimeOut
0002d448                _xTaskCreate
0002e73c                _xTaskGenericNotify
0002e884                _xTaskGenericNotifyFromISR
0002de98                _xTaskGetTickCount
0002ded0                _xTaskGetTickCountFromISR
0002df0c                _xTaskIncrementTick
0002ea94                _xTaskNotifyStateClear
0002e644                _xTaskNotifyWait
0002e138                _xTaskRemoveFromEventList
0002dd80                _xTaskResumeAll
0002dc7c                _xTaskResumeFromISR
ffffffff                binit
            00020000    cinit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit
0004376e                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000001                __TI_args_main
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
            00000060    __stack
00001000                __SYSSTACK_SIZE
00002000                __STACK_SIZE
            00001060    __STACK_END
            00001060    __sysstack
00005000                __SYSMEM_SIZE
            000033bc    _gReadBuf
            000034bc    _gWordCount
            000034bd    _nbuf_cached
            000034be    _gNextPhySector
            000034c0    _gWriteBuf
            000038c0    _cached_phySector0
            000038c2    _cached_phySector1
            000038c4    _cached_phySector2
            000038c6    _cached_phySector3
            000038c8    _ATA_No_Swap
            000038c9    _mem
            00003eca    _usbRegisters
            00003ecb    _sysCtrlRegs
            00003ecc    _gUsbContext
            00003f94    _gCtrlTransfer
            00003fa2    _gBulkInTransfer
            00003fb0    _gBulkOutTransfer
            00003fbe    _gIsoInTransfer
            00003fcc    _gIsoOutTransfer
            00003fda    _gIntInTransfer
            00003fe8    _gEpStatus
            00004078    _gUsbEpHandle
            00004088    _XmitL_Sine_1K
            000040b8    _XmitL_Sine_2K
            000040e8    _XmitR_Sine_1K
            00004118    _XmitR_Sine_2K
            00004148    _RcvL_Sine
            00004178    _RcvR_Sine
            000041a8    _DMA_Count
            000041a9    _Error_Count_L
            000041aa    _Error_Count_R
            000041ab    _DMA_Done
            000041ac    __ftable
            00004224    __tmpnams
            000042c4    __ft_end
            000043d6    _hSpi
            000044a8    _pMmcsdContObj
            000044e8    _mmcsdHandle
            000044ea    _mmcCardObj
            00004508    _sdCardIdObj
            00004518    _sdCardCsdObj
            0000453a    _cardAddr
            0000453c    _mmcStatus
            00004634    _wall_clk_ctr
            00004636    _stackStruct
            00004638    _pxCurrentTCB
            000046a5    _I2S_RCV_L
            000046d5    _I2S_RCV_R
            00004705    _Buf_Address
            0000473c    _pxCurrentCoRoutine
            0000476a    _fsError
            0000476b    _ouError
            0000476c    _portFLAGS_INT_ENABLED
            0000476d    _portFLAGS_INT_ENABLED_POPPED
            0000476e    _save_xsp
            00004770    _save_xssp
            00004772    _save_xar7
            00004774    _save_xar6
            00004775    _DBSTAT_LOW
            00004776    _tickIRQctr
            00004778    _DBSTAT_HIGH
            00004779    _STATUS0_LOW
            0000477a    _STATUS0_HIGH
            0000477b    _STATUS1_LOW
            0000477c    _STATUS1_HIGH
            0000477d    _STATUS2_LOW
            0000477e    _STATUS2_HIGH
            0000477f    _tZero
            00004780    _tOne
            00004781    _tTwo
            00004782    _tThree
            00004783    _usCriticalNesting
            00004784    _uartObj
            00004798    _hUart
            0000479a    _Buf_sec
            0000479d    _Buf_min
            000047a0    _Buf_hour
            000047a3    _Buf_day
            000047a6    _Buf_month
            000047a9    _Buf_year
            000047ac    _Flag_RTC
            000047ad    _Conunt_RTC
            000047ae    _gI2cObj
            000047be    _i2cHandle
            000047ca    _xSuspendedTestQueue
            000047d6    _xMediumPriorityTask
            000047d8    _xHighPriorityTask
            000047da    _xHighestPriorityTask
            000047de    _fSineWave
            000047df    _f1KToneOn
            000047e0    _f2KToneOn
            00004806    _SarObj
            00004809    _preKey
            0000480a    _SarHandle
            0000480c    _keyCnt1
            0000480d    _keyCnt2
            00004818    _GpioObj
            0000481a    _hGpio
            00004820    __lock
            00004822    __unlock
            00004824    __cleanup_ptr
            00004826    __dtors_ptr
            0000482b    _fTimer
            0000482c    _fTimer02
            0000482d    _Timer0_Int_CTR
            00004830    _hI2s
            00004832    __sys_memory
            00007378    __ctypes_
00020000                _MMC_init
00020038                _MMC_open
00020248                _MMC_close
00020288                _MMC_setCardType
000202bc                _MMC_setCardPtr
000202f0                _MMC_setCallBack
00020330                _MMC_getNumberOfCards
00020368                _MMC_clearResponse
00020444                _MMC_ierEnable
00020488                _MMC_ierDisable
000204bc                _MMC_intEnable
000204e4                _MMC_eventEnable
000206e0                _MMC_eventDisable
000208b8                _MMC_drrdy
00020900                _MMC_dxrdy
00020948                _MMC_saveStatus
00020988                _MMC_getStatus
000209ec                _MMC_setupNative
00020aa0                _MMC_config
00020b3c                _MMC_getConfig
00020bdc                _MMC_sendCmd
00020c90                _MMC_sendGoIdle
00020d18                _MMC_stop
00020df0                _MMC_deselectCard
00020ec0                _MMC_selectCard
00021450                _MMC_sendOpCond
000214f4                _MMC_setRca
000215cc                _SD_sendRca
000216c8                _MMC_sendAllCID
000218a0                _SD_sendAllCID
00021a8c                _MMC_getCardCsd
00021ee0                _SD_getCardCsd
000225bc                _MMC_read
00022fd8                _MMC_write
00023c14                _MMC_setDmaHandle
00023c74                _MMC_setDataTransferCallback
00023cc4                _MMC_setDmaChanConfig
00023da4                _MMC_setEndianMode
00023e2c                _MMC_setBlockLength
00023ec4                _MMC_setWriteBlkEraseCnt
00023ff4                _SD_setBusWidth
00024164                _MMC_getCardStatus
00024260                _SD_configurePullup
0002438c                _MMC_checkReadDmaDone
00024c30                _MSC_Open
00024c54                _MSC_OpenFullspeed
00024fa0                _MSC_Close
00024fdc                _MSC_SetLunAttr
000251cc                _MSC_Ctrl
000253c4                _MSC_Bulk
000254c0                _MSC_GetLunLockedStatus
000254f0                _MSC_GetactivityFlagStatus
0002550c                _MSC_GetsuspendFlagStatus
000259b4                _MSC_HandleStateWaitForCBW
00025c58                _MSC_ExecuteRead
0002604c                _MSC_ExecuteWrite
00026600                _MSC_HandleTestUnitReady
00026824                _MSC_HandlePreventAllowMediaRemoval
000269c8                _MSC_HandleReadCapacity
00026c18                _MSC_reqGetDescriptor
00026e50                _MSC_reqBotMscReset
00026ebc                _MSC_sendCswWithPhaseError
00026f24                _MSC_handleDataDirMisMatch
00026fa0                _SDIO_init
00026fe0                _SDIO_open
000270ac                _SDIO_close
000270d4                _SDIO_config
000271ac                _SDIO_detectCard
00027518                _SDIO_initCard
0002799c                _SDIO_resetCard
00027a84                _SDIO_getRca
00027b4c                _SDIO_deselectCard
00027c0c                _SDIO_selectCard
00027cd0                _SDIO_sendCommand
00027da4                _SDIO_getResponse
00027f38                _SDIO_clearResponse
00028014                _SDIO_getStatus
0002807c                _SDIO_getSdioStatus
000280e8                _SDIO_eventEnable
00028310                _SDIO_eventDisable
00028508                _SDIO_readWaitEnable
00028540                _SDIO_readWaitDisable
00028578                _SDIO_readSingleByte
000286a4                _SDIO_writeSingleByte
000287a4                _SDIO_readBytes
00028be8                _SDIO_writeBytes
00029028                _SDIO_readBlocks
00029468                _SDIO_writeBlocks
000298bc                _SDIO_setEndianMode
0002993c                _SDIO_setClock
00029c58                _USB_init
0002a07c                _USB_resetDev
0002a2ac                _USB_initEndptObj
0002a694                _USB_getEvents
0002a70c                _USB_peekEvents
0002a77c                _USB_getSetupPacket
0002a824                _USB_postTransaction
0002a9e0                _USB_isTransactionDone
0002aa68                _USB_bytesRemaining
0002aafc                _USB_stallEndpt
0002ac70                _USB_clearEndptStall
0002ae58                _USB_getEndptStall
0002aedc                _USB_epNumToHandle
0002b00c                _USB_abortTransaction
0002b16c                _USB_abortAllTransaction
0002b1c0                _USB_connectDev
0002b1f4                _USB_disconnectDev
0002b224                _USB_setRemoteWakeup
0002b254                _USB_getRemoteWakeupStat
0002b26c                _USB_issueRemoteWakeup
0002b2bc                _USB_setDevAddr
0002b304                _USB_getFrameNo
0002b320                _USB_suspendDevice
0002b364                _USB_selfwakeup
0002b3d0                _USB_initPLL
0002b454                _USB_setParams
0002b4b0                _USB_getMaxPower
0002b4d0                _USB_setFullSpeedMode
0002b504                _USB_getDataCountReadFromFifo
0002b55c                _USB_findFifoSize
0002b6e0                _USB_coreEventProcessEp0
0002bb9c                _DMA_init
0002bbd4                _DMA_open
0002bcc0                _DMA_close
0002bce0                _DMA_config
0002c8b4                _DMA_getConfig
0002ce24                _DMA_start
0002cf34                _DMA_stop
0002d038                _DMA_reset
0002d324                _DMA_swapWords
0002d39c                _DMA_getLastTransferType
0002d448                _xTaskCreate
0002d74c                _vTaskDelete
0002d810                _vTaskDelayUntil
0002d890                _vTaskDelay
0002d8b8                _uxTaskPriorityGet
0002d900                _uxTaskPriorityGetFromISR
0002d924                _vTaskPrioritySet
0002da68                _vTaskSuspend
0002dbc8                _vTaskResume
0002dc7c                _xTaskResumeFromISR
0002dd10                _vTaskStartScheduler
0002dd60                _vTaskEndScheduler
0002dd74                _vTaskSuspendAll
0002dd80                _xTaskResumeAll
0002de98                _xTaskGetTickCount
0002ded0                _xTaskGetTickCountFromISR
0002dee4                _uxTaskGetNumberOfTasks
0002deec                _pcTaskGetName
0002df0c                _xTaskIncrementTick
0002e04c                _vTaskSwitchContext
0002e0e4                _vTaskPlaceOnEventList
0002e104                _vTaskPlaceOnUnorderedEventList
0002e138                _xTaskRemoveFromEventList
0002e1d8                _vTaskRemoveFromUnorderedEventList
0002e258                _vTaskSetTimeOutState
0002e2a0                _vTaskInternalSetTimeOutState
0002e2c0                _xTaskCheckForTimeOut
0002e360                _vTaskMissedYield
0002e4bc                _uxTaskGetStackHighWaterMark
0002e548                _uxTaskResetEventItemValue
0002e574                _ulTaskNotifyTake
0002e644                _xTaskNotifyWait
0002e73c                _xTaskGenericNotify
0002e884                _xTaskGenericNotifyFromISR
0002e9d0                _vTaskNotifyGiveFromISR
0002ea94                _xTaskNotifyStateClear
0002feef                __printfi
00030134                _NAND_init
000301c8                _NAND_setup
000306e4                _NAND_getBankInfo
000307a8                _NAND_setLatchEnableOffset
000307e4                _NAND_isStatusWriteProtected
000308cc                _NAND_sendCommand
000308f8                _NAND_checkCommandStatus
00030960                _NAND_setAddress
000309a4                _NAND_enableHwECC
00030acc                _NAND_disableHwECC
00030bb4                _NAND_readECC
00030d68                _NAND_readNBytes
00030e7c                _NAND_writeNBytes
00031058                _NAND_hasRandomRead
00031088                _NAND_hasRandomWrite
000310b8                _NAND_hasCacheProg
000310e8                _NAND_hasCopyBack
00031118                _NAND_intrEnable
00031178                _NAND_intrDisable
000311d8                _NAND_getIntrNum
000311f8                _NAND_intrReadAT
00031238                _NAND_intrReadLT
0003127c                _NAND_intrReadWR
000312c0                _NAND_intrClear
000313ac                _UART_init
00031468                _UART_setup
00031910                _UART_config
00031a18                _UART_setupBaudRate
00031b24                _UART_reset
00031b6c                _UART_resetOff
00031bb8                _UART_eventEnable
00031c50                _UART_eventDisable
00031ce0                _UART_read
00031e0c                _UART_write
00031f90                _UART_fgetc
00032030                _UART_fputc
000320b8                _UART_fgets
000321e8                _UART_fputs
000322d8                _UART_getEventId
00032300                _UART_getConfig
000323c0                _UART_setCallback
00032428                _xQueueGenericReset
000324f4                _xQueueGenericCreate
00032584                _xQueueGenericSend
00032708                _xQueueGenericSendFromISR
00032794                _xQueueGiveFromISR
0003281c                _xQueueReceive
000329a0                _xQueueSemaphoreTake
00032b14                _xQueuePeek
00032c9c                _xQueueReceiveFromISR
00032d28                _xQueuePeekFromISR
00032d6c                _uxQueueMessagesWaiting
00032da8                _uxQueueSpacesAvailable
00032df0                _uxQueueMessagesWaitingFromISR
00032e08                _vQueueDelete
00033070                _xQueueIsQueueEmptyFromISR
000330dc                _xQueueIsQueueFullFromISR
00033104                _xQueueCRSend
00033194                _xQueueCRReceive
00033254                _xQueueCRSendFromISR
000332a8                _xQueueCRReceiveFromISR
00033344                _DAT_open
0003341c                _DAT_close
000335b0                _DAT_copy
00033aac                _DAT_fill
00033fbc                _DAT_wait
00034184                _AC_Open
000343cc                _AC_Close
00034408                _AC_Ctrl
00034600                _AC_Iso
0003469c                _AC_GetactivityFlagStatus
000346b8                _AC_GetsuspendFlagStatus
000346d0                _AC_initDescriptors
00034980                _AC_reqGetDescriptor
00034b58                _AC_reqSetCurrent
00034c34                _AC_reqGetCurrent
00034cf8                _AC_reqGetMinimum
00034d3c                _AC_reqGetMaximum
00034d80                _AC_reqGetResolution
00034dc4                _AC_reqSetInterface
00034f10                _CDC_Open
00034f34                _CDC_OpenFullspeed
00035108                _CDC_Close
00035144                _CDC_GetactivityFlagStatus
0003515c                _CDC_GetsuspendFlagStatus
00035174                _CDC_eventHandler
00035470                _CDC_bulkOutHandler
00035570                _CDC_bulkInHandler
00035860                _CDC_getData
000358f0                _CDC_putData
00035ae4                _I2C_init
00035b90                _I2C_config
00035cf8                _I2C_getConfig
00035dd0                _I2C_setup
00035fcc                _I2C_write
00036210                _I2C_read
00036430                _I2C_eventEnable
00036564                _I2C_eventDisable
00036684                _I2C_setCallback
00036714                _I2C_getEventId
00036730                _MMC_initState
00036874                _MMC_readWriteControl
00036b54                _MMC_issueReadCommand
00036d10                _MMC_readNextWord
00036d80                _MMC_readNextWord1
00036df4                _MMC_readNextNWords
00036e64                _MMC_writeSector
00036f4c                _MMC_readNSectors
00037024                _MMC_writeNSectors
000370fc                _MMC_read_CID
00037168                _MMC_read_CSD
000371d4                _MMC_writeSectorFlush
000371e0                _MMC_commandReadyStatusCheck
000371ec                _MMC_dataReadyStatusCheck
000371f8                _MMC_busyStatusCheck
00037204                _MMC_getSerialID
00037214                _MMC_file_system_format
00037220                _MMC_reset
0003722c                _MMC_get_time
00037230                _MMC_get_mod_time
00037234                _MMC_get_date
00037238                _MMC_get_mod_date
0003723c                _MMC_flushFat
00037270                _SAR_init
000372d0                _SAR_deInit
000372f0                _SAR_chanInit
0003730c                _SAR_chanOpen
00037370                _SAR_chanClose
000373f4                _SAR_chanConfig
0003746c                _SAR_getConfig
000374e0                _SAR_chanSetup
000376f4                _SAR_chanCycSet
00037744                _SAR_startConversion
00037778                _SAR_stopConversion
000377c0                _SAR_readData
00037804                _SAR_A2DMeasParamSet
00037c80                _SAR_GPODirSet
00037d5c                _SAR_getStatus
00037d9c                _I2S_open
00037ee0                _I2S_setup
000381c8                _I2S_close
00038274                _I2S_read
00038530                _I2S_write
00038688                _I2S_reset
00038734                _I2S_transEnable
0003880c                _RTC_reset
0003881c                _RTC_start
00038840                _RTC_stop
00038848                _RTC_config
00038934                _RTC_getConfig
000389e4                _RTC_setTime
00038a60                _RTC_getTime
00038aac                _RTC_setDate
00038b1c                _RTC_getDate
00038b5c                _RTC_setAlarm
00038c30                _RTC_setPeriodicInterval
00038ce4                _RTC_eventEnable
00038dd0                _RTC_eventDisable
00038e84                _RTC_getEventId
00038ed8                _RTC_decToBcd
00038f18                _RTC_bcdToDec
00038f58                _RTC_setCallback
00038fe8                _RTC_setCompensation
00039034                _LCD_init
0003905c                _LCD_open
000390a0                _LCD_setup
000394fc                _LCD_configDMA
0003984c                _LCD_close
0003986c                _oled_test
0003a08c                _GPIO_open
0003a0d0                _GPIO_close
0003a0f4                _GPIO_config
0003a17c                _GPIO_getConfig
0003a204                _GPIO_read
0003a288                _GPIO_write
0003a32c                _GPIO_configBit
0003a474                _GPIO_disableInt
0003a4f4                _GPIO_enableInt
0003a580                _GPIO_clearInt
0003a60c                _GPIO_statusBit
0003a694                _GPIO_reset
0003a724                _SPI_init
0003a788                _SPI_open
0003a7bc                _SPI_close
0003a7e8                _SPI_config
0003aa70                _SPI_deInit
0003aa9c                _SPI_read
0003ab80                _SPI_write
0003ac6c                _SPI_dataTransaction
0003ace0                _vCreateBlockTimeTasks
0003b208                _xAreBlockTimeTestTasksStillRunning
0003b257                _write
0003b399                _unlink
0003b3cc                _rename
0003b425                _remove_device
0003b45b                _read
0003b509                _open
0003b5c8                _lseek
0003b62e                _find_registered_device
0003b637                _close
0003b6aa                _add_device
0003b79c                _IRQ_init
0003b824                _IRQ_clear
0003b890                _IRQ_clearAll
0003b8a0                _IRQ_config
0003b928                _IRQ_getConfig
0003b9b0                _IRQ_disable
0003ba30                _IRQ_disableAll
0003ba40                _IRQ_enable
0003bacc                _IRQ_restore
0003bb3c                _IRQ_getArg
0003bb80                _IRQ_setArg
0003bbb4                _IRQ_map
0003bbe0                _IRQ_setVecs
0003bc14                _IRQ_test
0003bc88                _IRQ_globalDisable
0003bca4                _IRQ_globalEnable
0003bcc0                _IRQ_globalRestore
0003bcd4                _getenv
0003bd4f                _HOSTwrite
0003bddc                _HOSTunlink
0003be46                _HOSTtime
0003bea4                _HOSTrename
0003bf52                _HOSTread
0003bfdf                _HOSTopen
0003c07e                _HOSTlseek
0003c133                _HOSTclose
0003c19e                _HOSTclock
0003c1fc                _EZDSP5535_SDCARD_init
0003c5a4                _EZDSP5535_SDCARD_read
0003c5d8                _EZDSP5535_SDCARD_write
0003c60c                _EZDSP5535_SDCARD_close
0003c6d4                _main
0003c924                _vApplicationIdleHook
0003c958                _InitSystem
0003c9c0                _ConfigPort
0003c9c8                _SYS_GlobalIntEnable
0003c9d0                _SYS_GlobalIntDisable
0003ca3c                _BlinkLED
0003ca74                _GenerateAudioTone
0003cb00                _systemInit
0003cb78                _vApplicationMallocFailedHook
0003cb80                _vApplicationStackOverflowHook
0003cb8d                _free
0003cc59                _minit
0003ccbe                _malloc
0003cdb3                _realloc
0003cf64                _max_free
0003cfbe                _free_memory
0003d014                _chkheap
0003d01c                _calloc
0003d044                _xCoRoutineCreate
0003d120                _vCoRoutineAddToDelayedList
0003d300                _vCoRoutineSchedule
0003d404                _xCoRoutineRemoveFromEventList
0003d454                _vStartQueuePeekTasks
0003d828                _xAreQueuePeekTasksStillRunning
0003d860                _xEventGroupCreate
0003d888                _xEventGroupSync
0003d96c                _xEventGroupWaitBits
0003da64                _xEventGroupClearBits
0003dab0                _xEventGroupGetBitsFromISR
0003dacc                _xEventGroupSetBits
0003dbac                _vEventGroupDelete
0003dbec                _vEventGroupSetBitsCallback
0003dc00                _vEventGroupClearBitsCallback
0003dc48                _xPortStartScheduler
0003dd45                _vTickISR
0003deb9                _vPortYield
0003e024                _vStartMathTasks
0003e3bc                _xAreMathsTaskStillRunning
0003e3f6                __divd
0003e7c4                _EZDSP5535_SPIFLASH_init
0003e828                _EZDSP5535_SPIFLASH_status
0003e86c                _EZDSP5535_SPIFLASH_erase
0003e970                _EZDSP5535_SPIFLASH_read
0003ea20                _EZDSP5535_SPIFLASH_write
0003eb88                _MEM_init
0003eb8c                _MEM_enableRetentionMode
0003ebd0                _MEM_disableRetentionMode
0003ec14                _MEM_enablePartialRetentionMode
0003ed5c                _MEM_disablePartialRetentionMode
0003ee80                _MEM_setmSDRAMClock
0003eebc                _MEM_getmSDRAMClock
0003eed0                _vStartDynamicPriorityTasks
0003f1b0                _xAreDynamicPriorityTasksStillRunning
0003f210                _GPT_open
0003f2d4                _GPT_reset
0003f350                _GPT_close
0003f3c8                _GPT_start
0003f3f8                _GPT_stop
0003f424                _GPT_getCnt
0003f460                _GPT_config
0003f507                _AIC3254_init
0003f7f8                _vStartSemaphoreTasks
0003fa68                _xAreSemaphoreTasksStillRunning
0003fae4                _PLL_init
0003fb1c                _PLL_config
0003fc40                _PLL_enable
0003fca8                _PLL_bypass
0003fcf8                _PLL_reset
0003fd64                _i2s0_read_CR
0003fd6a                _i2s0_write_CR
0003fd70                _i2s0_read_SRGR
0003fd76                _i2s0_write_SRGR
0003fd7c                _i2s0_read_TXL_LSW
0003fd82                _i2s0_write_TXL_LSW
0003fd88                _i2s0_read_TXL_MSW
0003fd8e                _i2s0_write_TXL_MSW
0003fd94                _i2s0_read_TXR_LSW
0003fd9a                _i2s0_write_TXR_LSW
0003fda0                _i2s0_read_TXR_MSW
0003fda6                _i2s0_write_TXR_MSW
0003fdac                _i2s0_read_INTR
0003fdb2                _i2s0_read_INT_MASK
0003fdb8                _i2s0_write_INT_MASK
0003fdbe                _i2s0_read_RXL_LSW
0003fdc4                _i2s0_write_RXL_LSW
0003fdca                _i2s0_read_RXL_MSW
0003fdd0                _i2s0_write_RXL_MSW
0003fdd6                _i2s0_read_RXR_LSW
0003fddc                _i2s0_write_RXR_LSW
0003fde2                _i2s0_read_RXR_MSW
0003fde8                _i2s0_write_RXR_MSW
0003fdee                _i2s1_read_CR
0003fdf4                _i2s1_write_CR
0003fdfa                _i2s1_read_SRGR
0003fe00                _i2s1_write_SRGR
0003fe06                _i2s1_read_TXL_LSW
0003fe0c                _i2s1_write_TXL_LSW
0003fe12                _i2s1_read_TXL_MSW
0003fe18                _i2s1_write_TXL_MSW
0003fe1e                _i2s1_read_TXR_LSW
0003fe24                _i2s1_write_TXR_LSW
0003fe2a                _i2s1_read_TXR_MSW
0003fe30                _i2s1_write_TXR_MSW
0003fe36                _i2s1_read_INTR
0003fe3c                _i2s1_read_INT_MASK
0003fe42                _i2s1_write_INT_MASK
0003fe48                _i2s1_read_RXL_LSW
0003fe4e                _i2s1_write_RXL_LSW
0003fe54                _i2s1_read_RXL_MSW
0003fe5a                _i2s1_write_RXL_MSW
0003fe60                _i2s1_read_RXR_LSW
0003fe66                _i2s1_write_RXR_LSW
0003fe6c                _i2s1_read_RXR_MSW
0003fe72                _i2s1_write_RXR_MSW
0003fe78                _i2s2_read_CR
0003fe7e                _i2s2_write_CR
0003fe84                _i2s2_read_SRGR
0003fe8a                _i2s2_write_SRGR
0003fe90                _i2s2_read_TXL_LSW
0003fe96                _i2s2_write_TXL_LSW
0003fe9c                _i2s2_read_TXL_MSW
0003fea2                _i2s2_write_TXL_MSW
0003fea8                _i2s2_read_TXR_LSW
0003feae                _i2s2_write_TXR_LSW
0003feb4                _i2s2_read_TXR_MSW
0003feba                _i2s2_write_TXR_MSW
0003fec0                _i2s2_read_INTR
0003fec6                _i2s2_read_INT_MASK
0003fecc                _i2s2_write_INT_MASK
0003fed2                _i2s2_read_RXL_LSW
0003fed8                _i2s2_write_RXL_LSW
0003fede                _i2s2_read_RXL_MSW
0003fee4                _i2s2_write_RXL_MSW
0003feea                _i2s2_read_RXR_LSW
0003fef0                _i2s2_write_RXR_LSW
0003fef6                _i2s2_read_RXR_MSW
0003fefc                _i2s2_write_RXR_MSW
0003ff02                _i2s3_read_CR
0003ff08                _i2s3_write_CR
0003ff0e                _i2s3_read_SRGR
0003ff14                _i2s3_write_SRGR
0003ff1a                _i2s3_read_TXL_LSW
0003ff20                _i2s3_write_TXL_LSW
0003ff26                _i2s3_read_TXL_MSW
0003ff2c                _i2s3_write_TXL_MSW
0003ff32                _i2s3_read_TXR_LSW
0003ff38                _i2s3_write_TXR_LSW
0003ff3e                _i2s3_read_TXR_MSW
0003ff44                _i2s3_write_TXR_MSW
0003ff4a                _i2s3_read_INTR
0003ff50                _i2s3_read_INT_MASK
0003ff56                _i2s3_write_INT_MASK
0003ff5c                _i2s3_read_RXL_LSW
0003ff62                _i2s3_write_RXL_LSW
0003ff68                _i2s3_read_RXL_MSW
0003ff6e                _i2s3_write_RXL_MSW
0003ff74                _i2s3_read_RXR_LSW
0003ff7a                _i2s3_write_RXR_LSW
0003ff80                _i2s3_read_RXR_MSW
0003ff86                _i2s3_write_RXR_MSW
0003ff8c                _enable_i2s0
0003ff9a                _enable_i2s1
0003ffa8                _enable_i2s2
0003ffb6                _enable_i2s3
0003ffc4                _disable_i2s0
0003ffd2                _disable_i2s1
0003ffe0                _disable_i2s2
0003ffee                _disable_i2s3
            00020000    ___cinit__
            00020000    cinit
            000202dc    __CIOBUF_
00040ad9                __cleanup
00040b33                _freopen
00040bfc                _fopen
00040c38                _WDTIM_open
00040cb0                _WDTIM_start
00040cf8                _WDTIM_stop
00040d40                _WDTIM_getCnt
00040d70                _WDTIM_close
00040db4                _WDTIM_service
00040de8                _WDTIM_config
00040e54                _WDTIM_getConfig
00040e9e                __remull
00040eec                __remlli
00040f1b                __mpylli
00040fd3                __divull
000410c7                __divlli
000410fc                __addd
00041358                _Timer_isr
00041480                _Timer02_isr
000415a4                _set_dma1_ch0_stop
000415bc                _set_dma0_ch0_stop
000415d4                _set_dma1_ch1_stop
000415ec                _set_dma0_ch1_stop
00041604                _set_dma1_ch0_i2s2_Lout
00041670                _set_dma0_ch0_i2s0_Lout
000416dc                _set_dma1_ch1_i2s2_Rout
00041748                _set_dma0_ch1_i2s0_Rout
000417b4                _enable_dma_int
000417c4                _vStartQueueOverwriteTask
000418e4                _xIsQueueOverwriteTaskStillRunning
00041914                _vQueueOverwritePeriodicISRDemo
000419e4                _EZDSP5535_LED_init
00041a1c                _EZDSP5535_LED_getall
00041a70                _EZDSP5535_LED_setall
00041ae0                _EZDSP5535_LED_on
00041b18                _EZDSP5535_LED_off
00041b4c                _EZDSP5535_LED_toggle
00041b94                _EZDSP5535_XF_on
00041ba0                _EZDSP5535_XF_off
00041bac                _EZDSP5535_XF_get
00041bbc                _EZDSP5535_XF_toggle
00041bdb                __neqd
00041c0f                __lssd
00041c57                __leqd
00041ca4                __gtrd
00041cef                __geqd
00041d39                __eqld
00041d6d                __cmpd
00041dc8                _pxPortInitialiseStack
00041f70                _vPortEndScheduler
00041f74                _prvSetupTimerInterrupt
00041f88                _vStartPolledQueueTasks
00042110                _xArePollingQueuesStillRunning
0004213c                _vListInitialise
00042178                _vListInitialiseItem
0004218c                _vListInsertEnd
000421e0                _vListInsert
00042274                _uxListRemove
000422d8                _EZDSP5535_OSD9616_send
00042300                _EZDSP5535_OSD9616_multiSend
0004234c                _EZDSP5535_OSD9616_init
00042430                _EZDSP5535_OSD9616_printLetter
00042470                _spiflash_test
000425fc                _EZDSP5535_SAR_init
000426c4                _EZDSP5535_SAR_getKey
00042778                _fputs
000428ad                _puts
000428db                __mpyd
00042a28                _EZDSP5535_I2S_init
00042a84                _EZDSP5535_I2S_readLeft
00042ab8                _EZDSP5535_I2S_writeLeft
00042ae8                _EZDSP5535_I2S_readRight
00042b0c                _EZDSP5535_I2S_writeRight
00042b28                _EZDSP5535_I2S_close
00042b3c                _vStartIntegerMathTasks
00042c10                _xAreIntegerMathsTaskStillRunning
00042c40                _enable_rtc_second_int
00042c4c                _reset_RTC
00042d08                _convert_number_to_string
00042d3c                _setvbuf
00042e22                __wrt_ok
00042ea2                __rd_ok
00042eff                __doflush
00042f68                _fflush
00042fc4                _vStartLEDFlashTasks
00043084                _pvPortMalloc
00043120                _vPortFree
0004312c                _vPortInitialiseBlocks
00043134                _xPortGetFreeHeapSize
00043142                _writemsg
000431f7                C$$IO$$
000431fc                _mem_test
000432ab                _fputc
000432ab                _putc
00043342                _putchar
00043354                _EZDSP5535_UART_open
000433c4                _EVM5515_UART_putChar
000433dc                _EVM5515_UART_getChar
000433f6                __divul
00043498                _vParTestInitialise
0004349c                _vParTestSetLED
000434b0                _vParTestToggleLED
00043538                _EZDSP5535_I2C_init
00043570                _EZDSP5535_I2C_reset
0004357c                _EZDSP5535_I2C_write
000435a4                _EZDSP5535_I2C_read
000435cc                _IRQ_plug
00043658                _set_i2s2_master
0004368c                _set_i2s0_master
000436c0                _set_i2s0_slave
000436e4                _EZDSP5535_GPIO_init
00043710                _EZDSP5535_GPIO_setDirection
00043734                _EZDSP5535_GPIO_setOutput
00043750                _EZDSP5535_GPIO_getInput
0004376e                reset_isr
000437ed                _ltoa
0004386a                _fclose
000438e5                __frcmpyd
0004395b                __frcmpyd_div
000439ce                __remul
00043a40                __fixdli
00043aaf                _readmsg
00043b1c                _fseek
00043b87                __fltlid
00043bee                _atoi
00043c4c                _Timer0Init
00043c74                _Timer02Init
00043c98                _StartTimer0
00043ca0                _StartTimer02
00043ca8                __fltuld
00043d04                _EZDSP5535_wait
00043d38                _EZDSP5535_waitusec
00043d4c                _EZDSP5535_init
00043d5a                _printf
00043dac                _RTC_Isr
00043dfa                _auto_init
00043e47                __args_main
00043e92                __remli
00043edd                __divli
00043f25                _memcpy
00043f64                _exit
00043fa2                _c_int00
00043fd6                __fixdi
00044000                I$$UDIV
00044000                __divu
00044015                I$$UMOD
00044015                __remu
0004402a                _memccpy
0004404d                ___isinf
00044067                __subd
0004407b                I$$LMPY
0004407b                __mpyli
0004408e                __register_unlock
00044096                __register_lock
0004409e                __nop
000440a0                _memset
000440b1                _strlen
000440c2                __negd
000440d2                __fltud
000440e0                _remove
000440ea                _abort
000440eb                C$$EXIT
0004fe00                _Reset
0004ff00                _RST
0004ff00                _VECSTART
ffffffff                .bss
ffffffff                .data
ffffffff                .text
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
ffffffff                ___pinit__
ffffffff                ___text__
ffffffff                binit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit

[872 symbols]
