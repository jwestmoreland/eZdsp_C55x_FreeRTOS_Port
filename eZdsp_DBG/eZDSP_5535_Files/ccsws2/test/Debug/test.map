******************************************************************************
              TMS320C55x Linker PC v4.4.1                      
******************************************************************************
>> Linked Sat Sep 22 20:47:24 2018

OUTPUT FILE NAME:   <test.out>
ENTRY POINT SYMBOL: "_c_int00"  address: 00034697


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  MMR                   00000000   000000c0  00000000  000000c0  RWIX
  DARAM0                000000c0   0000ff40  0000c75a  000037e6  RWIX
  SARAM0                00010000   00010000  0000fffe  00000002  RWIX
  SARAM1                00020000   00020000  000197ce  00006832  RWIX
  SARAM2                00040000   0000cdda  00000a9c  0000c33e  RWIX
  VECS                  0004ce00   00000200  00000200  00000000  RWIX
  PDROM                 00ff8000   00008000  00000000  00008000  R IX

PAGE 2:
  IOPORT                00000000   00020000  00000000  00020000  RWI 


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.pinit       0   [ 00040000 ]  00020000          *   00000000   UNINITIALIZED

.stack       0   [ 000000c0 ]  00000060          *   00001000   
                 [ 000000c0 ]  00000060          *   00001000   --HOLE-- [fill = a5a5a5a5]

.data        0   [ 000000c0 ]  00000060          *   00000000   UNINITIALIZED

.sysstack 
*            0   [ 000020c0 ]  00001060          *   00000800   
                 [ 000020c0 ]  00001060          *   00000800   --HOLE-- [fill = a5a5a5a5]

.bss.1       0   [ 000030c0 ]  00001860          *   0000418d   UNINITIALIZED
                 [ 000030c0 ]  00001860          *   0000300a   heap_2.obj (.bss)
                 [ 000090d4 ]  0000486a          *   00000002   ezdsp5535_i2s.obj (.bss)
                 [ 000090d8 ]  0000486c          *   0000050d   csl_mmcsd_ataIf.obj (.bss)
                 [ 00009af2 ]  00004d79          *   00000400   mem_test.obj (.bss)
                 [ 0000a2f2 ]  00005179          *   00000200   spiflash_test.obj (.bss)
                 [ 0000a6f2 ]  00005379          *   00000001   integer.obj (.bss)
                 [ 0000a6f4 ]  0000537a          *   000001be   csl_usb.obj (.bss)
                 [ 0000aa70 ]  00005538          *   00000124   dma.obj (.bss)
                 [ 0000acb8 ]  0000565c          *   00000119   rts55x.lib : defs.obj (.bss)
                 [ 0000aeea ]  00005775          *   00000001              : fopen.obj (.bss)
                 [ 0000aeec ]  00005776          *   00000112   ezdsp5535_spiflash.obj (.bss)
                 [ 0000b110 ]  00005888          *   000000d0   rts55x.lib : trgdrv.obj (.bss)
                 [ 0000b2b0 ]  00005958          *   00000095   ezdsp5535_sdcard.obj (.bss)

.bss.2       0   [ 0000b3dc ]  000059ee          *   00000101   UNINITIALIZED
                 [ 0000b3dc ]  000059ee          *   00000084   csl_intc.obj (.bss)
                 [ 0000b4e4 ]  00005a72          *   0000007d   tasks_sysStk.obj (.bss)

.bss.3       0   [ 0000b5e0 ]  00005af0          *   00000161   UNINITIALIZED
                 [ 0000b5e0 ]  00005af0          *   00000071   rts55x.lib : lowlev.obj (.bss)
                 [ 0000b6c2 ]  00005b61          *   00000061   i2s.obj (.bss)
                 [ 0000b784 ]  00005bc2          *   00000036   main.obj (.bss)
                 [ 0000b7f0 ]  00005bf8          *   0000002f   port.obj (.bss)
                 [ 0000b84e ]  00005c27          *   0000002a   csl_i2s.obj (.bss)

.bss.4       0   [ 0000b8a4 ]  00005c52          *   0000008d   UNINITIALIZED
                 [ 0000b8a4 ]  00005c52          *   00000020   queue.obj (.bss)
                 [ 0000b8e4 ]  00005c72          *   00000016   ezdsp5535_uart.obj (.bss)
                 [ 0000b910 ]  00005c88          *   00000014   rtc.obj (.bss)
                 [ 0000b938 ]  00005c9c          *   00000012   csl_i2c.obj (.bss)
                 [ 0000b95c ]  00005cae          *   00000012   dynamic.obj (.bss)
                 [ 0000b980 ]  00005cc0          *   0000000c   QPeek.obj (.bss)
                 [ 0000b998 ]  00005ccc          *   0000000a   blocktim.obj (.bss)
                 [ 0000b9ac ]  00005cd6          *   00000009   semtest.obj (.bss)

.bss.5       0   [ 0000b9c0 ]  00005ce0          *   00000039   UNINITIALIZED
                 [ 0000b9c0 ]  00005ce0          *   00000008   QueueOverwrite.obj (.bss)
                 [ 0000b9d0 ]  00005ce8          *   00000008   ezdsp5535_sar.obj (.bss)
                 [ 0000b9e0 ]  00005cf0          *   00000006   rts55x.lib : memory.obj (.bss)
                 [ 0000b9ec ]  00005cf6          *   00000004   ParTest.obj (.bss)
                 [ 0000b9f4 ]  00005cfa          *   00000004   PollQ.obj (.bss)
                 [ 0000b9fc ]  00005cfe          *   00000004   ezdsp5535_gpio.obj (.bss)
                 [ 0000ba04 ]  00005d02          *   00000004   flash.obj (.bss)
                 [ 0000ba0c ]  00005d06          *   00000004   flop.obj (.bss)
                 [ 0000ba14 ]  00005d0a          *   00000004   rts55x.lib : _lock.obj (.bss)
                 [ 0000ba1c ]  00005d0e          *   00000004              : exit.obj (.bss)
                 [ 0000ba24 ]  00005d12          *   00000004   timer.obj (.bss)
                 [ 0000ba2c ]  00005d16          *   00000003   csl_spi.obj (.bss)

.const.1     0   [ 0000ba34 ]  00005d1a          *   000004c9   
                 [ 0000ba34 ]  00005d1a          *   00000346   ezdsp5535_sdcard.obj (.const:.string)
                 [ 0000c0c0 ]  00006060          *   00000101   rts55x.lib : ctype.obj (.const:__ctypes_)
                 [ 0000c2c2 ]  00006161          *   00000001   heap_2.obj (.const)
                 [ 0000c2c4 ]  00006162          *   00000081   csl_cdc.obj (.const:.string)

.const.2     0   [ 0000c3c8 ]  000061e4          *   00000061   
                 [ 0000c3c8 ]  000061e4          *   00000061   main.obj (.const:.string)

.const.3     0   [ 0000c48c ]  00006246          *   0000005d   
                 [ 0000c48c ]  00006246          *   0000005d   spiflash_test.obj (.const:.string)

.const.4     0   [ 0000c548 ]  000062a4          *   0000003f   
                 [ 0000c548 ]  000062a4          *   0000003f   semtest.obj (.const:.string)

.const.5     0   [ 0000c5c8 ]  000062e4          *   0000006b   
                 [ 0000c5c8 ]  000062e4          *   0000003e   dynamic.obj (.const:.string)
                 [ 0000c644 ]  00006322          *   0000002d   QPeek.obj (.const:.string)

.const.6     0   [ 0000c6a0 ]  00006350          *   00000045   
                 [ 0000c6a0 ]  00006350          *   00000024   rts55x.lib : _printfi.obj (.const:.string)
                 [ 0000c6e8 ]  00006374          *   00000021   blocktim.obj (.const:.string)

.const.7     0   [ 0000c72c ]  00006396          *   00000073   
                 [ 0000c72c ]  00006396          *   00000020   PollQ.obj (.const:.string)
                 [ 0000c76c ]  000063b6          *   00000018   flop.obj (.const:.string)
                 [ 0000c79c ]  000063ce          *   00000014   flop.obj (.const)
                 [ 0000c7c4 ]  000063e2          *   0000000c   rts55x.lib : _printfi.obj (.const)
                 [ 0000c7dc ]  000063ee          *   00000008   integer.obj (.const:.string)
                 [ 0000c7ec ]  000063f6          *   00000008   rts55x.lib : divd.obj (.const:_initial_approx$1)
                 [ 0000c7fc ]  000063fe          *   00000006   QueueOverwrite.obj (.const:.string)
                 [ 0000c808 ]  00006404          *   00000005   flash.obj (.const:.string)

.const.8     0   [ 0000c814 ]  0000640a          *   00000009   
                 [ 0000c814 ]  0000640a          *   00000005   tasks_sysStk.obj (.const:.string)
                 [ 0000c81e ]  0000640f          *   00000004   main.obj (.const:_$P$T0$2)

.const.9     0   [ 0000c828 ]  00006414          *   00000006   
                 [ 0000c828 ]  00006414          *   00000002   rts55x.lib : fputs.obj (.const:.string)
                 [ 0000c82c ]  00006416          *   00000002              : fltlid.obj (.const)
                 [ 0000c830 ]  00006418          *   00000002              : fltuld.obj (.const)

.text.1      0     00010000  [ 00008000 ] 0000da22          *   
                   00010000  [ 00008000 ] 0000444f          *   csl_mmcsd.obj (.text)
                   0001444f  [ 0000a227 ] 00000001          *   --HOLE-- [fill = 20]
                   00014450  [ 0000a228 ] 00002b4f          *   csl_msc.obj (.text)
                   00016f9f  [ 0000b7cf ] 00000001          *   --HOLE-- [fill = 20]
                   00016fa0  [ 0000b7d0 ] 00002a24          *   csl_sdio.obj (.text)
                   000199c4  [ 0000cce2 ] 000021d5          *   csl_usb.obj (.text)
                   0001bb99  [ 0000ddcc+] 00000002          *   rts55x.lib : vectors.obj (.text)
                   0001bb9b  [ 0000ddcd ] 00000001          *   --HOLE-- [fill = 20]
                   0001bb9c  [ 0000ddce ] 00001e85          *   tasks_sysStk.obj (.text)
                   0001da21  [ 0000ed10 ] 00000001          *   --HOLE-- [fill = 20]

.text.2      0     0001da24  [ 0000ed12 ] 000025dc          *   
                   0001da24  [ 0000ed12 ] 000018ac          *   csl_dma.obj (.text)
                   0001f2d0  [ 0000f968 ] 00000c65          *   csl_cdc.obj (.text)
                   0001ff35  [ 0000ff9a+] 000000c2          *   rts55x.lib : fflush.obj (.text)
                   0001fff7  [ 0000fffb+] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   0001fffe  [ 0000ffff ] 00000002          *   --HOLE-- [fill = 20]

.text.3      0     00020000  [ 00010000 ] 00004ac8          *   
                   00020000  [ 00010000 ] 000015a4          *   rts55x.lib : _printfi.obj (.text)
                   000215a4  [ 00010ad2 ] 00001230          *   queue.obj (.text)
                   000227d4  [ 000113ea ] 000011eb          *   csl_nand.obj (.text)
                   000239bf  [ 00011cdf ] 00000001          *   --HOLE-- [fill = 20]
                   000239c0  [ 00011ce0 ] 00001106          *   csl_uart.obj (.text)
                   00024ac6  [ 00012563 ] 00000002          *   --HOLE-- [fill = 20]

.text.4      0     00024ac8  [ 00012564 ] 00000dc2          *   
                   00024ac8  [ 00012564 ] 00000dc1          *   csl_dat.obj (.text)
                   00025889  [ 00012c44 ] 00000001          *   --HOLE-- [fill = 20]

.text.5      0     0002588c  [ 00012c46 ] 00002500          *   
                   0002588c  [ 00012c46 ] 00000d74          *   csl_audioClass.obj (.text)
                   00026600  [ 00013300 ] 00000c4c          *   csl_i2c.obj (.text)
                   0002724c  [ 00013926 ] 00000b3e          *   csl_mmcsd_ataIf.obj (.text)
                   00027d8a  [ 00013ec5 ] 00000002          *   --HOLE-- [fill = 20]

.text.6      0     00027d8c  [ 00013ec6 ] 00003792          *   
                   00027d8c  [ 00013ec6 ] 00000b2b          *   csl_sar.obj (.text)
                   000288b7  [ 0001445b ] 00000001          *   --HOLE-- [fill = 20]
                   000288b8  [ 0001445c ] 000009e3          *   csl_i2s.obj (.text)
                   0002929b  [ 0001494d ] 00000001          *   --HOLE-- [fill = 20]
                   0002929c  [ 0001494e ] 00000977          *   main.obj (.text)
                   00029c13  [ 00014e09 ] 00000001          *   --HOLE-- [fill = 20]
                   00029c14  [ 00014e0a ] 000008b4          *   csl_rtc.obj (.text)
                   0002a4c8  [ 00015264 ] 00000838          *   csl_lcdc.obj (.text)
                   0002ad00  [ 00015680 ] 0000081d          *   oled_test.obj (.text)
                   0002b51d  [ 00015a8e ] 00000001          *   --HOLE-- [fill = 20]

.text.7      0     0002b520  [ 00015a90 ] 00000c9c          *   
                   0002b520  [ 00015a90 ] 00000697          *   csl_gpio.obj (.text)
                   0002bbb7  [ 00015ddb ] 00000001          *   --HOLE-- [fill = 20]
                   0002bbb8  [ 00015ddc ] 00000602          *   portASM.obj (.text)
                   0002c1ba  [ 000160dd ] 00000002          *   --HOLE-- [fill = 20]

.text.8      0     0002c1bc  [ 000160de ] 00001628          *   
                   0002c1bc  [ 000160de ] 000005bb          *   csl_spi.obj (.text)
                   0002c777  [ 000163bb ] 00000001          *   --HOLE-- [fill = 20]
                   0002c778  [ 000163bc ] 000005b3          *   blocktim.obj (.text)
                   0002cd2b  [ 00016695 ] 00000001          *   --HOLE-- [fill = 20]
                   0002cd2c  [ 00016696 ] 00000573          *   event_groups.obj (.text)
                   0002d29f  [ 0001694f+] 00000543          *   rts55x.lib : lowlev.obj (.text)
                   0002d7e2  [ 00016bf1 ] 00000002          *   --HOLE-- [fill = 20]

.text.9      0     0002d7e4  [ 00016bf2 ] 000013ec          *   
                   0002d7e4  [ 00016bf2 ] 00000538          *   csl_intc.obj (.text)
                   0002dd1c  [ 00016e8e ] 00000528          *   rts55x.lib : trgdrv.obj (.text)
                   0002e244  [ 00017122 ] 000004d5          *   ezdsp5535_sdcard.obj (.text)
                   0002e719  [ 0001738c+] 000004b5          *   rts55x.lib : memory.obj (.text)
                   0002ebce  [ 000175e7 ] 00000002          *   --HOLE-- [fill = 20]

.text.10     0     0002ebd0  [ 000175e8 ] 00000430          *   
                   0002ebd0  [ 000175e8 ] 0000042e          *   QPeek.obj (.text)
                   0002effe  [ 000177ff ] 00000002          *   --HOLE-- [fill = 20]

.text.11     0     0002f000  [ 00017800 ] 00000b9c          *   
                   0002f000  [ 00017800 ] 000003fb          *   dynamic.obj (.text)
                   0002f3fb  [ 000179fd ] 00000001          *   --HOLE-- [fill = 20]
                   0002f3fc  [ 000179fe ] 000003d2          *   flop.obj (.text)
                   0002f7ce  [ 00017be7 ] 000003cc          *   rts55x.lib : divd.obj (.text)
                   0002fb9a  [ 00017dcd ] 00000002          *   --HOLE-- [fill = 20]

.text.12     0     0002fb9c  [ 00017dce ] 000003c4          *   
                   0002fb9c  [ 00017dce ] 000003c2          *   ezdsp5535_spiflash.obj (.text)
                   0002ff5e  [ 00017faf ] 00000002          *   --HOLE-- [fill = 20]

.text.13     0     0002ff60  [ 00017fb0 ] 00000346          *   
                   0002ff60  [ 00017fb0 ] 00000345          *   csl_mem.obj (.text)
                   000302a5  [ 00018152 ] 00000001          *   --HOLE-- [fill = 20]

.text.14     0     000302a8  [ 00018154 ] 000017c0          *   
                   000302a8  [ 00018154 ] 000002f7          *   csl_gpt.obj (.text)
                   0003059f  [ 000182cf ] 00000001          *   --HOLE-- [fill = 20]
                   000305a0  [ 000182d0 ] 000002f4          *   semtest.obj (.text)
                   00030894  [ 0001844a ] 000002ef          *   aic_test_i2c.obj (.text)
                   00030b83  [ 000185c1 ] 00000001          *   --HOLE-- [fill = 20]
                   00030b84  [ 000185c2 ] 000002ac          *   csl_pll.obj (.text)
                   00030e30  [ 00018718 ] 00000298          *   i2s_register.obj (.text)
                   000310c8  [ 00018864 ] 0000027f          *   rts55x.lib : fopen.obj (.text)
                   00031347  [ 000189a3 ] 00000001          *   --HOLE-- [fill = 20]
                   00031348  [ 000189a4 ] 00000266          *   csl_wdt.obj (.text)
                   000315ae  [ 00018ad7 ] 0000025e          *   rts55x.lib : llmpy.obj (.text)
                   0003180c  [ 00018c06 ] 0000025a          *              : addd.obj (.text)
                   00031a66  [ 00018d33 ] 00000002          *   --HOLE-- [fill = 20]

.text.15     0     00031a68  [ 00018d34 ] 00000238          *   
                   00031a68  [ 00018d34 ] 00000236          *   QueueOverwrite.obj (.text)
                   00031c9e  [ 00018e4f ] 00000002          *   --HOLE-- [fill = 20]

.text.16     0     00031ca0  [ 00018e50 ] 00000226          *   
                   00031ca0  [ 00018e50 ] 00000225          *   heap_2.obj (.text)
                   00031ec5  [ 00018f62 ] 00000001          *   --HOLE-- [fill = 20]

.text.17     0     00031ec8  [ 00018f64 ] 00000220          *   
                   00031ec8  [ 00018f64 ] 0000021e          *   dma.obj (.text)
                   000320e6  [ 00019073 ] 00000002          *   --HOLE-- [fill = 20]

.text.18     0     000320e8  [ 00019074 ] 000003e2          *   
                   000320e8  [ 00019074 ] 000001f7          *   ezdsp5535_led.obj (.text)
                   000322df  [ 0001916f+] 000001ea          *   rts55x.lib : cmpd.obj (.text)
                   000324c9  [ 00019264 ] 00000001          *   --HOLE-- [fill = 20]

.text.19     0     000324cc  [ 00019266 ] 00000398          *   
                   000324cc  [ 00019266 ] 000001d4          *   port.obj (.text)
                   000326a0  [ 00019350 ] 000001c2          *   PollQ.obj (.text)
                   00032862  [ 00019431 ] 00000002          *   --HOLE-- [fill = 20]

.text.20     0     00032864  [ 00019432 ] 000001b0          *   
                   00032864  [ 00019432 ] 000001ae          *   list.obj (.text)
                   00032a12  [ 00019509 ] 00000002          *   --HOLE-- [fill = 20]

.text.21     0     00032a14  [ 0001950a ] 00000196          *   
                   00032a14  [ 0001950a ] 00000195          *   ezdsp5535_lcd.obj (.text)
                   00032ba9  [ 000195d4 ] 00000001          *   --HOLE-- [fill = 20]

.text.22     0     00032bac  [ 000195d6 ] 000007f8          *   
                   00032bac  [ 000195d6 ] 0000018b          *   spiflash_test.obj (.text)
                   00032d37  [ 0001969b ] 00000001          *   --HOLE-- [fill = 20]
                   00032d38  [ 0001969c ] 0000017c          *   ezdsp5535_sar.obj (.text)
                   00032eb4  [ 0001975a ] 00000163          *   rts55x.lib : fputs.obj (.text)
                   00033017  [ 0001980b+] 0000014c          *              : mpyd.obj (.text)
                   00033163  [ 000198b1 ] 00000001          *   --HOLE-- [fill = 20]
                   00033164  [ 000198b2 ] 0000012b          *   timer.obj (.text:retain)
                   0003328f  [ 00019947 ] 00000001          *   --HOLE-- [fill = 20]
                   00033290  [ 00019948 ] 00000112          *   ezdsp5535_i2s.obj (.text)
                   000333a2  [ 000199d1 ] 00000002          *   --HOLE-- [fill = 20]

.text.23     0     000333a4  [ 000199d2 ] 000002e8          *   
                   000333a4  [ 000199d2 ] 00000104          *   integer.obj (.text)
                   000334a8  [ 00019a54 ] 000000fc          *   rtc.obj (.text)
                   000335a4  [ 00019ad2 ] 000000e6          *   rts55x.lib : setvbuf.obj (.text)
                   0003368a  [ 00019b45 ] 00000002          *   --HOLE-- [fill = 20]

.text.24     0     0003368c  [ 00019b46 ] 00000276          *   
                   0003368c  [ 00019b46 ] 000000de          *   flash.obj (.text)
                   0003376a  [ 00019bb5 ] 000000dd          *   rts55x.lib : _io_perm.obj (.text)
                   00033847  [ 00019c23+] 000000ba          *              : trgmsg.obj (.text:CIO_breakpoint)
                   00033901  [ 00019c80 ] 00000001          *   --HOLE-- [fill = 20]

.text.25     0     00033904  [ 00019c82 ] 00000156          *   
                   00033904  [ 00019c82 ] 000000af          *   mem_test.obj (.text)
                   000339b3  [ 00019cd9+] 000000a6          *   rts55x.lib : fputc.obj (.text)
                   00033a59  [ 00019d2c ] 00000001          *   --HOLE-- [fill = 20]

.text.26     0     00033a5c  [ 00019d2e ] 000001e0          *   
                   00033a5c  [ 00019d2e ] 000000a2          *   ezdsp5535_uart.obj (.text)
                   00033afe  [ 00019d7f ] 000000a1          *   rts55x.lib : divul.obj (.text)
                   00033b9f  [ 00019dcf ] 00000001          *   --HOLE-- [fill = 20]
                   00033ba0  [ 00019dd0 ] 0000009a          *   ParTest.obj (.text)
                   00033c3a  [ 00019e1d ] 00000002          *   --HOLE-- [fill = 20]

.text.27     0     00033c3c  [ 00019e1e ] 0000076e          *   
                   00033c3c  [ 00019e1e ] 00000094          *   ezdsp5535_i2c.obj (.text)
                   00033cd0  [ 00019e68 ] 0000008c          *   csl_irqplug.obj (.text)
                   00033d5c  [ 00019eae ] 0000008c          *   i2s.obj (.text)
                   00033de8  [ 00019ef4 ] 0000008a          *   ezdsp5535_gpio.obj (.text)
                   00033e72  [ 00019f39 ] 0000007f          *   vectors.obj (.text)
                   00033ef1  [ 00019f78+] 0000007d          *   rts55x.lib : ltoa.obj (.text)
                   00033f6e  [ 00019fb7 ] 0000007b          *              : fclose.obj (.text)
                   00033fe9  [ 00019ff4+] 00000076          *              : frcmpyd.obj (.text)
                   0003405f  [ 0001a02f+] 00000073          *              : frcmpyd_div.obj (.text)
                   000340d2  [ 0001a069 ] 00000072          *              : remul.obj (.text)
                   00034144  [ 0001a0a2 ] 0000006f          *              : fixdli.obj (.text)
                   000341b3  [ 0001a0d9+] 0000006d          *              : trgmsg.obj (.text)
                   00034220  [ 0001a110 ] 0000006b          *              : fseek.obj (.text)
                   0003428b  [ 0001a145+] 00000067          *              : fltlid.obj (.text)
                   000342f2  [ 0001a179 ] 0000005c          *              : atoi.obj (.text)
                   0003434e  [ 0001a1a7 ] 0000005b          *              : fltuld.obj (.text)
                   000343a9  [ 0001a1d4 ] 00000001          *   --HOLE-- [fill = 20]

.text.28     0     000343ac  [ 0001a1d6 ] 000000a8          *   
                   000343ac  [ 0001a1d6 ] 00000056          *   ezdsp5535.obj (.text)
                   00034402  [ 0001a201 ] 00000050          *   rts55x.lib : printf.obj (.text)
                   00034452  [ 0001a229 ] 00000002          *   --HOLE-- [fill = 20]

.text.29     0     00034454  [ 0001a22a ] 0000038c          *   
                   00034454  [ 0001a22a ] 0000004e          *   rtc.obj (.text:retain)
                   000344a2  [ 0001a251 ] 0000004d          *   rts55x.lib : autoinit.obj (.text)
                   000344ef  [ 0001a277 ] 00000001          *   --HOLE-- [fill = 20]
                   000344f0  [ 0001a278 ] 0000004c          *   timer.obj (.text)
                   0003453c  [ 0001a29e ] 0000004b          *   rts55x.lib : args_main.obj (.text)
                   00034587  [ 0001a2c3+] 0000004b          *              : remli.obj (.text)
                   000345d2  [ 0001a2e9 ] 00000048          *              : divli.obj (.text)
                   0003461a  [ 0001a30d ] 0000003f          *              : memcpy.obj (.text)
                   00034659  [ 0001a32c+] 0000003e          *              : exit.obj (.text)
                   00034697  [ 0001a34b+] 00000034          *              : boot.obj (.text)
                   000346cb  [ 0001a365+] 0000002a          *              : fixdi.obj (.text)
                   000346f5  [ 0001a37a+] 0000002a          *              : udiv.obj (.text)
                   0003471f  [ 0001a38f+] 00000023          *              : memccpy.obj (.text)
                   00034742  [ 0001a3a1 ] 0000001a          *              : isinf.obj (.text)
                   0003475c  [ 0001a3ae ] 00000014          *              : subd.obj (.text)
                   00034770  [ 0001a3b8 ] 00000013          *              : lmpy.obj (.text)
                   00034783  [ 0001a3c1+] 00000012          *              : _lock.obj (.text)
                   00034795  [ 0001a3ca+] 00000011          *              : memset.obj (.text)
                   000347a6  [ 0001a3d3 ] 00000011          *              : strlen.obj (.text)
                   000347b7  [ 0001a3db+] 00000010          *              : negd.obj (.text)
                   000347c7  [ 0001a3e3+] 0000000e          *              : fltud.obj (.text)
                   000347d5  [ 0001a3ea+] 0000000a          *              : remove.obj (.text)
                   000347df  [ 0001a3ef ] 00000001          *   --HOLE-- [fill = 20]

.sysmem      0   [ 000347e0 ]  0001a3f0          *   00002800   UNINITIALIZED
                 [ 000347e0 ]  0001a3f0          *   00002800   --HOLE--

.cinit       0   [ 00040000 ]  00020000          *   0000034e   
                 [ 00040000 ]  00020000          *   000000dc   dma.obj (.cinit)
                 [ 000401b8 ]  000200dc          *   00000096   port.obj (.cinit)
                 [ 000402e4 ]  00020172          *   00000058   main.obj (.cinit)
                 [ 00040394 ]  000201ca          *   0000003d   tasks_sysStk.obj (.cinit)
                 [ 0004040e ]  00020207          *   0000002d   rts55x.lib : lowlev.obj (.cinit)
                 [ 00040468 ]  00020234          *   0000002a              : defs.obj (.cinit)
                 [ 000404bc ]  0002025e          *   0000001f   dynamic.obj (.cinit)
                 [ 000404fa ]  0002027d          *   00000015   csl_mmcsd_ataIf.obj (.cinit)
                 [ 00040524 ]  00020292          *   00000014   blocktim.obj (.cinit)
                 [ 0004054c ]  000202a6          *   00000013   QueueOverwrite.obj (.cinit)
                 [ 00040572 ]  000202b9          *   00000010   timer.obj (.cinit)
                 [ 00040592 ]  000202c9          *   0000000e   QPeek.obj (.cinit)
                 [ 000405ae ]  000202d7          *   0000000d   ParTest.obj (.cinit)
                 [ 000405c8 ]  000202e4          *   0000000c   ezdsp5535_sar.obj (.cinit)
                 [ 000405e0 ]  000202f0          *   0000000c   semtest.obj (.cinit)
                 [ 000405f8 ]  000202fc          *   0000000a   rts55x.lib : _lock.obj (.cinit)
                 [ 0004060c ]  00020306          *   0000000a              : exit.obj (.cinit)
                 [ 00040620 ]  00020310          *   00000009   flash.obj (.cinit)
                 [ 00040632 ]  00020319          *   00000008   PollQ.obj (.cinit)
                 [ 00040642 ]  00020321          *   00000008   csl_i2s.obj (.cinit)
                 [ 00040652 ]  00020329          *   00000008   heap_2.obj (.cinit)
                 [ 00040662 ]  00020331          *   00000008   rtc.obj (.cinit)
                 [ 00040672 ]  00020339          *   00000004   flop.obj (.cinit)
                 [ 0004067a ]  0002033d          *   00000004   i2s.obj (.cinit)
                 [ 00040682 ]  00020341          *   00000004   integer.obj (.cinit)
                 [ 0004068a ]  00020345          *   00000004   rts55x.lib : fopen.obj (.cinit)
                 [ 00040692 ]  00020349          *   00000004              : memory.obj (.cinit)
                 [ 0004069a ]  0002034d          *   00000001   --HOLE-- [fill = 0]

.cio         0   [ 000406a0 ]  00020350          *   00000120   UNINITIALIZED
                 [ 000406a0 ]  00020350          *   00000120   rts55x.lib : trgmsg.obj (.cio)

.switch      0   [ 000408e0 ]  00020470          *   000000e0   
                 [ 000408e0 ]  00020470          *   00000022   csl_sdio.obj (.switch:_SDIO_eventDisable)
                 [ 00040924 ]  00020492          *   00000022   csl_sdio.obj (.switch:_SDIO_eventEnable)
                 [ 00040968 ]  000204b4          *   00000020   csl_dma.obj (.switch:_DMA_config)
                 [ 000409a8 ]  000204d4          *   00000020   csl_dma.obj (.switch:_DMA_getConfig)
                 [ 000409e8 ]  000204f4          *   00000020   csl_dma.obj (.switch:_DMA_reset)
                 [ 00040a28 ]  00020514          *   00000018   csl_usb.obj (.switch:_USB_coreEventProcessEp0)
                 [ 00040a58 ]  0002052c          *   00000014   rtc.obj (.switch:_NtoC)
                 [ 00040a80 ]  00020540          *   00000010   csl_msc.obj (.switch:_MSC_Bulk)

vectors      0     0004ce00  [ 00026700 ] 00000200          *   
                   0004ce00  [ 00026700 ] 00000100          *   rts55x.lib : vectors.obj (vectors)
                   0004cf00  [ 00026780 ] 00000100          *   vectors.obj (vectors)


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
ffffffff                .bss
ffffffff                .data
ffffffff                .text
0001fff8                C$$EXIT
000338fc                C$$IO$$
00034770                I$$LMPY
000346f5                I$$UDIV
0003470a                I$$UMOD
00025b50                _AC_Close
00025b8c                _AC_Ctrl
00025e20                _AC_GetactivityFlagStatus
00025e3c                _AC_GetsuspendFlagStatus
00025d84                _AC_Iso
00025908                _AC_Open
00025e54                _AC_initDescriptors
000263b8                _AC_reqGetCurrent
00026104                _AC_reqGetDescriptor
000264c0                _AC_reqGetMaximum
0002647c                _AC_reqGetMinimum
00026504                _AC_reqGetResolution
000262dc                _AC_reqSetCurrent
00026548                _AC_reqSetInterface
00030894                _AIC3254_init
            00004d78    _ATA_No_Swap
0002979c                _BlinkLED
            00005bc1    _Buf_Address
            00005c91    _Buf_day
            00005c8e    _Buf_hour
            00005c8b    _Buf_min
            00005c94    _Buf_month
            00005c88    _Buf_sec
            00005c97    _Buf_year
0001f55c                _CDC_Close
0001f598                _CDC_GetactivityFlagStatus
0001f5b0                _CDC_GetsuspendFlagStatus
0001f364                _CDC_Open
0001f388                _CDC_OpenFullspeed
0001f9c4                _CDC_bulkInHandler
0001f8c4                _CDC_bulkOutHandler
0001f5c8                _CDC_eventHandler
0001fcb4                _CDC_getData
0001fd44                _CDC_putData
00029780                _ConfigPort
            00005c9b    _Conunt_RTC
00024ba0                _DAT_close
00024d34                _DAT_copy
00025230                _DAT_fill
00024ac8                _DAT_open
00025740                _DAT_wait
            00005c16    _DBSTAT_RESTORE
            00005c13    _DBSTAT_SAVE
            00005658    _DMA_Count
            0000565b    _DMA_Done
0001db48                _DMA_close
0001db68                _DMA_config
0001e73c                _DMA_getConfig
0001f224                _DMA_getLastTransferType
0001da24                _DMA_init
0001da5c                _DMA_open
0001eec0                _DMA_reset
0001ecac                _DMA_start
0001edbc                _DMA_stop
0001f1ac                _DMA_swapWords
00033ae4                _EVM5515_UART_getChar
00033acc                _EVM5515_UART_putChar
00033e54                _EZDSP5535_GPIO_getInput
00033de8                _EZDSP5535_GPIO_init
00033e14                _EZDSP5535_GPIO_setDirection
00033e38                _EZDSP5535_GPIO_setOutput
00033c3c                _EZDSP5535_I2C_init
00033ca8                _EZDSP5535_I2C_read
00033c74                _EZDSP5535_I2C_reset
00033c80                _EZDSP5535_I2C_write
00033390                _EZDSP5535_I2S_close
00033290                _EZDSP5535_I2S_init
000332ec                _EZDSP5535_I2S_readLeft
00033350                _EZDSP5535_I2S_readRight
00033320                _EZDSP5535_I2S_writeLeft
00033374                _EZDSP5535_I2S_writeRight
00032120                _EZDSP5535_LED_getall
000320e8                _EZDSP5535_LED_init
0003221c                _EZDSP5535_LED_off
000321e4                _EZDSP5535_LED_on
00032174                _EZDSP5535_LED_setall
00032250                _EZDSP5535_LED_toggle
00032a88                _EZDSP5535_OSD9616_init
00032a3c                _EZDSP5535_OSD9616_multiSend
00032b6c                _EZDSP5535_OSD9616_printLetter
00032a14                _EZDSP5535_OSD9616_send
00032e00                _EZDSP5535_SAR_getKey
00032d38                _EZDSP5535_SAR_init
0002e654                _EZDSP5535_SDCARD_close
0002e244                _EZDSP5535_SDCARD_init
0002e5ec                _EZDSP5535_SDCARD_read
0002e620                _EZDSP5535_SDCARD_write
0002fc44                _EZDSP5535_SPIFLASH_erase
0002fb9c                _EZDSP5535_SPIFLASH_init
0002fd48                _EZDSP5535_SPIFLASH_read
0002fc00                _EZDSP5535_SPIFLASH_status
0002fdf8                _EZDSP5535_SPIFLASH_write
00033a5c                _EZDSP5535_UART_open
000322b0                _EZDSP5535_XF_get
000322a4                _EZDSP5535_XF_off
00032298                _EZDSP5535_XF_on
000322c0                _EZDSP5535_XF_toggle
000343f4                _EZDSP5535_init
000343ac                _EZDSP5535_wait
000343e0                _EZDSP5535_waitusec
            00005659    _Error_Count_L
            0000565a    _Error_Count_R
            00005c9a    _Flag_RTC
0002ba14                _GPIO_clearInt
0002b564                _GPIO_close
0002b588                _GPIO_config
0002b7c0                _GPIO_configBit
0002b908                _GPIO_disableInt
0002b988                _GPIO_enableInt
0002b610                _GPIO_getConfig
0002b520                _GPIO_open
0002b698                _GPIO_read
0002bb28                _GPIO_reset
0002baa0                _GPIO_statusBit
0002b71c                _GPIO_write
000303e8                _GPT_close
000304f8                _GPT_config
000304bc                _GPT_getCnt
000302a8                _GPT_open
0003036c                _GPT_reset
00030460                _GPT_start
00030490                _GPT_stop
000297d4                _GenerateAudioTone
            00005cfe    _GpioObj
0002e1e6                _HOSTclock
0002e17b                _HOSTclose
0002e0c6                _HOSTlseek
0002e027                _HOSTopen
0002df9a                _HOSTread
0002deec                _HOSTrename
0002de8e                _HOSTtime
0002de24                _HOSTunlink
0002dd97                _HOSTwrite
000266ac                _I2C_config
00027080                _I2C_eventDisable
00026f4c                _I2C_eventEnable
00026814                _I2C_getConfig
00027230                _I2C_getEventId
00026600                _I2C_init
00026d2c                _I2C_read
000271a0                _I2C_setCallback
000268ec                _I2C_setup
00026ae8                _I2C_write
            00005b61    _I2S_RCV_L
            00005b91    _I2S_RCV_R
00028ce4                _I2S_close
000288b8                _I2S_open
00028d90                _I2S_read
000291a4                _I2S_reset
000289fc                _I2S_setup
00029250                _I2S_transEnable
0002904c                _I2S_write
0002d86c                _IRQ_clear
0002d8d8                _IRQ_clearAll
0002d8e8                _IRQ_config
0002d9f8                _IRQ_disable
0002da78                _IRQ_disableAll
0002da88                _IRQ_enable
0002db84                _IRQ_getArg
0002d970                _IRQ_getConfig
0002dcd0                _IRQ_globalDisable
0002dcec                _IRQ_globalEnable
0002dd08                _IRQ_globalRestore
0002d7e4                _IRQ_init
0002dbfc                _IRQ_map
00033cd0                _IRQ_plug
0002db14                _IRQ_restore
0002dbc8                _IRQ_setArg
0002dc28                _IRQ_setVecs
0002dc5c                _IRQ_test
00029718                _InitSystem
0002ace0                _LCD_close
0002a990                _LCD_configDMA
0002a4c8                _LCD_init
0002a4f0                _LCD_open
0002a534                _LCD_setup
            00005d04    _LED_Blink_ctr
00029a60                _LED_Control
00029904                _LED_TaskBlue
00029a10                _LED_TaskGreen
0002993c                _LED_TaskRed
000299c8                _LED_TaskXF
00029a94                _LED_TaskXF2
            00005c17    _LOOP_BITS
00030134                _MEM_disablePartialRetentionMode
0002ffa8                _MEM_disableRetentionMode
0002ffec                _MEM_enablePartialRetentionMode
0002ff64                _MEM_enableRetentionMode
00030294                _MEM_getmSDRAMClock
0002ff60                _MEM_init
00030258                _MEM_setmSDRAMClock
00027d14                _MMC_busyStatusCheck
0001438c                _MMC_checkReadDmaDone
00010368                _MMC_clearResponse
00010248                _MMC_close
00027cfc                _MMC_commandReadyStatusCheck
00010aa0                _MMC_config
00027d08                _MMC_dataReadyStatusCheck
00010df0                _MMC_deselectCard
000108b8                _MMC_drrdy
00010900                _MMC_dxrdy
000106e0                _MMC_eventDisable
000104e4                _MMC_eventEnable
00027d30                _MMC_file_system_format
00027d58                _MMC_flushFat
00011a8c                _MMC_getCardCsd
00014164                _MMC_getCardStatus
00010b3c                _MMC_getConfig
00010330                _MMC_getNumberOfCards
00027d20                _MMC_getSerialID
00010988                _MMC_getStatus
00027d50                _MMC_get_date
00027d54                _MMC_get_mod_date
00027d4c                _MMC_get_mod_time
00027d48                _MMC_get_time
00010488                _MMC_ierDisable
00010444                _MMC_ierEnable
00010000                _MMC_init
0002724c                _MMC_initState
000104bc                _MMC_intEnable
00027670                _MMC_issueReadCommand
00010038                _MMC_open
000125bc                _MMC_read
00027a68                _MMC_readNSectors
00027910                _MMC_readNextNWords
0002782c                _MMC_readNextWord
0002789c                _MMC_readNextWord1
00027390                _MMC_readWriteControl
00027c18                _MMC_read_CID
00027c84                _MMC_read_CSD
00027d3c                _MMC_reset
00010948                _MMC_saveStatus
00010ec0                _MMC_selectCard
000116c8                _MMC_sendAllCID
00010bdc                _MMC_sendCmd
00010c90                _MMC_sendGoIdle
00011450                _MMC_sendOpCond
00013e2c                _MMC_setBlockLength
000102f0                _MMC_setCallBack
000102bc                _MMC_setCardPtr
00010288                _MMC_setCardType
00013c74                _MMC_setDataTransferCallback
00013cc4                _MMC_setDmaChanConfig
00013c14                _MMC_setDmaHandle
00013da4                _MMC_setEndianMode
000114f4                _MMC_setRca
00013ec4                _MMC_setWriteBlkEraseCnt
000109ec                _MMC_setupNative
00010d18                _MMC_stop
00012fd8                _MMC_write
00027b40                _MMC_writeNSectors
00027980                _MMC_writeSector
00027cf0                _MMC_writeSectorFlush
000153c4                _MSC_Bulk
00014fa0                _MSC_Close
000151cc                _MSC_Ctrl
00015c58                _MSC_ExecuteRead
0001604c                _MSC_ExecuteWrite
000154c0                _MSC_GetLunLockedStatus
000154f0                _MSC_GetactivityFlagStatus
0001550c                _MSC_GetsuspendFlagStatus
00016824                _MSC_HandlePreventAllowMediaRemoval
000169c8                _MSC_HandleReadCapacity
000159b4                _MSC_HandleStateWaitForCBW
00016600                _MSC_HandleTestUnitReady
00014c30                _MSC_Open
00014c54                _MSC_OpenFullspeed
00014fdc                _MSC_SetLunAttr
00016f24                _MSC_handleDataDirMisMatch
00016e50                _MSC_reqBotMscReset
00016c18                _MSC_reqGetDescriptor
00016ebc                _MSC_sendCswWithPhaseError
00022f98                _NAND_checkCommandStatus
0002316c                _NAND_disableHwECC
00023044                _NAND_enableHwECC
00022d84                _NAND_getBankInfo
00023878                _NAND_getIntrNum
00023758                _NAND_hasCacheProg
00023788                _NAND_hasCopyBack
000236f8                _NAND_hasRandomRead
00023728                _NAND_hasRandomWrite
000227d4                _NAND_init
00023960                _NAND_intrClear
00023818                _NAND_intrDisable
000237b8                _NAND_intrEnable
00023898                _NAND_intrReadAT
000238d8                _NAND_intrReadLT
0002391c                _NAND_intrReadWR
00022e84                _NAND_isStatusWriteProtected
00023254                _NAND_readECC
00023408                _NAND_readNBytes
00022f6c                _NAND_sendCommand
00023000                _NAND_setAddress
00022e48                _NAND_setLatchEnableOffset
00022868                _NAND_setup
0002351c                _NAND_writeNBytes
            00005c1e    _PC_REG_HIGH_RESTORE
            00005c20    _PC_REG_HIGH_SAVE
            00005c1f    _PC_REG_LOW_RESTORE
            00005c21    _PC_REG_LOW_SAVE
00030d74                _PLL_bypass
00030be8                _PLL_config
00030d0c                _PLL_enable
00030bb0                _PLL_init
00030dc4                _PLL_reset
0004cf00                _RST
00034454                _RTC_Isr
0002a3ac                _RTC_bcdToDec
00029cdc                _RTC_config
0002a36c                _RTC_decToBcd
0002a264                _RTC_eventDisable
0002a178                _RTC_eventEnable
00029dc8                _RTC_getConfig
00029fb0                _RTC_getDate
0002a318                _RTC_getEventId
00029ef4                _RTC_getTime
00029ca0                _RTC_reset
00029ff0                _RTC_setAlarm
0002a3ec                _RTC_setCallback
0002a47c                _RTC_setCompensation
00029f40                _RTC_setDate
0002a0c4                _RTC_setPeriodicInterval
00029e78                _RTC_setTime
00029cb0                _RTC_start
00029cd4                _RTC_stop
            000055f8    _RcvL_Sine
            00005628    _RcvR_Sine
0004ce00                _Reset
00028320                _SAR_A2DMeasParamSet
0002879c                _SAR_GPODirSet
00027e8c                _SAR_chanClose
00027f10                _SAR_chanConfig
00028210                _SAR_chanCycSet
00027e0c                _SAR_chanInit
00027e28                _SAR_chanOpen
00027ffc                _SAR_chanSetup
00027dec                _SAR_deInit
00027f88                _SAR_getConfig
00028878                _SAR_getStatus
00027d8c                _SAR_init
000282dc                _SAR_readData
00028260                _SAR_startConversion
00028294                _SAR_stopConversion
00017f38                _SDIO_clearResponse
000170ac                _SDIO_close
000170d4                _SDIO_config
00017b4c                _SDIO_deselectCard
000171ac                _SDIO_detectCard
00018310                _SDIO_eventDisable
000180e8                _SDIO_eventEnable
00017a84                _SDIO_getRca
00017da4                _SDIO_getResponse
0001807c                _SDIO_getSdioStatus
00018014                _SDIO_getStatus
00016fa0                _SDIO_init
00017518                _SDIO_initCard
00016fe0                _SDIO_open
00019028                _SDIO_readBlocks
000187a4                _SDIO_readBytes
00018578                _SDIO_readSingleByte
00018540                _SDIO_readWaitDisable
00018508                _SDIO_readWaitEnable
0001799c                _SDIO_resetCard
00017c0c                _SDIO_selectCard
00017cd0                _SDIO_sendCommand
0001993c                _SDIO_setClock
000198bc                _SDIO_setEndianMode
00019468                _SDIO_writeBlocks
00018be8                _SDIO_writeBytes
000186a4                _SDIO_writeSingleByte
00014260                _SD_configurePullup
00011ee0                _SD_getCardCsd
000118a0                _SD_sendAllCID
000115cc                _SD_sendRca
00013ff4                _SD_setBusWidth
0002c254                _SPI_close
0002c280                _SPI_config
0002c704                _SPI_dataTransaction
0002c508                _SPI_deInit
0002c1bc                _SPI_init
0002c220                _SPI_open
0002c534                _SPI_read
0002c618                _SPI_write
            00005c19    _STATUS0_HIGH
            00005c18    _STATUS0_LOW
            00005c1b    _STATUS1_HIGH
            00005c1a    _STATUS1_LOW
            00005c1d    _STATUS2_HIGH
            00005c1c    _STATUS2_LOW
00029790                _SYS_GlobalIntDisable
00029788                _SYS_GlobalIntEnable
            00005cec    _SarHandle
            00005ce8    _SarObj
            00005c04    _Ssave_xsp
            00005c06    _Ssave_xssp
00034534                _StartTimer0
00029ac0                _StartUpTask
00029b44                _TestTask1
            00005bd6    _TestTask1Handle
00029b78                _TestTask2
            00005bd8    _TestTask2Handle
00029bac                _TestTask3
            00005bda    _TestTask3Handle
00029be0                _TestTask4
            00005bdc    _TestTask4Handle
000344f0                _Timer0Init
            00005d14    _Timer0_Int_CTR
            00005d15    _Timer2_Int_CTR
00033164                _Timer_isr
00023fb0                _UART_config
000242f0                _UART_eventDisable
00024258                _UART_eventEnable
00024630                _UART_fgetc
00024758                _UART_fgets
000246d0                _UART_fputc
00024888                _UART_fputs
000249a0                _UART_getConfig
00024978                _UART_getEventId
00023a4c                _UART_init
00024380                _UART_read
000241c4                _UART_reset
0002420c                _UART_resetOff
00024a60                _UART_setCallback
00023b08                _UART_setup
000240b8                _UART_setupBaudRate
000244ac                _UART_write
0001b16c                _USB_abortAllTransaction
0001b00c                _USB_abortTransaction
0001aa68                _USB_bytesRemaining
0001ac70                _USB_clearEndptStall
0001b1c0                _USB_connectDev
0001b6e0                _USB_coreEventProcessEp0
0001b1f4                _USB_disconnectDev
0001aedc                _USB_epNumToHandle
0001b55c                _USB_findFifoSize
0001b504                _USB_getDataCountReadFromFifo
0001ae58                _USB_getEndptStall
0001a694                _USB_getEvents
0001b304                _USB_getFrameNo
0001b4b0                _USB_getMaxPower
0001b254                _USB_getRemoteWakeupStat
0001a77c                _USB_getSetupPacket
00019c58                _USB_init
0001a2ac                _USB_initEndptObj
0001b3d0                _USB_initPLL
0001a9e0                _USB_isTransactionDone
0001b26c                _USB_issueRemoteWakeup
0001a70c                _USB_peekEvents
0001a824                _USB_postTransaction
0001a07c                _USB_resetDev
0001b364                _USB_selfwakeup
0001b2bc                _USB_setDevAddr
0001b4d0                _USB_setFullSpeedMode
0001b454                _USB_setParams
0001b224                _USB_setRemoteWakeup
0001aafc                _USB_stallEndpt
0001b320                _USB_suspendDevice
0004cf00                _VECSTART
00031480                _WDTIM_close
000314f8                _WDTIM_config
00031450                _WDTIM_getCnt
00031564                _WDTIM_getConfig
00031348                _WDTIM_open
000314c4                _WDTIM_service
000313c0                _WDTIM_start
00031408                _WDTIM_stop
            00005538    _XmitL_Sine_1K
            00005568    _XmitL_Sine_2K
            00005598    _XmitR_Sine_1K
            000055c8    _XmitR_Sine_2K
            00020350    __CIOBUF_
            00001060    __STACK_END
00002000                __STACK_SIZE
00005000                __SYSMEM_SIZE
00001000                __SYSSTACK_SIZE
00000001                __TI_args_main
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
            00020000    ___cinit__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
00034742                ___isinf
ffffffff                ___pinit__
ffffffff                ___text__
0003180c                __addd
0003453c                __args_main
000311e9                __cleanup
            00005d0e    __cleanup_ptr
00032471                __cmpd
            00006060    __ctypes_
0002f7ce                __divd
000345d2                __divli
000317d7                __divlli
000346f5                __divu
00033afe                __divul
000316e3                __divull
0001ff35                __doflush
            00005d10    __dtors_ptr
0003243d                __eqld
000346cb                __fixdi
00034144                __fixdli
0003428b                __fltlid
000347c7                __fltud
0003434e                __fltuld
00033fe9                __frcmpyd
0003405f                __frcmpyd_div
            00005774    __ft_end
            0000565c    __ftable
000323f3                __geqd
000323a8                __gtrd
0003235b                __leqd
            00005d0a    __lock
00032313                __lssd
00033017                __mpyd
00034770                __mpyli
0003162b                __mpylli
000347b7                __negd
000322df                __neqd
00034793                __nop
00021362                __printfi
000337ea                __rd_ok
0003478b                __register_lock
00034783                __register_unlock
00034587                __remli
000315fc                __remlli
0003470a                __remu
000340d2                __remul
000315ae                __remull
            00000060    __stack
0003475c                __subd
            0001a3f0    __sys_memory
            00001060    __sysstack
            000056d4    __tmpnams
            00005d0c    __unlock
0003376a                __wrt_ok
0001fff7                _abort
0002d6f2                _add_device
000342f2                _atoi
000344a2                _auto_init
00029974                _blueLedToggle
            00005bc8    _blueTaskHandle
00034697                _c_int00
            00004d70    _cached_phySector0
            00004d72    _cached_phySector1
            00004d74    _cached_phySector2
            00004d76    _cached_phySector3
0002eba8                _calloc
            000059ea    _cardAddr
0002eba0                _chkheap
0002d67f                _close
            00005c02    _context_switch_counter
            00005bd2    _controlTaskHandle
00033570                _convert_number_to_string
00031090                _disable_i2s0
0003109e                _disable_i2s1
000310ac                _disable_i2s2
000310ba                _disable_i2s3
0001c0d0                _eTaskGetState
000320d8                _enable_dma_int
00031058                _enable_i2s0
00031066                _enable_i2s1
00031074                _enable_i2s2
00031082                _enable_i2s3
000334a8                _enable_rtc_second_int
00034659                _exit
            00005bc3    _f1KToneOn
            00005bc4    _f2KToneOn
            00005bc2    _fSineWave
            00005d12    _fTimer
            00005d13    _fTimer02
00033f6e                _fclose
0001ff9e                _fflush
0002d676                _find_registered_device
            00005c03    _first_flag
            00005c08    _first_save_xsp
            00005c0a    _first_save_xssp
0003130c                _fopen
000339b3                _fputc
00032eb4                _fputs
0002e719                _free
0002eb4a                _free_memory
00031243                _freopen
            00005c4f    _fsError
00034220                _fseek
            00005452    _gBulkInTransfer
            00005460    _gBulkOutTransfer
            00005444    _gCtrlTransfer
            00005498    _gEpStatus
            00005c9c    _gI2cObj
            0000548a    _gIntInTransfer
            0000546e    _gIsoInTransfer
            0000547c    _gIsoOutTransfer
            0000496e    _gNextPhySector
            0000486c    _gReadBuf
            0000537c    _gUsbContext
            00005528    _gUsbEpHandle
            0000496c    _gWordCount
            00004970    _gWriteBuf
0002dd1c                _getenv
            00005bcc    _greenTaskHandle
            00005d00    _hGpio
            0000486a    _hI2s
            00005886    _hSpi
            00005c86    _hUart
            00005cac    _i2cHandle
00030e30                _i2s0_read_CR
00030e78                _i2s0_read_INTR
00030e7e                _i2s0_read_INT_MASK
00030e8a                _i2s0_read_RXL_LSW
00030e96                _i2s0_read_RXL_MSW
00030ea2                _i2s0_read_RXR_LSW
00030eae                _i2s0_read_RXR_MSW
00030e3c                _i2s0_read_SRGR
00030e48                _i2s0_read_TXL_LSW
00030e54                _i2s0_read_TXL_MSW
00030e60                _i2s0_read_TXR_LSW
00030e6c                _i2s0_read_TXR_MSW
00030e36                _i2s0_write_CR
00030e84                _i2s0_write_INT_MASK
00030e90                _i2s0_write_RXL_LSW
00030e9c                _i2s0_write_RXL_MSW
00030ea8                _i2s0_write_RXR_LSW
00030eb4                _i2s0_write_RXR_MSW
00030e42                _i2s0_write_SRGR
00030e4e                _i2s0_write_TXL_LSW
00030e5a                _i2s0_write_TXL_MSW
00030e66                _i2s0_write_TXR_LSW
00030e72                _i2s0_write_TXR_MSW
00030eba                _i2s1_read_CR
00030f02                _i2s1_read_INTR
00030f08                _i2s1_read_INT_MASK
00030f14                _i2s1_read_RXL_LSW
00030f20                _i2s1_read_RXL_MSW
00030f2c                _i2s1_read_RXR_LSW
00030f38                _i2s1_read_RXR_MSW
00030ec6                _i2s1_read_SRGR
00030ed2                _i2s1_read_TXL_LSW
00030ede                _i2s1_read_TXL_MSW
00030eea                _i2s1_read_TXR_LSW
00030ef6                _i2s1_read_TXR_MSW
00030ec0                _i2s1_write_CR
00030f0e                _i2s1_write_INT_MASK
00030f1a                _i2s1_write_RXL_LSW
00030f26                _i2s1_write_RXL_MSW
00030f32                _i2s1_write_RXR_LSW
00030f3e                _i2s1_write_RXR_MSW
00030ecc                _i2s1_write_SRGR
00030ed8                _i2s1_write_TXL_LSW
00030ee4                _i2s1_write_TXL_MSW
00030ef0                _i2s1_write_TXR_LSW
00030efc                _i2s1_write_TXR_MSW
00030f44                _i2s2_read_CR
00030f8c                _i2s2_read_INTR
00030f92                _i2s2_read_INT_MASK
00030f9e                _i2s2_read_RXL_LSW
00030faa                _i2s2_read_RXL_MSW
00030fb6                _i2s2_read_RXR_LSW
00030fc2                _i2s2_read_RXR_MSW
00030f50                _i2s2_read_SRGR
00030f5c                _i2s2_read_TXL_LSW
00030f68                _i2s2_read_TXL_MSW
00030f74                _i2s2_read_TXR_LSW
00030f80                _i2s2_read_TXR_MSW
00030f4a                _i2s2_write_CR
00030f98                _i2s2_write_INT_MASK
00030fa4                _i2s2_write_RXL_LSW
00030fb0                _i2s2_write_RXL_MSW
00030fbc                _i2s2_write_RXR_LSW
00030fc8                _i2s2_write_RXR_MSW
00030f56                _i2s2_write_SRGR
00030f62                _i2s2_write_TXL_LSW
00030f6e                _i2s2_write_TXL_MSW
00030f7a                _i2s2_write_TXR_LSW
00030f86                _i2s2_write_TXR_MSW
00030fce                _i2s3_read_CR
00031016                _i2s3_read_INTR
0003101c                _i2s3_read_INT_MASK
00031028                _i2s3_read_RXL_LSW
00031034                _i2s3_read_RXL_MSW
00031040                _i2s3_read_RXR_LSW
0003104c                _i2s3_read_RXR_MSW
00030fda                _i2s3_read_SRGR
00030fe6                _i2s3_read_TXL_LSW
00030ff2                _i2s3_read_TXL_MSW
00030ffe                _i2s3_read_TXR_LSW
0003100a                _i2s3_read_TXR_MSW
00030fd4                _i2s3_write_CR
00031022                _i2s3_write_INT_MASK
0003102e                _i2s3_write_RXL_LSW
0003103a                _i2s3_write_RXL_MSW
00031046                _i2s3_write_RXR_LSW
00031052                _i2s3_write_RXR_MSW
00030fe0                _i2s3_write_SRGR
00030fec                _i2s3_write_TXL_LSW
00030ff8                _i2s3_write_TXL_MSW
00031004                _i2s3_write_TXR_LSW
00031010                _i2s3_write_TXR_MSW
            00005cee    _keyCnt1
            00005cef    _keyCnt2
            00005cf6    _led_tsk_ctr
            00005bc6    _led_tsks_running
0002d610                _lseek
00033ef1                _ltoa
0002929c                _main
0002e84a                _malloc
0002eaf0                _max_free
            00004d79    _mem
00033904                _mem_test
0003471f                _memccpy
0003461a                _memcpy
00034795                _memset
0002e7e5                _minit
            0000599a    _mmcCardObj
            000059ec    _mmcStatus
            00005998    _mmcsdHandle
            0000496d    _nbuf_cached
0002ad00                _oled_test
0002d551                _open
            00005c50    _ouError
            00005958    _pMmcsdContObj
00022718                _pcQueueGetName
0001c87c                _pcTaskGetName
            00005bf8    _portFLAGS_INT_ENABLED
            00005bf9    _portFLAGS_INT_ENABLED_POPPED
            00005ceb    _preKey
00034402                _printf
0003268c                _prvSetupTimerInterrupt
000339b3                _putc
00033a4a                _putchar
00032fe9                _puts
00031ca0                _pvPortMalloc
0001d320                _pvTaskIncrementMutexHeldCount
            00005a76    _pxCurrentTCB
000324cc                _pxPortInitialiseStack
0002d4a3                _read
000341b3                _readmsg
0002e93f                _realloc
0002999c                _redLedToggle
            00005bca    _redTaskHandle
000347d5                _remove
0002d46d                _remove_device
0002d414                _rename
000334b4                _reset_RTC
            00005bfe    _save_ac0
            00005c00    _save_ac1
            00005c10    _save_new_pxcode
            00005c11    _save_new_pxlcode
            00005c0e    _save_xar6
            00005c0c    _save_xar7
            00005bfa    _save_xsp
            00005bfc    _save_xssp
            000059c8    _sdCardCsdObj
            000059b8    _sdCardIdObj
00031f94                _set_dma0_ch0_i2s0_Lout
00031ee0                _set_dma0_ch0_stop
0003206c                _set_dma0_ch1_i2s0_Rout
00031f10                _set_dma0_ch1_stop
00031f28                _set_dma1_ch0_i2s2_Lout
00031ec8                _set_dma1_ch0_stop
00032000                _set_dma1_ch1_i2s2_Rout
00031ef8                _set_dma1_ch1_stop
00033d90                _set_i2s0_master
00033dc4                _set_i2s0_slave
00033d5c                _set_i2s2_master
000335a4                _setvbuf
00032bac                _spiflash_test
            00005a74    _stackStruct
            00005bd4    _startUpTaskHandle
000347a6                _strlen
            0000537b    _sysCtrlRegs
00029860                _systemInit
            00005c23    _tOne
            00005c25    _tThree
            00005c24    _tTwo
            00005c22    _tZero
            00005c12    _tickIRQctr
            00005c72    _uartObj
            00005bea    _ulIdleLoops
0001d340                _ulTaskNotifyTake
0002d3e1                _unlink
            00005c26    _usCriticalNesting
            0000537a    _usbRegisters
000329b0                _uxListRemove
0002229c                _uxQueueMessagesWaiting
00022334                _uxQueueMessagesWaitingFromISR
000222e4                _uxQueueSpacesAvailable
0001c874                _uxTaskGetNumberOfTasks
0001cf04                _uxTaskGetStackHighWaterMark
0001c1b4                _uxTaskPriorityGet
0001c1fc                _uxTaskPriorityGetFromISR
0001d2f0                _uxTaskResetEventItemValue
000296e4                _vApplicationIdleHook
000298ec                _vApplicationMallocFailedHook
000298f4                _vApplicationStackOverflowHook
0002c778                _vCreateBlockTimeTasks
0002d250                _vEventGroupClearBitsCallback
0002d1dc                _vEventGroupDelete
0002d23c                _vEventGroupSetBitsCallback
00032864                _vListInitialise
000328a8                _vListInitialiseItem
00032910                _vListInsert
000328bc                _vListInsertEnd
00033ba0                _vParTestInitialise
00033ba4                _vParTestSetLED
00033bbc                _vParTestToggleLED
00032688                _vPortEndScheduler
00031dec                _vPortFree
00031e7c                _vPortInitialiseBlocks
0002bfba                _vPortYield
000226b8                _vQueueAddToRegistry
00022354                _vQueueDelete
00031bc4                _vQueueOverwritePeriodicISRDemo
00022774                _vQueueUnregisterQueue
0002f000                _vStartDynamicPriorityTasks
000333a4                _vStartIntegerMathTasks
0003368c                _vStartLEDFlashTasks
0002f3fc                _vStartMathTasks
000326a0                _vStartPolledQueueTasks
00031a68                _vStartQueueOverwriteTask
0002ebd0                _vStartQueuePeekTasks
000305a0                _vStartSemaphoreTasks
0001c090                _vTaskDelay
0001bfcc                _vTaskDelayUntil
0001bef4                _vTaskDelete
0001c6dc                _vTaskEndScheduler
0001d290                _vTaskEnterCritical
0001d2b8                _vTaskExitCritical
0001ccc8                _vTaskInternalSetTimeOutState
0001cdb0                _vTaskMissedYield
0001d830                _vTaskNotifyGiveFromISR
0001caa4                _vTaskPlaceOnEventList
0001cad4                _vTaskPlaceOnUnorderedEventList
0001d180                _vTaskPriorityDisinheritAfterTimeout
0001c220                _vTaskPrioritySet
0001cbd4                _vTaskRemoveFromUnorderedEventList
0001c510                _vTaskResume
0001cc74                _vTaskSetTimeOutState
0001c670                _vTaskStartScheduler
0001c390                _vTaskSuspend
0001c6f0                _vTaskSuspendAll
0001ca04                _vTaskSwitchContext
0002bd03                _vTickISR
            00005a72    _wall_clk_ctr
0002d29f                _write
00033847                _writemsg
0002ccdc                _xAreBlockTimeTestTasksStillRunning
0002f39c                _xAreDynamicPriorityTasksStillRunning
00033478                _xAreIntegerMathsTaskStillRunning
0002f794                _xAreMathsTaskStillRunning
00032838                _xArePollingQueuesStillRunning
0002efc8                _xAreQueuePeekTasksStillRunning
00030844                _xAreSemaphoreTasksStillRunning
            00005c14    _xCompareTCB
0002d00c                _xEventGroupClearBits
0002cd2c                _xEventGroupCreate
0002d084                _xEventGroupGetBitsFromISR
0002d0a4                _xEventGroupSetBits
0002cd54                _xEventGroupSync
0002cea0                _xEventGroupWaitBits
            00005cc6    _xHighPriorityTask
            00005cc8    _xHighestPriorityTask
00031b94                _xIsQueueOverwriteTaskStillRunning
            00005cc4    _xMediumPriorityTask
00031e74                _xPortGetFreeHeapSize
0002bbb8                _xPortStartScheduler
00021818                _xQueueCreateCountingSemaphore
0002174c                _xQueueCreateMutex
00021678                _xQueueGenericCreate
000215a4                _xQueueGenericReset
00021860                _xQueueGenericSend
00021a34                _xQueueGenericSendFromISR
00021b0c                _xQueueGiveFromISR
0002176c                _xQueueGiveMutexRecursive
00022614                _xQueueIsQueueEmptyFromISR
00022688                _xQueueIsQueueFullFromISR
00021fb4                _xQueuePeek
0002221c                _xQueuePeekFromISR
00021bd0                _xQueueReceive
00022168                _xQueueReceiveFromISR
            00005c52    _xQueueRegistry
00021d80                _xQueueSemaphoreTake
000217c4                _xQueueTakeMutexRecursive
            00005be0    _xSemaphoreB
            00005be8    _xSemaphoreBaton
            00005be4    _xSemaphoreO
            00005bde    _xSemaphoreR
            00005be6    _xSemaphoreXF
            00005be2    _xSemaphoreY
            00005cb8    _xSuspendedTestQueue
0001cce8                _xTaskCheckForTimeOut
0001bb9c                _xTaskCreate
0001d510                _xTaskGenericNotify
0001d69c                _xTaskGenericNotifyFromISR
0001cf9c                _xTaskGetCurrentTaskHandle
0001c820                _xTaskGetTickCount
0001c85c                _xTaskGetTickCountFromISR
0001c8a4                _xTaskIncrementTick
0001d914                _xTaskNotifyStateClear
0001d414                _xTaskNotifyWait
0001d0bc                _xTaskPriorityDisinherit
0001cfb0                _xTaskPriorityInherit
0001cb2c                _xTaskRemoveFromEventList
0001c6fc                _xTaskResumeAll
0001c5d0                _xTaskResumeFromISR
            00005bd0    _xf2TaskHandle
            00005bce    _xfTaskHandle
ffffffff                binit
            00020000    cinit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit
00033e72                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000001                __TI_args_main
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
            00000060    __stack
00001000                __SYSSTACK_SIZE
00002000                __STACK_SIZE
            00001060    __STACK_END
            00001060    __sysstack
00005000                __SYSMEM_SIZE
            0000486a    _hI2s
            0000486c    _gReadBuf
            0000496c    _gWordCount
            0000496d    _nbuf_cached
            0000496e    _gNextPhySector
            00004970    _gWriteBuf
            00004d70    _cached_phySector0
            00004d72    _cached_phySector1
            00004d74    _cached_phySector2
            00004d76    _cached_phySector3
            00004d78    _ATA_No_Swap
            00004d79    _mem
            0000537a    _usbRegisters
            0000537b    _sysCtrlRegs
            0000537c    _gUsbContext
            00005444    _gCtrlTransfer
            00005452    _gBulkInTransfer
            00005460    _gBulkOutTransfer
            0000546e    _gIsoInTransfer
            0000547c    _gIsoOutTransfer
            0000548a    _gIntInTransfer
            00005498    _gEpStatus
            00005528    _gUsbEpHandle
            00005538    _XmitL_Sine_1K
            00005568    _XmitL_Sine_2K
            00005598    _XmitR_Sine_1K
            000055c8    _XmitR_Sine_2K
            000055f8    _RcvL_Sine
            00005628    _RcvR_Sine
            00005658    _DMA_Count
            00005659    _Error_Count_L
            0000565a    _Error_Count_R
            0000565b    _DMA_Done
            0000565c    __ftable
            000056d4    __tmpnams
            00005774    __ft_end
            00005886    _hSpi
            00005958    _pMmcsdContObj
            00005998    _mmcsdHandle
            0000599a    _mmcCardObj
            000059b8    _sdCardIdObj
            000059c8    _sdCardCsdObj
            000059ea    _cardAddr
            000059ec    _mmcStatus
            00005a72    _wall_clk_ctr
            00005a74    _stackStruct
            00005a76    _pxCurrentTCB
            00005b61    _I2S_RCV_L
            00005b91    _I2S_RCV_R
            00005bc1    _Buf_Address
            00005bc2    _fSineWave
            00005bc3    _f1KToneOn
            00005bc4    _f2KToneOn
            00005bc6    _led_tsks_running
            00005bc8    _blueTaskHandle
            00005bca    _redTaskHandle
            00005bcc    _greenTaskHandle
            00005bce    _xfTaskHandle
            00005bd0    _xf2TaskHandle
            00005bd2    _controlTaskHandle
            00005bd4    _startUpTaskHandle
            00005bd6    _TestTask1Handle
            00005bd8    _TestTask2Handle
            00005bda    _TestTask3Handle
            00005bdc    _TestTask4Handle
            00005bde    _xSemaphoreR
            00005be0    _xSemaphoreB
            00005be2    _xSemaphoreY
            00005be4    _xSemaphoreO
            00005be6    _xSemaphoreXF
            00005be8    _xSemaphoreBaton
            00005bea    _ulIdleLoops
            00005bf8    _portFLAGS_INT_ENABLED
            00005bf9    _portFLAGS_INT_ENABLED_POPPED
            00005bfa    _save_xsp
            00005bfc    _save_xssp
            00005bfe    _save_ac0
            00005c00    _save_ac1
            00005c02    _context_switch_counter
            00005c03    _first_flag
            00005c04    _Ssave_xsp
            00005c06    _Ssave_xssp
            00005c08    _first_save_xsp
            00005c0a    _first_save_xssp
            00005c0c    _save_xar7
            00005c0e    _save_xar6
            00005c10    _save_new_pxcode
            00005c11    _save_new_pxlcode
            00005c12    _tickIRQctr
            00005c13    _DBSTAT_SAVE
            00005c14    _xCompareTCB
            00005c16    _DBSTAT_RESTORE
            00005c17    _LOOP_BITS
            00005c18    _STATUS0_LOW
            00005c19    _STATUS0_HIGH
            00005c1a    _STATUS1_LOW
            00005c1b    _STATUS1_HIGH
            00005c1c    _STATUS2_LOW
            00005c1d    _STATUS2_HIGH
            00005c1e    _PC_REG_HIGH_RESTORE
            00005c1f    _PC_REG_LOW_RESTORE
            00005c20    _PC_REG_HIGH_SAVE
            00005c21    _PC_REG_LOW_SAVE
            00005c22    _tZero
            00005c23    _tOne
            00005c24    _tTwo
            00005c25    _tThree
            00005c26    _usCriticalNesting
            00005c4f    _fsError
            00005c50    _ouError
            00005c52    _xQueueRegistry
            00005c72    _uartObj
            00005c86    _hUart
            00005c88    _Buf_sec
            00005c8b    _Buf_min
            00005c8e    _Buf_hour
            00005c91    _Buf_day
            00005c94    _Buf_month
            00005c97    _Buf_year
            00005c9a    _Flag_RTC
            00005c9b    _Conunt_RTC
            00005c9c    _gI2cObj
            00005cac    _i2cHandle
            00005cb8    _xSuspendedTestQueue
            00005cc4    _xMediumPriorityTask
            00005cc6    _xHighPriorityTask
            00005cc8    _xHighestPriorityTask
            00005ce8    _SarObj
            00005ceb    _preKey
            00005cec    _SarHandle
            00005cee    _keyCnt1
            00005cef    _keyCnt2
            00005cf6    _led_tsk_ctr
            00005cfe    _GpioObj
            00005d00    _hGpio
            00005d04    _LED_Blink_ctr
            00005d0a    __lock
            00005d0c    __unlock
            00005d0e    __cleanup_ptr
            00005d10    __dtors_ptr
            00005d12    _fTimer
            00005d13    _fTimer02
            00005d14    _Timer0_Int_CTR
            00005d15    _Timer2_Int_CTR
            00006060    __ctypes_
00010000                _MMC_init
00010038                _MMC_open
00010248                _MMC_close
00010288                _MMC_setCardType
000102bc                _MMC_setCardPtr
000102f0                _MMC_setCallBack
00010330                _MMC_getNumberOfCards
00010368                _MMC_clearResponse
00010444                _MMC_ierEnable
00010488                _MMC_ierDisable
000104bc                _MMC_intEnable
000104e4                _MMC_eventEnable
000106e0                _MMC_eventDisable
000108b8                _MMC_drrdy
00010900                _MMC_dxrdy
00010948                _MMC_saveStatus
00010988                _MMC_getStatus
000109ec                _MMC_setupNative
00010aa0                _MMC_config
00010b3c                _MMC_getConfig
00010bdc                _MMC_sendCmd
00010c90                _MMC_sendGoIdle
00010d18                _MMC_stop
00010df0                _MMC_deselectCard
00010ec0                _MMC_selectCard
00011450                _MMC_sendOpCond
000114f4                _MMC_setRca
000115cc                _SD_sendRca
000116c8                _MMC_sendAllCID
000118a0                _SD_sendAllCID
00011a8c                _MMC_getCardCsd
00011ee0                _SD_getCardCsd
000125bc                _MMC_read
00012fd8                _MMC_write
00013c14                _MMC_setDmaHandle
00013c74                _MMC_setDataTransferCallback
00013cc4                _MMC_setDmaChanConfig
00013da4                _MMC_setEndianMode
00013e2c                _MMC_setBlockLength
00013ec4                _MMC_setWriteBlkEraseCnt
00013ff4                _SD_setBusWidth
00014164                _MMC_getCardStatus
00014260                _SD_configurePullup
0001438c                _MMC_checkReadDmaDone
00014c30                _MSC_Open
00014c54                _MSC_OpenFullspeed
00014fa0                _MSC_Close
00014fdc                _MSC_SetLunAttr
000151cc                _MSC_Ctrl
000153c4                _MSC_Bulk
000154c0                _MSC_GetLunLockedStatus
000154f0                _MSC_GetactivityFlagStatus
0001550c                _MSC_GetsuspendFlagStatus
000159b4                _MSC_HandleStateWaitForCBW
00015c58                _MSC_ExecuteRead
0001604c                _MSC_ExecuteWrite
00016600                _MSC_HandleTestUnitReady
00016824                _MSC_HandlePreventAllowMediaRemoval
000169c8                _MSC_HandleReadCapacity
00016c18                _MSC_reqGetDescriptor
00016e50                _MSC_reqBotMscReset
00016ebc                _MSC_sendCswWithPhaseError
00016f24                _MSC_handleDataDirMisMatch
00016fa0                _SDIO_init
00016fe0                _SDIO_open
000170ac                _SDIO_close
000170d4                _SDIO_config
000171ac                _SDIO_detectCard
00017518                _SDIO_initCard
0001799c                _SDIO_resetCard
00017a84                _SDIO_getRca
00017b4c                _SDIO_deselectCard
00017c0c                _SDIO_selectCard
00017cd0                _SDIO_sendCommand
00017da4                _SDIO_getResponse
00017f38                _SDIO_clearResponse
00018014                _SDIO_getStatus
0001807c                _SDIO_getSdioStatus
000180e8                _SDIO_eventEnable
00018310                _SDIO_eventDisable
00018508                _SDIO_readWaitEnable
00018540                _SDIO_readWaitDisable
00018578                _SDIO_readSingleByte
000186a4                _SDIO_writeSingleByte
000187a4                _SDIO_readBytes
00018be8                _SDIO_writeBytes
00019028                _SDIO_readBlocks
00019468                _SDIO_writeBlocks
000198bc                _SDIO_setEndianMode
0001993c                _SDIO_setClock
00019c58                _USB_init
0001a07c                _USB_resetDev
0001a2ac                _USB_initEndptObj
0001a694                _USB_getEvents
0001a70c                _USB_peekEvents
0001a77c                _USB_getSetupPacket
0001a824                _USB_postTransaction
0001a9e0                _USB_isTransactionDone
0001aa68                _USB_bytesRemaining
0001aafc                _USB_stallEndpt
0001ac70                _USB_clearEndptStall
0001ae58                _USB_getEndptStall
0001aedc                _USB_epNumToHandle
0001b00c                _USB_abortTransaction
0001b16c                _USB_abortAllTransaction
0001b1c0                _USB_connectDev
0001b1f4                _USB_disconnectDev
0001b224                _USB_setRemoteWakeup
0001b254                _USB_getRemoteWakeupStat
0001b26c                _USB_issueRemoteWakeup
0001b2bc                _USB_setDevAddr
0001b304                _USB_getFrameNo
0001b320                _USB_suspendDevice
0001b364                _USB_selfwakeup
0001b3d0                _USB_initPLL
0001b454                _USB_setParams
0001b4b0                _USB_getMaxPower
0001b4d0                _USB_setFullSpeedMode
0001b504                _USB_getDataCountReadFromFifo
0001b55c                _USB_findFifoSize
0001b6e0                _USB_coreEventProcessEp0
0001bb9c                _xTaskCreate
0001bef4                _vTaskDelete
0001bfcc                _vTaskDelayUntil
0001c090                _vTaskDelay
0001c0d0                _eTaskGetState
0001c1b4                _uxTaskPriorityGet
0001c1fc                _uxTaskPriorityGetFromISR
0001c220                _vTaskPrioritySet
0001c390                _vTaskSuspend
0001c510                _vTaskResume
0001c5d0                _xTaskResumeFromISR
0001c670                _vTaskStartScheduler
0001c6dc                _vTaskEndScheduler
0001c6f0                _vTaskSuspendAll
0001c6fc                _xTaskResumeAll
0001c820                _xTaskGetTickCount
0001c85c                _xTaskGetTickCountFromISR
0001c874                _uxTaskGetNumberOfTasks
0001c87c                _pcTaskGetName
0001c8a4                _xTaskIncrementTick
0001ca04                _vTaskSwitchContext
0001caa4                _vTaskPlaceOnEventList
0001cad4                _vTaskPlaceOnUnorderedEventList
0001cb2c                _xTaskRemoveFromEventList
0001cbd4                _vTaskRemoveFromUnorderedEventList
0001cc74                _vTaskSetTimeOutState
0001ccc8                _vTaskInternalSetTimeOutState
0001cce8                _xTaskCheckForTimeOut
0001cdb0                _vTaskMissedYield
0001cf04                _uxTaskGetStackHighWaterMark
0001cf9c                _xTaskGetCurrentTaskHandle
0001cfb0                _xTaskPriorityInherit
0001d0bc                _xTaskPriorityDisinherit
0001d180                _vTaskPriorityDisinheritAfterTimeout
0001d290                _vTaskEnterCritical
0001d2b8                _vTaskExitCritical
0001d2f0                _uxTaskResetEventItemValue
0001d320                _pvTaskIncrementMutexHeldCount
0001d340                _ulTaskNotifyTake
0001d414                _xTaskNotifyWait
0001d510                _xTaskGenericNotify
0001d69c                _xTaskGenericNotifyFromISR
0001d830                _vTaskNotifyGiveFromISR
0001d914                _xTaskNotifyStateClear
0001da24                _DMA_init
0001da5c                _DMA_open
0001db48                _DMA_close
0001db68                _DMA_config
0001e73c                _DMA_getConfig
0001ecac                _DMA_start
0001edbc                _DMA_stop
0001eec0                _DMA_reset
0001f1ac                _DMA_swapWords
0001f224                _DMA_getLastTransferType
0001f364                _CDC_Open
0001f388                _CDC_OpenFullspeed
0001f55c                _CDC_Close
0001f598                _CDC_GetactivityFlagStatus
0001f5b0                _CDC_GetsuspendFlagStatus
0001f5c8                _CDC_eventHandler
0001f8c4                _CDC_bulkOutHandler
0001f9c4                _CDC_bulkInHandler
0001fcb4                _CDC_getData
0001fd44                _CDC_putData
0001ff35                __doflush
0001ff9e                _fflush
0001fff7                _abort
0001fff8                C$$EXIT
00021362                __printfi
000215a4                _xQueueGenericReset
00021678                _xQueueGenericCreate
0002174c                _xQueueCreateMutex
0002176c                _xQueueGiveMutexRecursive
000217c4                _xQueueTakeMutexRecursive
00021818                _xQueueCreateCountingSemaphore
00021860                _xQueueGenericSend
00021a34                _xQueueGenericSendFromISR
00021b0c                _xQueueGiveFromISR
00021bd0                _xQueueReceive
00021d80                _xQueueSemaphoreTake
00021fb4                _xQueuePeek
00022168                _xQueueReceiveFromISR
0002221c                _xQueuePeekFromISR
0002229c                _uxQueueMessagesWaiting
000222e4                _uxQueueSpacesAvailable
00022334                _uxQueueMessagesWaitingFromISR
00022354                _vQueueDelete
00022614                _xQueueIsQueueEmptyFromISR
00022688                _xQueueIsQueueFullFromISR
000226b8                _vQueueAddToRegistry
00022718                _pcQueueGetName
00022774                _vQueueUnregisterQueue
000227d4                _NAND_init
00022868                _NAND_setup
00022d84                _NAND_getBankInfo
00022e48                _NAND_setLatchEnableOffset
00022e84                _NAND_isStatusWriteProtected
00022f6c                _NAND_sendCommand
00022f98                _NAND_checkCommandStatus
00023000                _NAND_setAddress
00023044                _NAND_enableHwECC
0002316c                _NAND_disableHwECC
00023254                _NAND_readECC
00023408                _NAND_readNBytes
0002351c                _NAND_writeNBytes
000236f8                _NAND_hasRandomRead
00023728                _NAND_hasRandomWrite
00023758                _NAND_hasCacheProg
00023788                _NAND_hasCopyBack
000237b8                _NAND_intrEnable
00023818                _NAND_intrDisable
00023878                _NAND_getIntrNum
00023898                _NAND_intrReadAT
000238d8                _NAND_intrReadLT
0002391c                _NAND_intrReadWR
00023960                _NAND_intrClear
00023a4c                _UART_init
00023b08                _UART_setup
00023fb0                _UART_config
000240b8                _UART_setupBaudRate
000241c4                _UART_reset
0002420c                _UART_resetOff
00024258                _UART_eventEnable
000242f0                _UART_eventDisable
00024380                _UART_read
000244ac                _UART_write
00024630                _UART_fgetc
000246d0                _UART_fputc
00024758                _UART_fgets
00024888                _UART_fputs
00024978                _UART_getEventId
000249a0                _UART_getConfig
00024a60                _UART_setCallback
00024ac8                _DAT_open
00024ba0                _DAT_close
00024d34                _DAT_copy
00025230                _DAT_fill
00025740                _DAT_wait
00025908                _AC_Open
00025b50                _AC_Close
00025b8c                _AC_Ctrl
00025d84                _AC_Iso
00025e20                _AC_GetactivityFlagStatus
00025e3c                _AC_GetsuspendFlagStatus
00025e54                _AC_initDescriptors
00026104                _AC_reqGetDescriptor
000262dc                _AC_reqSetCurrent
000263b8                _AC_reqGetCurrent
0002647c                _AC_reqGetMinimum
000264c0                _AC_reqGetMaximum
00026504                _AC_reqGetResolution
00026548                _AC_reqSetInterface
00026600                _I2C_init
000266ac                _I2C_config
00026814                _I2C_getConfig
000268ec                _I2C_setup
00026ae8                _I2C_write
00026d2c                _I2C_read
00026f4c                _I2C_eventEnable
00027080                _I2C_eventDisable
000271a0                _I2C_setCallback
00027230                _I2C_getEventId
0002724c                _MMC_initState
00027390                _MMC_readWriteControl
00027670                _MMC_issueReadCommand
0002782c                _MMC_readNextWord
0002789c                _MMC_readNextWord1
00027910                _MMC_readNextNWords
00027980                _MMC_writeSector
00027a68                _MMC_readNSectors
00027b40                _MMC_writeNSectors
00027c18                _MMC_read_CID
00027c84                _MMC_read_CSD
00027cf0                _MMC_writeSectorFlush
00027cfc                _MMC_commandReadyStatusCheck
00027d08                _MMC_dataReadyStatusCheck
00027d14                _MMC_busyStatusCheck
00027d20                _MMC_getSerialID
00027d30                _MMC_file_system_format
00027d3c                _MMC_reset
00027d48                _MMC_get_time
00027d4c                _MMC_get_mod_time
00027d50                _MMC_get_date
00027d54                _MMC_get_mod_date
00027d58                _MMC_flushFat
00027d8c                _SAR_init
00027dec                _SAR_deInit
00027e0c                _SAR_chanInit
00027e28                _SAR_chanOpen
00027e8c                _SAR_chanClose
00027f10                _SAR_chanConfig
00027f88                _SAR_getConfig
00027ffc                _SAR_chanSetup
00028210                _SAR_chanCycSet
00028260                _SAR_startConversion
00028294                _SAR_stopConversion
000282dc                _SAR_readData
00028320                _SAR_A2DMeasParamSet
0002879c                _SAR_GPODirSet
00028878                _SAR_getStatus
000288b8                _I2S_open
000289fc                _I2S_setup
00028ce4                _I2S_close
00028d90                _I2S_read
0002904c                _I2S_write
000291a4                _I2S_reset
00029250                _I2S_transEnable
0002929c                _main
000296e4                _vApplicationIdleHook
00029718                _InitSystem
00029780                _ConfigPort
00029788                _SYS_GlobalIntEnable
00029790                _SYS_GlobalIntDisable
0002979c                _BlinkLED
000297d4                _GenerateAudioTone
00029860                _systemInit
000298ec                _vApplicationMallocFailedHook
000298f4                _vApplicationStackOverflowHook
00029904                _LED_TaskBlue
0002993c                _LED_TaskRed
00029974                _blueLedToggle
0002999c                _redLedToggle
000299c8                _LED_TaskXF
00029a10                _LED_TaskGreen
00029a60                _LED_Control
00029a94                _LED_TaskXF2
00029ac0                _StartUpTask
00029b44                _TestTask1
00029b78                _TestTask2
00029bac                _TestTask3
00029be0                _TestTask4
00029ca0                _RTC_reset
00029cb0                _RTC_start
00029cd4                _RTC_stop
00029cdc                _RTC_config
00029dc8                _RTC_getConfig
00029e78                _RTC_setTime
00029ef4                _RTC_getTime
00029f40                _RTC_setDate
00029fb0                _RTC_getDate
00029ff0                _RTC_setAlarm
0002a0c4                _RTC_setPeriodicInterval
0002a178                _RTC_eventEnable
0002a264                _RTC_eventDisable
0002a318                _RTC_getEventId
0002a36c                _RTC_decToBcd
0002a3ac                _RTC_bcdToDec
0002a3ec                _RTC_setCallback
0002a47c                _RTC_setCompensation
0002a4c8                _LCD_init
0002a4f0                _LCD_open
0002a534                _LCD_setup
0002a990                _LCD_configDMA
0002ace0                _LCD_close
0002ad00                _oled_test
0002b520                _GPIO_open
0002b564                _GPIO_close
0002b588                _GPIO_config
0002b610                _GPIO_getConfig
0002b698                _GPIO_read
0002b71c                _GPIO_write
0002b7c0                _GPIO_configBit
0002b908                _GPIO_disableInt
0002b988                _GPIO_enableInt
0002ba14                _GPIO_clearInt
0002baa0                _GPIO_statusBit
0002bb28                _GPIO_reset
0002bbb8                _xPortStartScheduler
0002bd03                _vTickISR
0002bfba                _vPortYield
0002c1bc                _SPI_init
0002c220                _SPI_open
0002c254                _SPI_close
0002c280                _SPI_config
0002c508                _SPI_deInit
0002c534                _SPI_read
0002c618                _SPI_write
0002c704                _SPI_dataTransaction
0002c778                _vCreateBlockTimeTasks
0002ccdc                _xAreBlockTimeTestTasksStillRunning
0002cd2c                _xEventGroupCreate
0002cd54                _xEventGroupSync
0002cea0                _xEventGroupWaitBits
0002d00c                _xEventGroupClearBits
0002d084                _xEventGroupGetBitsFromISR
0002d0a4                _xEventGroupSetBits
0002d1dc                _vEventGroupDelete
0002d23c                _vEventGroupSetBitsCallback
0002d250                _vEventGroupClearBitsCallback
0002d29f                _write
0002d3e1                _unlink
0002d414                _rename
0002d46d                _remove_device
0002d4a3                _read
0002d551                _open
0002d610                _lseek
0002d676                _find_registered_device
0002d67f                _close
0002d6f2                _add_device
0002d7e4                _IRQ_init
0002d86c                _IRQ_clear
0002d8d8                _IRQ_clearAll
0002d8e8                _IRQ_config
0002d970                _IRQ_getConfig
0002d9f8                _IRQ_disable
0002da78                _IRQ_disableAll
0002da88                _IRQ_enable
0002db14                _IRQ_restore
0002db84                _IRQ_getArg
0002dbc8                _IRQ_setArg
0002dbfc                _IRQ_map
0002dc28                _IRQ_setVecs
0002dc5c                _IRQ_test
0002dcd0                _IRQ_globalDisable
0002dcec                _IRQ_globalEnable
0002dd08                _IRQ_globalRestore
0002dd1c                _getenv
0002dd97                _HOSTwrite
0002de24                _HOSTunlink
0002de8e                _HOSTtime
0002deec                _HOSTrename
0002df9a                _HOSTread
0002e027                _HOSTopen
0002e0c6                _HOSTlseek
0002e17b                _HOSTclose
0002e1e6                _HOSTclock
0002e244                _EZDSP5535_SDCARD_init
0002e5ec                _EZDSP5535_SDCARD_read
0002e620                _EZDSP5535_SDCARD_write
0002e654                _EZDSP5535_SDCARD_close
0002e719                _free
0002e7e5                _minit
0002e84a                _malloc
0002e93f                _realloc
0002eaf0                _max_free
0002eb4a                _free_memory
0002eba0                _chkheap
0002eba8                _calloc
0002ebd0                _vStartQueuePeekTasks
0002efc8                _xAreQueuePeekTasksStillRunning
0002f000                _vStartDynamicPriorityTasks
0002f39c                _xAreDynamicPriorityTasksStillRunning
0002f3fc                _vStartMathTasks
0002f794                _xAreMathsTaskStillRunning
0002f7ce                __divd
0002fb9c                _EZDSP5535_SPIFLASH_init
0002fc00                _EZDSP5535_SPIFLASH_status
0002fc44                _EZDSP5535_SPIFLASH_erase
0002fd48                _EZDSP5535_SPIFLASH_read
0002fdf8                _EZDSP5535_SPIFLASH_write
0002ff60                _MEM_init
0002ff64                _MEM_enableRetentionMode
0002ffa8                _MEM_disableRetentionMode
0002ffec                _MEM_enablePartialRetentionMode
00030134                _MEM_disablePartialRetentionMode
00030258                _MEM_setmSDRAMClock
00030294                _MEM_getmSDRAMClock
000302a8                _GPT_open
0003036c                _GPT_reset
000303e8                _GPT_close
00030460                _GPT_start
00030490                _GPT_stop
000304bc                _GPT_getCnt
000304f8                _GPT_config
000305a0                _vStartSemaphoreTasks
00030844                _xAreSemaphoreTasksStillRunning
00030894                _AIC3254_init
00030bb0                _PLL_init
00030be8                _PLL_config
00030d0c                _PLL_enable
00030d74                _PLL_bypass
00030dc4                _PLL_reset
00030e30                _i2s0_read_CR
00030e36                _i2s0_write_CR
00030e3c                _i2s0_read_SRGR
00030e42                _i2s0_write_SRGR
00030e48                _i2s0_read_TXL_LSW
00030e4e                _i2s0_write_TXL_LSW
00030e54                _i2s0_read_TXL_MSW
00030e5a                _i2s0_write_TXL_MSW
00030e60                _i2s0_read_TXR_LSW
00030e66                _i2s0_write_TXR_LSW
00030e6c                _i2s0_read_TXR_MSW
00030e72                _i2s0_write_TXR_MSW
00030e78                _i2s0_read_INTR
00030e7e                _i2s0_read_INT_MASK
00030e84                _i2s0_write_INT_MASK
00030e8a                _i2s0_read_RXL_LSW
00030e90                _i2s0_write_RXL_LSW
00030e96                _i2s0_read_RXL_MSW
00030e9c                _i2s0_write_RXL_MSW
00030ea2                _i2s0_read_RXR_LSW
00030ea8                _i2s0_write_RXR_LSW
00030eae                _i2s0_read_RXR_MSW
00030eb4                _i2s0_write_RXR_MSW
00030eba                _i2s1_read_CR
00030ec0                _i2s1_write_CR
00030ec6                _i2s1_read_SRGR
00030ecc                _i2s1_write_SRGR
00030ed2                _i2s1_read_TXL_LSW
00030ed8                _i2s1_write_TXL_LSW
00030ede                _i2s1_read_TXL_MSW
00030ee4                _i2s1_write_TXL_MSW
00030eea                _i2s1_read_TXR_LSW
00030ef0                _i2s1_write_TXR_LSW
00030ef6                _i2s1_read_TXR_MSW
00030efc                _i2s1_write_TXR_MSW
00030f02                _i2s1_read_INTR
00030f08                _i2s1_read_INT_MASK
00030f0e                _i2s1_write_INT_MASK
00030f14                _i2s1_read_RXL_LSW
00030f1a                _i2s1_write_RXL_LSW
00030f20                _i2s1_read_RXL_MSW
00030f26                _i2s1_write_RXL_MSW
00030f2c                _i2s1_read_RXR_LSW
00030f32                _i2s1_write_RXR_LSW
00030f38                _i2s1_read_RXR_MSW
00030f3e                _i2s1_write_RXR_MSW
00030f44                _i2s2_read_CR
00030f4a                _i2s2_write_CR
00030f50                _i2s2_read_SRGR
00030f56                _i2s2_write_SRGR
00030f5c                _i2s2_read_TXL_LSW
00030f62                _i2s2_write_TXL_LSW
00030f68                _i2s2_read_TXL_MSW
00030f6e                _i2s2_write_TXL_MSW
00030f74                _i2s2_read_TXR_LSW
00030f7a                _i2s2_write_TXR_LSW
00030f80                _i2s2_read_TXR_MSW
00030f86                _i2s2_write_TXR_MSW
00030f8c                _i2s2_read_INTR
00030f92                _i2s2_read_INT_MASK
00030f98                _i2s2_write_INT_MASK
00030f9e                _i2s2_read_RXL_LSW
00030fa4                _i2s2_write_RXL_LSW
00030faa                _i2s2_read_RXL_MSW
00030fb0                _i2s2_write_RXL_MSW
00030fb6                _i2s2_read_RXR_LSW
00030fbc                _i2s2_write_RXR_LSW
00030fc2                _i2s2_read_RXR_MSW
00030fc8                _i2s2_write_RXR_MSW
00030fce                _i2s3_read_CR
00030fd4                _i2s3_write_CR
00030fda                _i2s3_read_SRGR
00030fe0                _i2s3_write_SRGR
00030fe6                _i2s3_read_TXL_LSW
00030fec                _i2s3_write_TXL_LSW
00030ff2                _i2s3_read_TXL_MSW
00030ff8                _i2s3_write_TXL_MSW
00030ffe                _i2s3_read_TXR_LSW
00031004                _i2s3_write_TXR_LSW
0003100a                _i2s3_read_TXR_MSW
00031010                _i2s3_write_TXR_MSW
00031016                _i2s3_read_INTR
0003101c                _i2s3_read_INT_MASK
00031022                _i2s3_write_INT_MASK
00031028                _i2s3_read_RXL_LSW
0003102e                _i2s3_write_RXL_LSW
00031034                _i2s3_read_RXL_MSW
0003103a                _i2s3_write_RXL_MSW
00031040                _i2s3_read_RXR_LSW
00031046                _i2s3_write_RXR_LSW
0003104c                _i2s3_read_RXR_MSW
00031052                _i2s3_write_RXR_MSW
00031058                _enable_i2s0
00031066                _enable_i2s1
00031074                _enable_i2s2
00031082                _enable_i2s3
00031090                _disable_i2s0
0003109e                _disable_i2s1
000310ac                _disable_i2s2
000310ba                _disable_i2s3
000311e9                __cleanup
00031243                _freopen
0003130c                _fopen
00031348                _WDTIM_open
000313c0                _WDTIM_start
00031408                _WDTIM_stop
00031450                _WDTIM_getCnt
00031480                _WDTIM_close
000314c4                _WDTIM_service
000314f8                _WDTIM_config
00031564                _WDTIM_getConfig
000315ae                __remull
000315fc                __remlli
0003162b                __mpylli
000316e3                __divull
000317d7                __divlli
0003180c                __addd
00031a68                _vStartQueueOverwriteTask
00031b94                _xIsQueueOverwriteTaskStillRunning
00031bc4                _vQueueOverwritePeriodicISRDemo
00031ca0                _pvPortMalloc
00031dec                _vPortFree
00031e74                _xPortGetFreeHeapSize
00031e7c                _vPortInitialiseBlocks
00031ec8                _set_dma1_ch0_stop
00031ee0                _set_dma0_ch0_stop
00031ef8                _set_dma1_ch1_stop
00031f10                _set_dma0_ch1_stop
00031f28                _set_dma1_ch0_i2s2_Lout
00031f94                _set_dma0_ch0_i2s0_Lout
00032000                _set_dma1_ch1_i2s2_Rout
0003206c                _set_dma0_ch1_i2s0_Rout
000320d8                _enable_dma_int
000320e8                _EZDSP5535_LED_init
00032120                _EZDSP5535_LED_getall
00032174                _EZDSP5535_LED_setall
000321e4                _EZDSP5535_LED_on
0003221c                _EZDSP5535_LED_off
00032250                _EZDSP5535_LED_toggle
00032298                _EZDSP5535_XF_on
000322a4                _EZDSP5535_XF_off
000322b0                _EZDSP5535_XF_get
000322c0                _EZDSP5535_XF_toggle
000322df                __neqd
00032313                __lssd
0003235b                __leqd
000323a8                __gtrd
000323f3                __geqd
0003243d                __eqld
00032471                __cmpd
000324cc                _pxPortInitialiseStack
00032688                _vPortEndScheduler
0003268c                _prvSetupTimerInterrupt
000326a0                _vStartPolledQueueTasks
00032838                _xArePollingQueuesStillRunning
00032864                _vListInitialise
000328a8                _vListInitialiseItem
000328bc                _vListInsertEnd
00032910                _vListInsert
000329b0                _uxListRemove
00032a14                _EZDSP5535_OSD9616_send
00032a3c                _EZDSP5535_OSD9616_multiSend
00032a88                _EZDSP5535_OSD9616_init
00032b6c                _EZDSP5535_OSD9616_printLetter
00032bac                _spiflash_test
00032d38                _EZDSP5535_SAR_init
00032e00                _EZDSP5535_SAR_getKey
00032eb4                _fputs
00032fe9                _puts
00033017                __mpyd
00033164                _Timer_isr
00033290                _EZDSP5535_I2S_init
000332ec                _EZDSP5535_I2S_readLeft
00033320                _EZDSP5535_I2S_writeLeft
00033350                _EZDSP5535_I2S_readRight
00033374                _EZDSP5535_I2S_writeRight
00033390                _EZDSP5535_I2S_close
000333a4                _vStartIntegerMathTasks
00033478                _xAreIntegerMathsTaskStillRunning
000334a8                _enable_rtc_second_int
000334b4                _reset_RTC
00033570                _convert_number_to_string
000335a4                _setvbuf
0003368c                _vStartLEDFlashTasks
0003376a                __wrt_ok
000337ea                __rd_ok
00033847                _writemsg
000338fc                C$$IO$$
00033904                _mem_test
000339b3                _fputc
000339b3                _putc
00033a4a                _putchar
00033a5c                _EZDSP5535_UART_open
00033acc                _EVM5515_UART_putChar
00033ae4                _EVM5515_UART_getChar
00033afe                __divul
00033ba0                _vParTestInitialise
00033ba4                _vParTestSetLED
00033bbc                _vParTestToggleLED
00033c3c                _EZDSP5535_I2C_init
00033c74                _EZDSP5535_I2C_reset
00033c80                _EZDSP5535_I2C_write
00033ca8                _EZDSP5535_I2C_read
00033cd0                _IRQ_plug
00033d5c                _set_i2s2_master
00033d90                _set_i2s0_master
00033dc4                _set_i2s0_slave
00033de8                _EZDSP5535_GPIO_init
00033e14                _EZDSP5535_GPIO_setDirection
00033e38                _EZDSP5535_GPIO_setOutput
00033e54                _EZDSP5535_GPIO_getInput
00033e72                reset_isr
00033ef1                _ltoa
00033f6e                _fclose
00033fe9                __frcmpyd
0003405f                __frcmpyd_div
000340d2                __remul
00034144                __fixdli
000341b3                _readmsg
00034220                _fseek
0003428b                __fltlid
000342f2                _atoi
0003434e                __fltuld
000343ac                _EZDSP5535_wait
000343e0                _EZDSP5535_waitusec
000343f4                _EZDSP5535_init
00034402                _printf
00034454                _RTC_Isr
000344a2                _auto_init
000344f0                _Timer0Init
00034534                _StartTimer0
0003453c                __args_main
00034587                __remli
000345d2                __divli
0003461a                _memcpy
00034659                _exit
00034697                _c_int00
000346cb                __fixdi
000346f5                I$$UDIV
000346f5                __divu
0003470a                I$$UMOD
0003470a                __remu
0003471f                _memccpy
00034742                ___isinf
0003475c                __subd
00034770                I$$LMPY
00034770                __mpyli
00034783                __register_unlock
0003478b                __register_lock
00034793                __nop
00034795                _memset
000347a6                _strlen
000347b7                __negd
000347c7                __fltud
000347d5                _remove
            0001a3f0    __sys_memory
            00020000    ___cinit__
            00020000    cinit
            00020350    __CIOBUF_
0004ce00                _Reset
0004cf00                _RST
0004cf00                _VECSTART
ffffffff                .bss
ffffffff                .data
ffffffff                .text
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
ffffffff                ___pinit__
ffffffff                ___text__
ffffffff                binit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit

[927 symbols]
