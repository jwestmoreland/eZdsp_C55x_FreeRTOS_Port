******************************************************************************
              TMS320C55x Linker PC v4.4.1                      
******************************************************************************
>> Linked Fri Sep 14 04:02:33 2018

OUTPUT FILE NAME:   <test.out>
ENTRY POINT SYMBOL: "_c_int00"  address: 0001374e


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
                        (bytes)   (bytes)    (bytes)   (bytes)
----------------------  --------  ---------  --------  --------  ----  --------
PAGE 0:
  MMR                   00000000   000000c0  00000000  000000c0  RWIX
  DARAM0                000000c0   0000ff40  0000dc66  000022da  RWIX
  SARAM0                00010000   00010000  0000388c  0000c774  RWIX
  SARAM1                00020000   00020000  0001fff0  00000010  RWIX
  SARAM2                00040000   0000cdda  000009bc  0000c41e  RWIX
  VECS                  0004ce00   00000200  00000200  00000000  RWIX
  PDROM                 00ff8000   00008000  00000000  00008000  R IX

PAGE 2:
  IOPORT                00000000   00020000  00000000  00020000  RWI 


SECTION ALLOCATION MAP
(Addresses surrounded by []'s are displayed for convenience only!)

output                                                          attributes/
section   page  orgn(bytes) orgn(words) len(bytes) len(words)   input sections
--------  ----  ----------- ----------- ---------- ----------   --------------
.pinit       0   [ 00040000 ]  00020000          *   00000000   UNINITIALIZED

.stack       0   [ 000000c0 ]  00000060          *   00001000   UNINITIALIZED
                 [ 000000c0 ]  00000060          *   00001000   --HOLE--

.data        0   [ 000000c0 ]  00000060          *   00000000   UNINITIALIZED

.sysstack 
*            0   [ 000020c0 ]  00001060          *   00000800   UNINITIALIZED
                 [ 000020c0 ]  00001060          *   00000800   --HOLE--

.bss.1       0   [ 000030c0 ]  00001860          *   0000250d   UNINITIALIZED
                 [ 000030c0 ]  00001860          *   0000138c   heap_1.obj (.bss)
                 [ 000057d8 ]  00002bec          *   0000050d   csl_mmcsd_ataIf.obj (.bss)
                 [ 000061f2 ]  000030f9          *   00000400   mem_test.obj (.bss)
                 [ 000069f2 ]  000034f9          *   00000200   spiflash_test.obj (.bss)
                 [ 00006df2 ]  000036f9          *   00000001   integer.obj (.bss)
                 [ 00006df4 ]  000036fa          *   000001be   csl_usb.obj (.bss)
                 [ 00007170 ]  000038b8          *   00000124   dma.obj (.bss)
                 [ 000073b8 ]  000039dc          *   00000119   rts55x.lib : defs.obj (.bss)
                 [ 000075ea ]  00003af5          *   00000001              : fopen.obj (.bss)
                 [ 000075ec ]  00003af6          *   00000112   ezdsp5535_spiflash.obj (.bss)
                 [ 00007810 ]  00003c08          *   000000d0   rts55x.lib : trgdrv.obj (.bss)
                 [ 000079b0 ]  00003cd8          *   00000095   ezdsp5535_sdcard.obj (.bss)

.bss.2       0   [ 00007adc ]  00003d6e          *   000000f7   UNINITIALIZED
                 [ 00007adc ]  00003d6e          *   00000084   csl_intc.obj (.bss)
                 [ 00007be4 ]  00003df2          *   00000073   tasks_sysStk.obj (.bss)

.bss.3       0   [ 00007ccc ]  00003e66          *   000001c1   UNINITIALIZED
                 [ 00007ccc ]  00003e66          *   00000071   rts55x.lib : lowlev.obj (.bss)
                 [ 00007dae ]  00003ed7          *   00000061   i2s.obj (.bss)
                 [ 00007e70 ]  00003f38          *   00000040   croutine.obj (.bss)
                 [ 00007ef0 ]  00003f78          *   0000002a   csl_i2s.obj (.bss)
                 [ 00007f44 ]  00003fa2          *   00000018   port.obj (.bss)
                 [ 00007f74 ]  00003fba          *   00000016   ezdsp5535_uart.obj (.bss)
                 [ 00007fa0 ]  00003fd0          *   00000014   rtc.obj (.bss)
                 [ 00007fc8 ]  00003fe4          *   00000012   csl_i2c.obj (.bss)
                 [ 00007fec ]  00003ff6          *   00000012   dynamic.obj (.bss)
                 [ 00008010 ]  00004008          *   0000000c   QPeek.obj (.bss)
                 [ 00008028 ]  00004014          *   0000000a   blocktim.obj (.bss)
                 [ 0000803c ]  0000401e          *   00000009   semtest.obj (.bss)

.bss.4       0   [ 00008050 ]  00004028          *   0000003f   UNINITIALIZED
                 [ 00008050 ]  00004028          *   00000008   QueueOverwrite.obj (.bss)
                 [ 00008060 ]  00004030          *   00000008   ezdsp5535_sar.obj (.bss)
                 [ 00008070 ]  00004038          *   00000006   main.obj (.bss)
                 [ 0000807c ]  0000403e          *   00000006   rts55x.lib : memory.obj (.bss)
                 [ 00008088 ]  00004044          *   00000004   ParTest.obj (.bss)
                 [ 00008090 ]  00004048          *   00000004   PollQ.obj (.bss)
                 [ 00008098 ]  0000404c          *   00000004   ezdsp5535_gpio.obj (.bss)
                 [ 000080a0 ]  00004050          *   00000004   flash.obj (.bss)
                 [ 000080a8 ]  00004054          *   00000004   flop.obj (.bss)
                 [ 000080b0 ]  00004058          *   00000004   rts55x.lib : _lock.obj (.bss)
                 [ 000080b8 ]  0000405c          *   00000004              : exit.obj (.bss)
                 [ 000080c0 ]  00004060          *   00000004   timer.obj (.bss)
                 [ 000080c8 ]  00004064          *   00000003   csl_spi.obj (.bss)

.bss.5       0   [ 000080d0 ]  00004068          *   00000002   UNINITIALIZED
                 [ 000080d0 ]  00004068          *   00000002   ezdsp5535_i2s.obj (.bss)

.sysmem      0   [ 000080d4 ]  0000406a          *   00002800   UNINITIALIZED
                 [ 000080d4 ]  0000406a          *   00002800   --HOLE--

.const.1     0   [ 0000d0d4 ]  0000686a          *   00000447   
                 [ 0000d0d4 ]  0000686a          *   00000346   ezdsp5535_sdcard.obj (.const:.string)
                 [ 0000d760 ]  00006bb0          *   00000101   rts55x.lib : ctype.obj (.const:__ctypes_)

.const.2     0   [ 0000d964 ]  00006cb2          *   00000081   
                 [ 0000d964 ]  00006cb2          *   00000081   csl_cdc.obj (.const:.string)

.const.3     0   [ 0000da68 ]  00006d34          *   0000005d   
                 [ 0000da68 ]  00006d34          *   0000005d   spiflash_test.obj (.const:.string)

.const.4     0   [ 0000db24 ]  00006d92          *   00000087   
                 [ 0000db24 ]  00006d92          *   00000028   dynamic.obj (.const:.string)
                 [ 0000db74 ]  00006dba          *   00000024   rts55x.lib : _printfi.obj (.const:.string)
                 [ 0000dbbc ]  00006dde          *   00000020   semtest.obj (.const:.string)
                 [ 0000dbfc ]  00006dfe          *   0000001b   QPeek.obj (.const:.string)

.const.5     0   [ 0000dc34 ]  00006e1a          *   0000004b   
                 [ 0000dc34 ]  00006e1a          *   00000018   flop.obj (.const:.string)
                 [ 0000dc64 ]  00006e32          *   00000014   flop.obj (.const)
                 [ 0000dc8c ]  00006e46          *   00000010   PollQ.obj (.const:.string)
                 [ 0000dcac ]  00006e56          *   0000000f   blocktim.obj (.const:.string)

.const.6     0   [ 0000dccc ]  00006e66          *   00000027   
                 [ 0000dccc ]  00006e66          *   0000000c   rts55x.lib : _printfi.obj (.const)
                 [ 0000dce4 ]  00006e72          *   00000008   integer.obj (.const:.string)
                 [ 0000dcf4 ]  00006e7a          *   00000008   rts55x.lib : divd.obj (.const:_initial_approx$1)
                 [ 0000dd04 ]  00006e82          *   00000006   QueueOverwrite.obj (.const:.string)
                 [ 0000dd10 ]  00006e88          *   00000005   flash.obj (.const:.string)

.const.7     0   [ 0000dd1c ]  00006e8e          *   00000009   
                 [ 0000dd1c ]  00006e8e          *   00000005   tasks_sysStk.obj (.const:.string)
                 [ 0000dd26 ]  00006e93          *   00000004   main.obj (.const:_$P$T0$2)

.const.8     0   [ 0000dd30 ]  00006e98          *   00000006   
                 [ 0000dd30 ]  00006e98          *   00000002   rts55x.lib : fputs.obj (.const:.string)
                 [ 0000dd34 ]  00006e9a          *   00000002              : fltlid.obj (.const)
                 [ 0000dd38 ]  00006e9c          *   00000002              : fltuld.obj (.const)

.text.1      0     00010000  [ 00008000 ] 00000c38          *   
                   00010000  [ 00008000 ] 00000298          *   i2s_register.obj (.text)
                   00010298  [ 0000814c ] 0000027f          *   rts55x.lib : fopen.obj (.text)
                   00010517  [ 0000828b ] 00000001          *   --HOLE-- [fill = 20]
                   00010518  [ 0000828c ] 00000266          *   csl_wdt.obj (.text)
                   0001077e  [ 000083bf ] 0000025e          *   rts55x.lib : llmpy.obj (.text)
                   000109dc  [ 000084ee ] 0000025a          *              : addd.obj (.text)
                   00010c36  [ 0000861b ] 00000002          *   --HOLE-- [fill = 20]

.text.2      0     00010c38  [ 0000861c ] 00000258          *   
                   00010c38  [ 0000861c ] 00000256          *   timer.obj (.text:retain)
                   00010e8e  [ 00008747 ] 00000002          *   --HOLE-- [fill = 20]

.text.3      0     00010e90  [ 00008748 ] 00000220          *   
                   00010e90  [ 00008748 ] 0000021e          *   dma.obj (.text)
                   000110ae  [ 00008857 ] 00000002          *   --HOLE-- [fill = 20]

.text.4      0     000110b0  [ 00008858 ] 0000021e          *   
                   000110b0  [ 00008858 ] 0000021d          *   QueueOverwrite.obj (.text)
                   000112cd  [ 00008966 ] 00000001          *   --HOLE-- [fill = 20]

.text.5      0     000112d0  [ 00008968 ] 000003e2          *   
                   000112d0  [ 00008968 ] 000001f7          *   ezdsp5535_led.obj (.text)
                   000114c7  [ 00008a63+] 000001ea          *   rts55x.lib : cmpd.obj (.text)
                   000116b1  [ 00008b58 ] 00000001          *   --HOLE-- [fill = 20]

.text.6      0     000116b4  [ 00008b5a ] 00000378          *   
                   000116b4  [ 00008b5a ] 000001c0          *   port.obj (.text)
                   00011874  [ 00008c3a ] 000001b6          *   PollQ.obj (.text)
                   00011a2a  [ 00008d15 ] 00000002          *   --HOLE-- [fill = 20]

.text.7      0     00011a2c  [ 00008d16 ] 000001b0          *   
                   00011a2c  [ 00008d16 ] 000001ae          *   list.obj (.text)
                   00011bda  [ 00008ded ] 00000002          *   --HOLE-- [fill = 20]

.text.8      0     00011bdc  [ 00008dee ] 00000196          *   
                   00011bdc  [ 00008dee ] 00000195          *   ezdsp5535_lcd.obj (.text)
                   00011d71  [ 00008eb8 ] 00000001          *   --HOLE-- [fill = 20]

.text.9      0     00011d74  [ 00008eba ] 0000043c          *   
                   00011d74  [ 00008eba ] 0000018b          *   spiflash_test.obj (.text)
                   00011eff  [ 00008f7f+] 00000163          *   rts55x.lib : fputs.obj (.text)
                   00012062  [ 00009031 ] 0000014c          *              : mpyd.obj (.text)
                   000121ae  [ 000090d7 ] 00000002          *   --HOLE-- [fill = 20]

.text.10     0     000121b0  [ 000090d8 ] 00000114          *   
                   000121b0  [ 000090d8 ] 00000112          *   ezdsp5535_i2s.obj (.text)
                   000122c2  [ 00009161 ] 00000002          *   --HOLE-- [fill = 20]

.text.11     0     000122c4  [ 00009162 ] 0000083e          *   
                   000122c4  [ 00009162 ] 00000104          *   integer.obj (.text)
                   000123c8  [ 000091e4 ] 000000fc          *   rtc.obj (.text)
                   000124c4  [ 00009262 ] 000000ea          *   flash.obj (.text)
                   000125ae  [ 000092d7 ] 000000e6          *   rts55x.lib : setvbuf.obj (.text)
                   00012694  [ 0000934a ] 000000dd          *              : _io_perm.obj (.text)
                   00012771  [ 000093b8+] 000000c2          *              : fflush.obj (.text)
                   00012833  [ 00009419 ] 00000001          *   --HOLE-- [fill = 20]
                   00012834  [ 0000941a ] 000000be          *   heap_1.obj (.text)
                   000128f2  [ 00009479 ] 000000ba          *   rts55x.lib : trgmsg.obj (.text:CIO_breakpoint)
                   000129ac  [ 000094d6 ] 000000af          *   mem_test.obj (.text)
                   00012a5b  [ 0000952d+] 000000a6          *   rts55x.lib : fputc.obj (.text)
                   00012b01  [ 00009580 ] 00000001          *   --HOLE-- [fill = 20]

.text.12     0     00012b04  [ 00009582 ] 000001e0          *   
                   00012b04  [ 00009582 ] 000000a2          *   ezdsp5535_uart.obj (.text)
                   00012ba6  [ 000095d3 ] 000000a1          *   rts55x.lib : divul.obj (.text)
                   00012c47  [ 00009623 ] 00000001          *   --HOLE-- [fill = 20]
                   00012c48  [ 00009624 ] 0000009a          *   ParTest.obj (.text)
                   00012ce2  [ 00009671 ] 00000002          *   --HOLE-- [fill = 20]

.text.13     0     00012ce4  [ 00009672 ] 00000714          *   
                   00012ce4  [ 00009672 ] 00000094          *   ezdsp5535_i2c.obj (.text)
                   00012d78  [ 000096bc ] 0000008c          *   csl_irqplug.obj (.text)
                   00012e04  [ 00009702 ] 0000008c          *   i2s.obj (.text)
                   00012e90  [ 00009748 ] 0000008a          *   ezdsp5535_gpio.obj (.text)
                   00012f1a  [ 0000978d ] 0000007f          *   vectors.obj (.text)
                   00012f99  [ 000097cc+] 0000007d          *   rts55x.lib : ltoa.obj (.text)
                   00013016  [ 0000980b ] 0000007b          *              : fclose.obj (.text)
                   00013091  [ 00009848+] 00000076          *              : frcmpyd.obj (.text)
                   00013107  [ 00009883+] 00000073          *              : frcmpyd_div.obj (.text)
                   0001317a  [ 000098bd ] 00000072          *              : remul.obj (.text)
                   000131ec  [ 000098f6 ] 0000006f          *              : fixdli.obj (.text)
                   0001325b  [ 0000992d+] 0000006d          *              : trgmsg.obj (.text)
                   000132c8  [ 00009964 ] 0000006b          *              : fseek.obj (.text)
                   00013333  [ 00009999+] 00000067          *              : fltlid.obj (.text)
                   0001339a  [ 000099cd ] 0000005c          *              : atoi.obj (.text)
                   000133f6  [ 000099fb ] 00000002          *   --HOLE-- [fill = 20]

.text.14     0     000133f8  [ 000099fc ] 00000160          *   
                   000133f8  [ 000099fc ] 0000005c          *   timer.obj (.text)
                   00013454  [ 00009a2a ] 0000005b          *   rts55x.lib : fltuld.obj (.text)
                   000134af  [ 00009a57 ] 00000001          *   --HOLE-- [fill = 20]
                   000134b0  [ 00009a58 ] 00000056          *   ezdsp5535.obj (.text)
                   00013506  [ 00009a83 ] 00000050          *   rts55x.lib : printf.obj (.text)
                   00013556  [ 00009aab ] 00000002          *   --HOLE-- [fill = 20]

.text.15     0     00013558  [ 00009aac ] 0000033c          *   
                   00013558  [ 00009aac ] 0000004e          *   rtc.obj (.text:retain)
                   000135a6  [ 00009ad3 ] 0000004d          *   rts55x.lib : autoinit.obj (.text)
                   000135f3  [ 00009af9+] 0000004b          *              : args_main.obj (.text)
                   0001363e  [ 00009b1f ] 0000004b          *              : remli.obj (.text)
                   00013689  [ 00009b44+] 00000048          *              : divli.obj (.text)
                   000136d1  [ 00009b68+] 0000003f          *              : memcpy.obj (.text)
                   00013710  [ 00009b88 ] 0000003e          *              : exit.obj (.text)
                   0001374e  [ 00009ba7 ] 00000034          *              : boot.obj (.text)
                   00013782  [ 00009bc1 ] 0000002a          *              : fixdi.obj (.text)
                   000137ac  [ 00009bd6 ] 0000002a          *              : udiv.obj (.text)
                   000137d6  [ 00009beb ] 00000023          *              : memccpy.obj (.text)
                   000137f9  [ 00009bfc+] 0000001a          *              : isinf.obj (.text)
                   00013813  [ 00009c09+] 00000014          *              : subd.obj (.text)
                   00013827  [ 00009c13+] 00000013          *              : lmpy.obj (.text)
                   0001383a  [ 00009c1d ] 00000012          *              : _lock.obj (.text)
                   0001384c  [ 00009c26 ] 00000011          *              : memset.obj (.text)
                   0001385d  [ 00009c2e+] 00000011          *              : strlen.obj (.text)
                   0001386e  [ 00009c37 ] 00000010          *              : negd.obj (.text)
                   0001387e  [ 00009c3f ] 0000000e          *              : fltud.obj (.text)
                   0001388c  [ 00009c46 ] 00000007          *              : exit.obj (.text:CIO_breakpoint)
                   00013893  [ 00009c49 ] 00000001          *   --HOLE-- [fill = 20]

.text.16     0     00020000  [ 00010000 ] 000101da          *   
                   00020000  [ 00010000 ] 0000444f          *   csl_mmcsd.obj (.text)
                   0002444f  [ 00012227 ] 00000001          *   --HOLE-- [fill = 20]
                   00024450  [ 00012228 ] 00002b4f          *   csl_msc.obj (.text)
                   00026f9f  [ 000137cf ] 00000001          *   --HOLE-- [fill = 20]
                   00026fa0  [ 000137d0 ] 00002a24          *   csl_sdio.obj (.text)
                   000299c4  [ 00014ce2 ] 000021d5          *   csl_usb.obj (.text)
                   0002bb99  [ 00015dcc+] 00000002          *   rts55x.lib : vectors.obj (.text)
                   0002bb9b  [ 00015dcd ] 00000001          *   --HOLE-- [fill = 20]
                   0002bb9c  [ 00015dce ] 000018ac          *   csl_dma.obj (.text)
                   0002d448  [ 00016a24 ] 000017ed          *   tasks_sysStk.obj (.text)
                   0002ec35  [ 0001761a+] 000015a4          *   rts55x.lib : _printfi.obj (.text)
                   000301d9  [ 000180ec ] 00000001          *   --HOLE-- [fill = 20]

.text.17     0     000301dc  [ 000180ee ] 000022f4          *   
                   000301dc  [ 000180ee ] 000011eb          *   csl_nand.obj (.text)
                   000313c7  [ 000189e3 ] 00000001          *   --HOLE-- [fill = 20]
                   000313c8  [ 000189e4 ] 00001106          *   csl_uart.obj (.text)
                   000324ce  [ 00019267 ] 00000002          *   --HOLE-- [fill = 20]

.text.18     0     000324d0  [ 00019268 ] 00001cf6          *   
                   000324d0  [ 00019268 ] 00000f34          *   queue.obj (.text)
                   00033404  [ 00019a02 ] 00000dc1          *   csl_dat.obj (.text)
                   000341c5  [ 0001a0e2 ] 00000001          *   --HOLE-- [fill = 20]

.text.19     0     000341c8  [ 0001a0e4 ] 000019da          *   
                   000341c8  [ 0001a0e4 ] 00000d74          *   csl_audioClass.obj (.text)
                   00034f3c  [ 0001a79e ] 00000c65          *   csl_cdc.obj (.text)
                   00035ba1  [ 0001add0 ] 00000001          *   --HOLE-- [fill = 20]

.text.20     0     00035ba4  [ 0001add2 ] 0000178c          *   
                   00035ba4  [ 0001add2 ] 00000c4c          *   csl_i2c.obj (.text)
                   000367f0  [ 0001b3f8 ] 00000b3e          *   csl_mmcsd_ataIf.obj (.text)
                   0003732e  [ 0001b997 ] 00000002          *   --HOLE-- [fill = 20]

.text.21     0     00037330  [ 0001b998 ] 00002e1a          *   
                   00037330  [ 0001b998 ] 00000b2b          *   csl_sar.obj (.text)
                   00037e5b  [ 0001bf2d ] 00000001          *   --HOLE-- [fill = 20]
                   00037e5c  [ 0001bf2e ] 000009e3          *   csl_i2s.obj (.text)
                   0003883f  [ 0001c41f ] 00000001          *   --HOLE-- [fill = 20]
                   00038840  [ 0001c420 ] 000008b4          *   csl_rtc.obj (.text)
                   000390f4  [ 0001c87a ] 00000838          *   csl_lcdc.obj (.text)
                   0003992c  [ 0001cc96 ] 0000081d          *   oled_test.obj (.text)
                   0003a149  [ 0001d0a4 ] 00000001          *   --HOLE-- [fill = 20]

.text.22     0     0003a14c  [ 0001d0a6 ] 00001744          *   
                   0003a14c  [ 0001d0a6 ] 00000697          *   csl_gpio.obj (.text)
                   0003a7e3  [ 0001d3f1 ] 00000001          *   --HOLE-- [fill = 20]
                   0003a7e4  [ 0001d3f2 ] 000005bb          *   csl_spi.obj (.text)
                   0003ad9f  [ 0001d6cf ] 00000001          *   --HOLE-- [fill = 20]
                   0003ada0  [ 0001d6d0 ] 000005ab          *   blocktim.obj (.text)
                   0003b34b  [ 0001d9a5+] 00000543          *   rts55x.lib : lowlev.obj (.text)
                   0003b88e  [ 0001dc47 ] 00000002          *   --HOLE-- [fill = 20]

.text.23     0     0003b890  [ 0001dc48 ] 00000f36          *   
                   0003b890  [ 0001dc48 ] 00000538          *   csl_intc.obj (.text)
                   0003bdc8  [ 0001dee4 ] 00000528          *   rts55x.lib : trgdrv.obj (.text)
                   0003c2f0  [ 0001e178 ] 000004d5          *   ezdsp5535_sdcard.obj (.text)
                   0003c7c5  [ 0001e3e2 ] 00000001          *   --HOLE-- [fill = 20]

.text.24     0     0003c7c8  [ 0001e3e4 ] 000011b8          *   
                   0003c7c8  [ 0001e3e4 ] 000004b7          *   event_groups.obj (.text)
                   0003cc7f  [ 0001e63f+] 000004b5          *   rts55x.lib : memory.obj (.text)
                   0003d134  [ 0001e89a ] 00000427          *   croutine.obj (.text)
                   0003d55b  [ 0001eaad ] 00000001          *   --HOLE-- [fill = 20]
                   0003d55c  [ 0001eaae ] 00000422          *   QPeek.obj (.text)
                   0003d97e  [ 0001ecbf ] 00000002          *   --HOLE-- [fill = 20]

.text.25     0     0003d980  [ 0001ecc0 ] 000003ea          *   
                   0003d980  [ 0001ecc0 ] 000003e9          *   portASM.obj (.text)
                   0003dd69  [ 0001eeb4 ] 00000001          *   --HOLE-- [fill = 20]

.text.26     0     0003dd6c  [ 0001eeb6 ] 000007a0          *   
                   0003dd6c  [ 0001eeb6 ] 000003d2          *   flop.obj (.text)
                   0003e13e  [ 0001f09f ] 000003cc          *   rts55x.lib : divd.obj (.text)
                   0003e50a  [ 0001f285 ] 00000002          *   --HOLE-- [fill = 20]

.text.27     0     0003e50c  [ 0001f286 ] 000003c4          *   
                   0003e50c  [ 0001f286 ] 000003c2          *   ezdsp5535_spiflash.obj (.text)
                   0003e8ce  [ 0001f467 ] 00000002          *   --HOLE-- [fill = 20]

.text.28     0     0003e8d0  [ 0001f468 ] 000003ba          *   
                   0003e8d0  [ 0001f468 ] 000003b9          *   main.obj (.text)
                   0003ec89  [ 0001f644 ] 00000001          *   --HOLE-- [fill = 20]

.text.29     0     0003ec8c  [ 0001f646 ] 00000346          *   
                   0003ec8c  [ 0001f646 ] 00000345          *   csl_mem.obj (.text)
                   0003efd1  [ 0001f7e8 ] 00000001          *   --HOLE-- [fill = 20]

.text.30     0     0003efd4  [ 0001f7ea ] 00000928          *   
                   0003efd4  [ 0001f7ea ] 0000033f          *   dynamic.obj (.text)
                   0003f313  [ 0001f989 ] 00000001          *   --HOLE-- [fill = 20]
                   0003f314  [ 0001f98a ] 000002f7          *   csl_gpt.obj (.text)
                   0003f60b  [ 0001fb05+] 000002ef          *   aic_test_i2c.obj (.text)
                   0003f8fa  [ 0001fc7d ] 00000002          *   --HOLE-- [fill = 20]

.text.31     0     0003f8fc  [ 0001fc7e ] 00000704          *   
                   0003f8fc  [ 0001fc7e ] 000002d0          *   semtest.obj (.text)
                   0003fbcc  [ 0001fde6 ] 000002ac          *   csl_pll.obj (.text)
                   0003fe78  [ 0001ff3c ] 0000017c          *   ezdsp5535_sar.obj (.text)
                   0003fff4  [ 0001fffa ] 0000000a          *   rts55x.lib : remove.obj (.text)
                   0003fffe  [ 0001ffff ] 00000002          *   --HOLE-- [fill = 20]

.cinit       0   [ 00040000 ]  00020000          *   000002de   
                 [ 00040000 ]  00020000          *   000000dc   dma.obj (.cinit)
                 [ 000401b8 ]  000200dc          *   00000054   port.obj (.cinit)
                 [ 00040260 ]  00020130          *   0000003d   tasks_sysStk.obj (.cinit)
                 [ 000402da ]  0002016d          *   0000002d   rts55x.lib : lowlev.obj (.cinit)
                 [ 00040334 ]  0002019a          *   0000002a              : defs.obj (.cinit)
                 [ 00040388 ]  000201c4          *   0000001f   dynamic.obj (.cinit)
                 [ 000403c6 ]  000201e3          *   00000018   croutine.obj (.cinit)
                 [ 000403f6 ]  000201fb          *   00000015   csl_mmcsd_ataIf.obj (.cinit)
                 [ 00040420 ]  00020210          *   00000014   blocktim.obj (.cinit)
                 [ 00040448 ]  00020224          *   00000013   QueueOverwrite.obj (.cinit)
                 [ 0004046e ]  00020237          *   00000011   main.obj (.cinit)
                 [ 00040490 ]  00020248          *   00000010   timer.obj (.cinit)
                 [ 000404b0 ]  00020258          *   0000000e   QPeek.obj (.cinit)
                 [ 000404cc ]  00020266          *   0000000d   ParTest.obj (.cinit)
                 [ 000404e6 ]  00020273          *   0000000c   ezdsp5535_sar.obj (.cinit)
                 [ 000404fe ]  0002027f          *   0000000c   semtest.obj (.cinit)
                 [ 00040516 ]  0002028b          *   0000000a   rts55x.lib : _lock.obj (.cinit)
                 [ 0004052a ]  00020295          *   0000000a              : exit.obj (.cinit)
                 [ 0004053e ]  0002029f          *   00000009   flash.obj (.cinit)
                 [ 00040550 ]  000202a8          *   00000009   heap_1.obj (.cinit)
                 [ 00040562 ]  000202b1          *   00000008   PollQ.obj (.cinit)
                 [ 00040572 ]  000202b9          *   00000008   csl_i2s.obj (.cinit)
                 [ 00040582 ]  000202c1          *   00000008   rtc.obj (.cinit)
                 [ 00040592 ]  000202c9          *   00000004   flop.obj (.cinit)
                 [ 0004059a ]  000202cd          *   00000004   i2s.obj (.cinit)
                 [ 000405a2 ]  000202d1          *   00000004   integer.obj (.cinit)
                 [ 000405aa ]  000202d5          *   00000004   rts55x.lib : fopen.obj (.cinit)
                 [ 000405b2 ]  000202d9          *   00000004              : memory.obj (.cinit)
                 [ 000405ba ]  000202dd          *   00000001   --HOLE-- [fill = 0]

.cio         0   [ 000405c0 ]  000202e0          *   00000120   UNINITIALIZED
                 [ 000405c0 ]  000202e0          *   00000120   rts55x.lib : trgmsg.obj (.cio)

.switch      0   [ 00040800 ]  00020400          *   000000e0   
                 [ 00040800 ]  00020400          *   00000022   csl_sdio.obj (.switch:_SDIO_eventDisable)
                 [ 00040844 ]  00020422          *   00000022   csl_sdio.obj (.switch:_SDIO_eventEnable)
                 [ 00040888 ]  00020444          *   00000020   csl_dma.obj (.switch:_DMA_config)
                 [ 000408c8 ]  00020464          *   00000020   csl_dma.obj (.switch:_DMA_getConfig)
                 [ 00040908 ]  00020484          *   00000020   csl_dma.obj (.switch:_DMA_reset)
                 [ 00040948 ]  000204a4          *   00000018   csl_usb.obj (.switch:_USB_coreEventProcessEp0)
                 [ 00040978 ]  000204bc          *   00000014   rtc.obj (.switch:_NtoC)
                 [ 000409a0 ]  000204d0          *   00000010   csl_msc.obj (.switch:_MSC_Bulk)

vectors      0     0004ce00  [ 00026700 ] 00000200          *   
                   0004ce00  [ 00026700 ] 00000100          *   rts55x.lib : vectors.obj (vectors)
                   0004cf00  [ 00026780 ] 00000100          *   vectors.obj (vectors)


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
00000001                $TI_capability_requires_rev3
ffffffff                .bss
ffffffff                .data
ffffffff                .text
0001388d                C$$EXIT
000129a7                C$$IO$$
00013827                I$$LMPY
000137ac                I$$UDIV
000137c1                I$$UMOD
0003448c                _AC_Close
000344c8                _AC_Ctrl
0003475c                _AC_GetactivityFlagStatus
00034778                _AC_GetsuspendFlagStatus
000346c0                _AC_Iso
00034244                _AC_Open
00034790                _AC_initDescriptors
00034cf4                _AC_reqGetCurrent
00034a40                _AC_reqGetDescriptor
00034dfc                _AC_reqGetMaximum
00034db8                _AC_reqGetMinimum
00034e40                _AC_reqGetResolution
00034c18                _AC_reqSetCurrent
00034e84                _AC_reqSetInterface
0003f60b                _AIC3254_init
            000030f8    _ATA_No_Swap
0003eb38                _BlinkLED
            00003f37    _Buf_Address
            00003fd9    _Buf_day
            00003fd6    _Buf_hour
            00003fd3    _Buf_min
            00003fdc    _Buf_month
            00003fd0    _Buf_sec
            00003fdf    _Buf_year
000351c8                _CDC_Close
00035204                _CDC_GetactivityFlagStatus
0003521c                _CDC_GetsuspendFlagStatus
00034fd0                _CDC_Open
00034ff4                _CDC_OpenFullspeed
00035630                _CDC_bulkInHandler
00035530                _CDC_bulkOutHandler
00035234                _CDC_eventHandler
00035920                _CDC_getData
000359b0                _CDC_putData
0003eb14                _ConfigPort
            00003fe3    _Conunt_RTC
000334dc                _DAT_close
00033670                _DAT_copy
00033b6c                _DAT_fill
00033404                _DAT_open
0003407c                _DAT_wait
            00003fae    _DBSTAT_HIGH
            00003fab    _DBSTAT_LOW
            000039d8    _DMA_Count
            000039db    _DMA_Done
0002bcc0                _DMA_close
0002bce0                _DMA_config
0002c8b4                _DMA_getConfig
0002d39c                _DMA_getLastTransferType
0002bb9c                _DMA_init
0002bbd4                _DMA_open
0002d038                _DMA_reset
0002ce24                _DMA_start
0002cf34                _DMA_stop
0002d324                _DMA_swapWords
00012b8c                _EVM5515_UART_getChar
00012b74                _EVM5515_UART_putChar
00012efc                _EZDSP5535_GPIO_getInput
00012e90                _EZDSP5535_GPIO_init
00012ebc                _EZDSP5535_GPIO_setDirection
00012ee0                _EZDSP5535_GPIO_setOutput
00012ce4                _EZDSP5535_I2C_init
00012d50                _EZDSP5535_I2C_read
00012d1c                _EZDSP5535_I2C_reset
00012d28                _EZDSP5535_I2C_write
000122b0                _EZDSP5535_I2S_close
000121b0                _EZDSP5535_I2S_init
0001220c                _EZDSP5535_I2S_readLeft
00012270                _EZDSP5535_I2S_readRight
00012240                _EZDSP5535_I2S_writeLeft
00012294                _EZDSP5535_I2S_writeRight
00011308                _EZDSP5535_LED_getall
000112d0                _EZDSP5535_LED_init
00011404                _EZDSP5535_LED_off
000113cc                _EZDSP5535_LED_on
0001135c                _EZDSP5535_LED_setall
00011438                _EZDSP5535_LED_toggle
00011c50                _EZDSP5535_OSD9616_init
00011c04                _EZDSP5535_OSD9616_multiSend
00011d34                _EZDSP5535_OSD9616_printLetter
00011bdc                _EZDSP5535_OSD9616_send
0003ff40                _EZDSP5535_SAR_getKey
0003fe78                _EZDSP5535_SAR_init
0003c700                _EZDSP5535_SDCARD_close
0003c2f0                _EZDSP5535_SDCARD_init
0003c698                _EZDSP5535_SDCARD_read
0003c6cc                _EZDSP5535_SDCARD_write
0003e5b4                _EZDSP5535_SPIFLASH_erase
0003e50c                _EZDSP5535_SPIFLASH_init
0003e6b8                _EZDSP5535_SPIFLASH_read
0003e570                _EZDSP5535_SPIFLASH_status
0003e768                _EZDSP5535_SPIFLASH_write
00012b04                _EZDSP5535_UART_open
00011498                _EZDSP5535_XF_get
0001148c                _EZDSP5535_XF_off
00011480                _EZDSP5535_XF_on
000114a8                _EZDSP5535_XF_toggle
000134f8                _EZDSP5535_init
000134b0                _EZDSP5535_wait
000134e4                _EZDSP5535_waitusec
            000039d9    _Error_Count_L
            000039da    _Error_Count_R
            00003fe2    _Flag_RTC
0003a640                _GPIO_clearInt
0003a190                _GPIO_close
0003a1b4                _GPIO_config
0003a3ec                _GPIO_configBit
0003a534                _GPIO_disableInt
0003a5b4                _GPIO_enableInt
0003a23c                _GPIO_getConfig
0003a14c                _GPIO_open
0003a2c4                _GPIO_read
0003a754                _GPIO_reset
0003a6cc                _GPIO_statusBit
0003a348                _GPIO_write
0003f454                _GPT_close
0003f564                _GPT_config
0003f528                _GPT_getCnt
0003f314                _GPT_open
0003f3d8                _GPT_reset
0003f4cc                _GPT_start
0003f4fc                _GPT_stop
0003eb70                _GenerateAudioTone
            0000404c    _GpioObj
0003c292                _HOSTclock
0003c227                _HOSTclose
0003c172                _HOSTlseek
0003c0d3                _HOSTopen
0003c046                _HOSTread
0003bf98                _HOSTrename
0003bf3a                _HOSTtime
0003bed0                _HOSTunlink
0003be43                _HOSTwrite
00035c50                _I2C_config
00036624                _I2C_eventDisable
000364f0                _I2C_eventEnable
00035db8                _I2C_getConfig
000367d4                _I2C_getEventId
00035ba4                _I2C_init
000362d0                _I2C_read
00036744                _I2C_setCallback
00035e90                _I2C_setup
0003608c                _I2C_write
            00003ed7    _I2S_RCV_L
            00003f07    _I2S_RCV_R
00038288                _I2S_close
00037e5c                _I2S_open
00038334                _I2S_read
00038748                _I2S_reset
00037fa0                _I2S_setup
000387f4                _I2S_transEnable
000385f0                _I2S_write
0003b918                _IRQ_clear
0003b984                _IRQ_clearAll
0003b994                _IRQ_config
0003baa4                _IRQ_disable
0003bb24                _IRQ_disableAll
0003bb34                _IRQ_enable
0003bc30                _IRQ_getArg
0003ba1c                _IRQ_getConfig
0003bd7c                _IRQ_globalDisable
0003bd98                _IRQ_globalEnable
0003bdb4                _IRQ_globalRestore
0003b890                _IRQ_init
0003bca8                _IRQ_map
00012d78                _IRQ_plug
0003bbc0                _IRQ_restore
0003bc74                _IRQ_setArg
0003bcd4                _IRQ_setVecs
0003bd08                _IRQ_test
0003eaac                _InitSystem
0003990c                _LCD_close
000395bc                _LCD_configDMA
000390f4                _LCD_init
0003911c                _LCD_open
00039160                _LCD_setup
            00004052    _LED_Blink_ctr
0003ee60                _MEM_disablePartialRetentionMode
0003ecd4                _MEM_disableRetentionMode
0003ed18                _MEM_enablePartialRetentionMode
0003ec90                _MEM_enableRetentionMode
0003efc0                _MEM_getmSDRAMClock
0003ec8c                _MEM_init
0003ef84                _MEM_setmSDRAMClock
000372b8                _MMC_busyStatusCheck
0002438c                _MMC_checkReadDmaDone
00020368                _MMC_clearResponse
00020248                _MMC_close
000372a0                _MMC_commandReadyStatusCheck
00020aa0                _MMC_config
000372ac                _MMC_dataReadyStatusCheck
00020df0                _MMC_deselectCard
000208b8                _MMC_drrdy
00020900                _MMC_dxrdy
000206e0                _MMC_eventDisable
000204e4                _MMC_eventEnable
000372d4                _MMC_file_system_format
000372fc                _MMC_flushFat
00021a8c                _MMC_getCardCsd
00024164                _MMC_getCardStatus
00020b3c                _MMC_getConfig
00020330                _MMC_getNumberOfCards
000372c4                _MMC_getSerialID
00020988                _MMC_getStatus
000372f4                _MMC_get_date
000372f8                _MMC_get_mod_date
000372f0                _MMC_get_mod_time
000372ec                _MMC_get_time
00020488                _MMC_ierDisable
00020444                _MMC_ierEnable
00020000                _MMC_init
000367f0                _MMC_initState
000204bc                _MMC_intEnable
00036c14                _MMC_issueReadCommand
00020038                _MMC_open
000225bc                _MMC_read
0003700c                _MMC_readNSectors
00036eb4                _MMC_readNextNWords
00036dd0                _MMC_readNextWord
00036e40                _MMC_readNextWord1
00036934                _MMC_readWriteControl
000371bc                _MMC_read_CID
00037228                _MMC_read_CSD
000372e0                _MMC_reset
00020948                _MMC_saveStatus
00020ec0                _MMC_selectCard
000216c8                _MMC_sendAllCID
00020bdc                _MMC_sendCmd
00020c90                _MMC_sendGoIdle
00021450                _MMC_sendOpCond
00023e2c                _MMC_setBlockLength
000202f0                _MMC_setCallBack
000202bc                _MMC_setCardPtr
00020288                _MMC_setCardType
00023c74                _MMC_setDataTransferCallback
00023cc4                _MMC_setDmaChanConfig
00023c14                _MMC_setDmaHandle
00023da4                _MMC_setEndianMode
000214f4                _MMC_setRca
00023ec4                _MMC_setWriteBlkEraseCnt
000209ec                _MMC_setupNative
00020d18                _MMC_stop
00022fd8                _MMC_write
000370e4                _MMC_writeNSectors
00036f24                _MMC_writeSector
00037294                _MMC_writeSectorFlush
000253c4                _MSC_Bulk
00024fa0                _MSC_Close
000251cc                _MSC_Ctrl
00025c58                _MSC_ExecuteRead
0002604c                _MSC_ExecuteWrite
000254c0                _MSC_GetLunLockedStatus
000254f0                _MSC_GetactivityFlagStatus
0002550c                _MSC_GetsuspendFlagStatus
00026824                _MSC_HandlePreventAllowMediaRemoval
000269c8                _MSC_HandleReadCapacity
000259b4                _MSC_HandleStateWaitForCBW
00026600                _MSC_HandleTestUnitReady
00024c30                _MSC_Open
00024c54                _MSC_OpenFullspeed
00024fdc                _MSC_SetLunAttr
00026f24                _MSC_handleDataDirMisMatch
00026e50                _MSC_reqBotMscReset
00026c18                _MSC_reqGetDescriptor
00026ebc                _MSC_sendCswWithPhaseError
000309a0                _NAND_checkCommandStatus
00030b74                _NAND_disableHwECC
00030a4c                _NAND_enableHwECC
0003078c                _NAND_getBankInfo
00031280                _NAND_getIntrNum
00031160                _NAND_hasCacheProg
00031190                _NAND_hasCopyBack
00031100                _NAND_hasRandomRead
00031130                _NAND_hasRandomWrite
000301dc                _NAND_init
00031368                _NAND_intrClear
00031220                _NAND_intrDisable
000311c0                _NAND_intrEnable
000312a0                _NAND_intrReadAT
000312e0                _NAND_intrReadLT
00031324                _NAND_intrReadWR
0003088c                _NAND_isStatusWriteProtected
00030c5c                _NAND_readECC
00030e10                _NAND_readNBytes
00030974                _NAND_sendCommand
00030a08                _NAND_setAddress
00030850                _NAND_setLatchEnableOffset
00030270                _NAND_setup
00030f24                _NAND_writeNBytes
0003fdbc                _PLL_bypass
0003fc30                _PLL_config
0003fd54                _PLL_enable
0003fbf8                _PLL_init
0003fe0c                _PLL_reset
0004cf00                _RST
00013558                _RTC_Isr
00038fd8                _RTC_bcdToDec
00038908                _RTC_config
00038f98                _RTC_decToBcd
00038e90                _RTC_eventDisable
00038da4                _RTC_eventEnable
000389f4                _RTC_getConfig
00038bdc                _RTC_getDate
00038f44                _RTC_getEventId
00038b20                _RTC_getTime
000388cc                _RTC_reset
00038c1c                _RTC_setAlarm
00039018                _RTC_setCallback
000390a8                _RTC_setCompensation
00038b6c                _RTC_setDate
00038cf0                _RTC_setPeriodicInterval
00038aa4                _RTC_setTime
000388dc                _RTC_start
00038900                _RTC_stop
            00003978    _RcvL_Sine
            000039a8    _RcvR_Sine
0004ce00                _Reset
000378c4                _SAR_A2DMeasParamSet
00037d40                _SAR_GPODirSet
00037430                _SAR_chanClose
000374b4                _SAR_chanConfig
000377b4                _SAR_chanCycSet
000373b0                _SAR_chanInit
000373cc                _SAR_chanOpen
000375a0                _SAR_chanSetup
00037390                _SAR_deInit
0003752c                _SAR_getConfig
00037e1c                _SAR_getStatus
00037330                _SAR_init
00037880                _SAR_readData
00037804                _SAR_startConversion
00037838                _SAR_stopConversion
00027f38                _SDIO_clearResponse
000270ac                _SDIO_close
000270d4                _SDIO_config
00027b4c                _SDIO_deselectCard
000271ac                _SDIO_detectCard
00028310                _SDIO_eventDisable
000280e8                _SDIO_eventEnable
00027a84                _SDIO_getRca
00027da4                _SDIO_getResponse
0002807c                _SDIO_getSdioStatus
00028014                _SDIO_getStatus
00026fa0                _SDIO_init
00027518                _SDIO_initCard
00026fe0                _SDIO_open
00029028                _SDIO_readBlocks
000287a4                _SDIO_readBytes
00028578                _SDIO_readSingleByte
00028540                _SDIO_readWaitDisable
00028508                _SDIO_readWaitEnable
0002799c                _SDIO_resetCard
00027c0c                _SDIO_selectCard
00027cd0                _SDIO_sendCommand
0002993c                _SDIO_setClock
000298bc                _SDIO_setEndianMode
00029468                _SDIO_writeBlocks
00028be8                _SDIO_writeBytes
000286a4                _SDIO_writeSingleByte
00024260                _SD_configurePullup
00021ee0                _SD_getCardCsd
000218a0                _SD_sendAllCID
000215cc                _SD_sendRca
00023ff4                _SD_setBusWidth
0003a87c                _SPI_close
0003a8a8                _SPI_config
0003ad2c                _SPI_dataTransaction
0003ab30                _SPI_deInit
0003a7e4                _SPI_init
0003a848                _SPI_open
0003ab5c                _SPI_read
0003ac40                _SPI_write
            00003fb0    _STATUS0_HIGH
            00003faf    _STATUS0_LOW
            00003fb2    _STATUS1_HIGH
            00003fb1    _STATUS1_LOW
            00003fb4    _STATUS2_HIGH
            00003fb3    _STATUS2_LOW
0003eb24                _SYS_GlobalIntDisable
0003eb1c                _SYS_GlobalIntEnable
            00004034    _SarHandle
            00004030    _SarObj
00013444                _StartTimer0
0001344c                _StartTimer02
00013420                _Timer02Init
00010d64                _Timer02_isr
000133f8                _Timer0Init
            00004062    _Timer0_Int_CTR
            00004063    _Timer2_Int_CTR
00010c38                _Timer_isr
000319b8                _UART_config
00031cf8                _UART_eventDisable
00031c60                _UART_eventEnable
00032038                _UART_fgetc
00032160                _UART_fgets
000320d8                _UART_fputc
00032290                _UART_fputs
000323a8                _UART_getConfig
00032380                _UART_getEventId
00031454                _UART_init
00031d88                _UART_read
00031bcc                _UART_reset
00031c14                _UART_resetOff
00032468                _UART_setCallback
00031510                _UART_setup
00031ac0                _UART_setupBaudRate
00031eb4                _UART_write
0002b16c                _USB_abortAllTransaction
0002b00c                _USB_abortTransaction
0002aa68                _USB_bytesRemaining
0002ac70                _USB_clearEndptStall
0002b1c0                _USB_connectDev
0002b6e0                _USB_coreEventProcessEp0
0002b1f4                _USB_disconnectDev
0002aedc                _USB_epNumToHandle
0002b55c                _USB_findFifoSize
0002b504                _USB_getDataCountReadFromFifo
0002ae58                _USB_getEndptStall
0002a694                _USB_getEvents
0002b304                _USB_getFrameNo
0002b4b0                _USB_getMaxPower
0002b254                _USB_getRemoteWakeupStat
0002a77c                _USB_getSetupPacket
00029c58                _USB_init
0002a2ac                _USB_initEndptObj
0002b3d0                _USB_initPLL
0002a9e0                _USB_isTransactionDone
0002b26c                _USB_issueRemoteWakeup
0002a70c                _USB_peekEvents
0002a824                _USB_postTransaction
0002a07c                _USB_resetDev
0002b364                _USB_selfwakeup
0002b2bc                _USB_setDevAddr
0002b4d0                _USB_setFullSpeedMode
0002b454                _USB_setParams
0002b224                _USB_setRemoteWakeup
0002aafc                _USB_stallEndpt
0002b320                _USB_suspendDevice
0004cf00                _VECSTART
00010650                _WDTIM_close
000106c8                _WDTIM_config
00010620                _WDTIM_getCnt
00010734                _WDTIM_getConfig
00010518                _WDTIM_open
00010694                _WDTIM_service
00010590                _WDTIM_start
000105d8                _WDTIM_stop
            000038b8    _XmitL_Sine_1K
            000038e8    _XmitL_Sine_2K
            00003918    _XmitR_Sine_1K
            00003948    _XmitR_Sine_2K
            000202e0    __CIOBUF_
            00001060    __STACK_END
00002000                __STACK_SIZE
00005000                __SYSMEM_SIZE
00001000                __SYSSTACK_SIZE
00000001                __TI_args_main
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
            00020000    ___cinit__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
000137f9                ___isinf
ffffffff                ___pinit__
ffffffff                ___text__
000109dc                __addd
000135f3                __args_main
000103b9                __cleanup
            0000405c    __cleanup_ptr
00011659                __cmpd
            00006bb0    __ctypes_
0003e13e                __divd
00013689                __divli
000109a7                __divlli
000137ac                __divu
00012ba6                __divul
000108b3                __divull
00012771                __doflush
            0000405e    __dtors_ptr
00011625                __eqld
00013782                __fixdi
000131ec                __fixdli
00013333                __fltlid
0001387e                __fltud
00013454                __fltuld
00013091                __frcmpyd
00013107                __frcmpyd_div
            00003af4    __ft_end
            000039dc    __ftable
000115db                __geqd
00011590                __gtrd
00011543                __leqd
            00004058    __lock
000114fb                __lssd
00012062                __mpyd
00013827                __mpyli
000107fb                __mpylli
0001386e                __negd
000114c7                __neqd
0001384a                __nop
0002ff97                __printfi
00012714                __rd_ok
00013842                __register_lock
0001383a                __register_unlock
0001363e                __remli
000107cc                __remlli
000137c1                __remu
0001317a                __remul
0001077e                __remull
            00000060    __stack
00013813                __subd
            0000406a    __sys_memory
            00001060    __sysstack
            00003a54    __tmpnams
            0000405a    __unlock
00012694                __wrt_ok
0001388c                _abort
0003b79e                _add_device
0001339a                _atoi
000135a6                _auto_init
0001374e                _c_int00
            000030f0    _cached_phySector0
            000030f2    _cached_phySector1
            000030f4    _cached_phySector2
            000030f6    _cached_phySector3
0003d10e                _calloc
            00003d6a    _cardAddr
0003d106                _chkheap
0003b72b                _close
00012490                _convert_number_to_string
00010260                _disable_i2s0
0001026e                _disable_i2s1
0001027c                _disable_i2s2
0001028a                _disable_i2s3
000110a0                _enable_dma_int
00010228                _enable_i2s0
00010236                _enable_i2s1
00010244                _enable_i2s2
00010252                _enable_i2s3
000123c8                _enable_rtc_second_int
00013710                _exit
            00004039    _f1KToneOn
            0000403a    _f2KToneOn
            00004038    _fSineWave
            00004060    _fTimer
            00004061    _fTimer02
00013016                _fclose
000127da                _fflush
0003b722                _find_registered_device
000104dc                _fopen
00012a5b                _fputc
00011eff                _fputs
0003cc7f                _free
0003d0b0                _free_memory
00010413                _freopen
            00003fa0    _fsError
000132c8                _fseek
            000037d2    _gBulkInTransfer
            000037e0    _gBulkOutTransfer
            000037c4    _gCtrlTransfer
            00003818    _gEpStatus
            00003fe4    _gI2cObj
            0000380a    _gIntInTransfer
            000037ee    _gIsoInTransfer
            000037fc    _gIsoOutTransfer
            00002cee    _gNextPhySector
            00002bec    _gReadBuf
            000036fc    _gUsbContext
            000038a8    _gUsbEpHandle
            00002cec    _gWordCount
            00002cf0    _gWriteBuf
0003bdc8                _getenv
            0000404e    _hGpio
            00004068    _hI2s
            00003c06    _hSpi
            00003fce    _hUart
            00003ff4    _i2cHandle
00010000                _i2s0_read_CR
00010048                _i2s0_read_INTR
0001004e                _i2s0_read_INT_MASK
0001005a                _i2s0_read_RXL_LSW
00010066                _i2s0_read_RXL_MSW
00010072                _i2s0_read_RXR_LSW
0001007e                _i2s0_read_RXR_MSW
0001000c                _i2s0_read_SRGR
00010018                _i2s0_read_TXL_LSW
00010024                _i2s0_read_TXL_MSW
00010030                _i2s0_read_TXR_LSW
0001003c                _i2s0_read_TXR_MSW
00010006                _i2s0_write_CR
00010054                _i2s0_write_INT_MASK
00010060                _i2s0_write_RXL_LSW
0001006c                _i2s0_write_RXL_MSW
00010078                _i2s0_write_RXR_LSW
00010084                _i2s0_write_RXR_MSW
00010012                _i2s0_write_SRGR
0001001e                _i2s0_write_TXL_LSW
0001002a                _i2s0_write_TXL_MSW
00010036                _i2s0_write_TXR_LSW
00010042                _i2s0_write_TXR_MSW
0001008a                _i2s1_read_CR
000100d2                _i2s1_read_INTR
000100d8                _i2s1_read_INT_MASK
000100e4                _i2s1_read_RXL_LSW
000100f0                _i2s1_read_RXL_MSW
000100fc                _i2s1_read_RXR_LSW
00010108                _i2s1_read_RXR_MSW
00010096                _i2s1_read_SRGR
000100a2                _i2s1_read_TXL_LSW
000100ae                _i2s1_read_TXL_MSW
000100ba                _i2s1_read_TXR_LSW
000100c6                _i2s1_read_TXR_MSW
00010090                _i2s1_write_CR
000100de                _i2s1_write_INT_MASK
000100ea                _i2s1_write_RXL_LSW
000100f6                _i2s1_write_RXL_MSW
00010102                _i2s1_write_RXR_LSW
0001010e                _i2s1_write_RXR_MSW
0001009c                _i2s1_write_SRGR
000100a8                _i2s1_write_TXL_LSW
000100b4                _i2s1_write_TXL_MSW
000100c0                _i2s1_write_TXR_LSW
000100cc                _i2s1_write_TXR_MSW
00010114                _i2s2_read_CR
0001015c                _i2s2_read_INTR
00010162                _i2s2_read_INT_MASK
0001016e                _i2s2_read_RXL_LSW
0001017a                _i2s2_read_RXL_MSW
00010186                _i2s2_read_RXR_LSW
00010192                _i2s2_read_RXR_MSW
00010120                _i2s2_read_SRGR
0001012c                _i2s2_read_TXL_LSW
00010138                _i2s2_read_TXL_MSW
00010144                _i2s2_read_TXR_LSW
00010150                _i2s2_read_TXR_MSW
0001011a                _i2s2_write_CR
00010168                _i2s2_write_INT_MASK
00010174                _i2s2_write_RXL_LSW
00010180                _i2s2_write_RXL_MSW
0001018c                _i2s2_write_RXR_LSW
00010198                _i2s2_write_RXR_MSW
00010126                _i2s2_write_SRGR
00010132                _i2s2_write_TXL_LSW
0001013e                _i2s2_write_TXL_MSW
0001014a                _i2s2_write_TXR_LSW
00010156                _i2s2_write_TXR_MSW
0001019e                _i2s3_read_CR
000101e6                _i2s3_read_INTR
000101ec                _i2s3_read_INT_MASK
000101f8                _i2s3_read_RXL_LSW
00010204                _i2s3_read_RXL_MSW
00010210                _i2s3_read_RXR_LSW
0001021c                _i2s3_read_RXR_MSW
000101aa                _i2s3_read_SRGR
000101b6                _i2s3_read_TXL_LSW
000101c2                _i2s3_read_TXL_MSW
000101ce                _i2s3_read_TXR_LSW
000101da                _i2s3_read_TXR_MSW
000101a4                _i2s3_write_CR
000101f2                _i2s3_write_INT_MASK
000101fe                _i2s3_write_RXL_LSW
0001020a                _i2s3_write_RXL_MSW
00010216                _i2s3_write_RXR_LSW
00010222                _i2s3_write_RXR_MSW
000101b0                _i2s3_write_SRGR
000101bc                _i2s3_write_TXL_LSW
000101c8                _i2s3_write_TXL_MSW
000101d4                _i2s3_write_TXR_LSW
000101e0                _i2s3_write_TXR_MSW
            00004036    _keyCnt1
            00004037    _keyCnt2
            00004044    _led_tsk_ctr
0003b6bc                _lseek
00012f99                _ltoa
0003e8d0                _main
0003cdb0                _malloc
0003d056                _max_free
            000030f9    _mem
000129ac                _mem_test
000137d6                _memccpy
000136d1                _memcpy
0001384c                _memset
0003cd4b                _minit
            00003d1a    _mmcCardObj
            00003d6c    _mmcStatus
            00003d18    _mmcsdHandle
            00002ced    _nbuf_cached
0003992c                _oled_test
0003b5fd                _open
            00003fa1    _ouError
            00003cd8    _pMmcsdContObj
0002df30                _pcTaskGetName
            00003fa2    _portFLAGS_INT_ENABLED
            00003fa3    _portFLAGS_INT_ENABLED_POPPED
            00004033    _preKey
00013506                _printf
00011860                _prvSetupTimerInterrupt
00012a5b                _putc
00012af2                _putchar
00012034                _puts
00012834                _pvPortMalloc
            00003f6e    _pxCurrentCoRoutine
            00003df6    _pxCurrentTCB
000116b4                _pxPortInitialiseStack
0003b54f                _read
0001325b                _readmsg
0003cea5                _realloc
0003fff4                _remove
0003b519                _remove_device
0003b4c0                _rename
000123d4                _reset_RTC
            00003faa    _save_xar6
            00003fa8    _save_xar7
            00003fa4    _save_xsp
            00003fa6    _save_xssp
            00003d48    _sdCardCsdObj
            00003d38    _sdCardIdObj
00010f5c                _set_dma0_ch0_i2s0_Lout
00010ea8                _set_dma0_ch0_stop
00011034                _set_dma0_ch1_i2s0_Rout
00010ed8                _set_dma0_ch1_stop
00010ef0                _set_dma1_ch0_i2s2_Lout
00010e90                _set_dma1_ch0_stop
00010fc8                _set_dma1_ch1_i2s2_Rout
00010ec0                _set_dma1_ch1_stop
00012e38                _set_i2s0_master
00012e6c                _set_i2s0_slave
00012e04                _set_i2s2_master
000125ae                _setvbuf
00011d74                _spiflash_test
            00003df4    _stackStruct
0001385d                _strlen
            000036fb    _sysCtrlRegs
0003ebfc                _systemInit
            00003fb6    _tOne
            00003fb8    _tThree
            00003fb7    _tTwo
            00003fb5    _tZero
            00003fac    _tickIRQctr
            00003fba    _uartObj
0002e600                _ulTaskNotifyTake
0003b48d                _unlink
            00003fb9    _usCriticalNesting
            000036fa    _usbRegisters
00011b78                _uxListRemove
00032e24                _uxQueueMessagesWaiting
00032ea8                _uxQueueMessagesWaitingFromISR
00032e60                _uxQueueSpacesAvailable
0002df28                _uxTaskGetNumberOfTasks
0002e538                _uxTaskGetStackHighWaterMark
0002d8e4                _uxTaskPriorityGet
0002d92c                _uxTaskPriorityGetFromISR
0002e5d0                _uxTaskResetEventItemValue
0003ea78                _vApplicationIdleHook
0003ec74                _vApplicationMallocFailedHook
0003ec7c                _vApplicationStackOverflowHook
0003d210                _vCoRoutineAddToDelayedList
0003d408                _vCoRoutineSchedule
0003ada0                _vCreateBlockTimeTasks
0003cc30                _vEventGroupClearBitsCallback
0003cbdc                _vEventGroupDelete
0003cc1c                _vEventGroupSetBitsCallback
00011a2c                _vListInitialise
00011a70                _vListInitialiseItem
00011ad8                _vListInsert
00011a84                _vListInsertEnd
00012c48                _vParTestInitialise
00012c4c                _vParTestSetLED
00012c64                _vParTestToggleLED
0001185c                _vPortEndScheduler
000128d0                _vPortFree
000128dc                _vPortInitialiseBlocks
0003dc01                _vPortYield
00032ec0                _vQueueDelete
00011200                _vQueueOverwritePeriodicISRDemo
0003efd4                _vStartDynamicPriorityTasks
000122c4                _vStartIntegerMathTasks
000124c4                _vStartLEDFlashTasks
0003dd6c                _vStartMathTasks
00011874                _vStartPolledQueueTasks
000110b0                _vStartQueueOverwriteTask
0003d55c                _vStartQueuePeekTasks
0003f8fc                _vStartSemaphoreTasks
0002d8b8                _vTaskDelay
0002d824                _vTaskDelayUntil
0002d760                _vTaskDelete
0002dd9c                _vTaskEndScheduler
0002e31c                _vTaskInternalSetTimeOutState
0002e3ec                _vTaskMissedYield
0002ea64                _vTaskNotifyGiveFromISR
0002e154                _vTaskPlaceOnEventList
0002e178                _vTaskPlaceOnUnorderedEventList
0002d950                _vTaskPrioritySet
0002e250                _vTaskRemoveFromUnorderedEventList
0002dbf8                _vTaskResume
0002e2d4                _vTaskSetTimeOutState
0002dd40                _vTaskStartScheduler
0002da98                _vTaskSuspend
0002ddb0                _vTaskSuspendAll
0002e0bc                _vTaskSwitchContext
0003da7d                _vTickISR
            00003df2    _wall_clk_ctr
0003b34b                _write
000128f2                _writemsg
0003b2fc                _xAreBlockTimeTestTasksStillRunning
0003f2b4                _xAreDynamicPriorityTasksStillRunning
00012398                _xAreIntegerMathsTaskStillRunning
0003e104                _xAreMathsTaskStillRunning
00011a00                _xArePollingQueuesStillRunning
0003d948                _xAreQueuePeekTasksStillRunning
0003fb7c                _xAreSemaphoreTasksStillRunning
0003d134                _xCoRoutineCreate
0003d50c                _xCoRoutineRemoveFromEventList
0003ca54                _xEventGroupClearBits
0003c7c8                _xEventGroupCreate
0003caa8                _xEventGroupGetBitsFromISR
0003cac8                _xEventGroupSetBits
0003c7f0                _xEventGroupSync
0003c918                _xEventGroupWaitBits
            0000400e    _xHighPriorityTask
            00004010    _xHighestPriorityTask
000111d0                _xIsQueueOverwriteTaskStillRunning
            0000400c    _xMediumPriorityTask
000128e4                _xPortGetFreeHeapSize
0003d980                _xPortStartScheduler
00033250                _xQueueCRReceive
00033368                _xQueueCRReceiveFromISR
000331bc                _xQueueCRSend
00033314                _xQueueCRSendFromISR
0003259c                _xQueueGenericCreate
000324d0                _xQueueGenericReset
0003262c                _xQueueGenericSend
000327b4                _xQueueGenericSendFromISR
00032840                _xQueueGiveFromISR
00033128                _xQueueIsQueueEmptyFromISR
00033194                _xQueueIsQueueFullFromISR
00032bc8                _xQueuePeek
00032de0                _xQueuePeekFromISR
000328c8                _xQueueReceive
00032d54                _xQueueReceiveFromISR
00032a50                _xQueueSemaphoreTake
            00004000    _xSuspendedTestQueue
0002e33c                _xTaskCheckForTimeOut
0002d448                _xTaskCreate
0002e7d0                _xTaskGenericNotify
0002e918                _xTaskGenericNotifyFromISR
0002ded4                _xTaskGetTickCount
0002df10                _xTaskGetTickCountFromISR
0002df50                _xTaskIncrementTick
0002eb28                _xTaskNotifyStateClear
0002e6d4                _xTaskNotifyWait
0002e1b0                _xTaskRemoveFromEventList
0002ddbc                _xTaskResumeAll
0002dcac                _xTaskResumeFromISR
ffffffff                binit
            00020000    cinit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit
00012f1a                reset_isr


GLOBAL SYMBOLS: SORTED BY Symbol Address 

abs. value/
byte addr   word addr   name
---------   ---------   ----
00000001                $TI_capability_requires_rev3
00000001                __TI_args_main
00000002                $TI_capability$C5500$CallingConvention
00000002                $TI_capability$C5500$MemoryModel
            00000060    __stack
00001000                __SYSSTACK_SIZE
00002000                __STACK_SIZE
            00001060    __STACK_END
            00001060    __sysstack
00005000                __SYSMEM_SIZE
            00002bec    _gReadBuf
            00002cec    _gWordCount
            00002ced    _nbuf_cached
            00002cee    _gNextPhySector
            00002cf0    _gWriteBuf
            000030f0    _cached_phySector0
            000030f2    _cached_phySector1
            000030f4    _cached_phySector2
            000030f6    _cached_phySector3
            000030f8    _ATA_No_Swap
            000030f9    _mem
            000036fa    _usbRegisters
            000036fb    _sysCtrlRegs
            000036fc    _gUsbContext
            000037c4    _gCtrlTransfer
            000037d2    _gBulkInTransfer
            000037e0    _gBulkOutTransfer
            000037ee    _gIsoInTransfer
            000037fc    _gIsoOutTransfer
            0000380a    _gIntInTransfer
            00003818    _gEpStatus
            000038a8    _gUsbEpHandle
            000038b8    _XmitL_Sine_1K
            000038e8    _XmitL_Sine_2K
            00003918    _XmitR_Sine_1K
            00003948    _XmitR_Sine_2K
            00003978    _RcvL_Sine
            000039a8    _RcvR_Sine
            000039d8    _DMA_Count
            000039d9    _Error_Count_L
            000039da    _Error_Count_R
            000039db    _DMA_Done
            000039dc    __ftable
            00003a54    __tmpnams
            00003af4    __ft_end
            00003c06    _hSpi
            00003cd8    _pMmcsdContObj
            00003d18    _mmcsdHandle
            00003d1a    _mmcCardObj
            00003d38    _sdCardIdObj
            00003d48    _sdCardCsdObj
            00003d6a    _cardAddr
            00003d6c    _mmcStatus
            00003df2    _wall_clk_ctr
            00003df4    _stackStruct
            00003df6    _pxCurrentTCB
            00003ed7    _I2S_RCV_L
            00003f07    _I2S_RCV_R
            00003f37    _Buf_Address
            00003f6e    _pxCurrentCoRoutine
            00003fa0    _fsError
            00003fa1    _ouError
            00003fa2    _portFLAGS_INT_ENABLED
            00003fa3    _portFLAGS_INT_ENABLED_POPPED
            00003fa4    _save_xsp
            00003fa6    _save_xssp
            00003fa8    _save_xar7
            00003faa    _save_xar6
            00003fab    _DBSTAT_LOW
            00003fac    _tickIRQctr
            00003fae    _DBSTAT_HIGH
            00003faf    _STATUS0_LOW
            00003fb0    _STATUS0_HIGH
            00003fb1    _STATUS1_LOW
            00003fb2    _STATUS1_HIGH
            00003fb3    _STATUS2_LOW
            00003fb4    _STATUS2_HIGH
            00003fb5    _tZero
            00003fb6    _tOne
            00003fb7    _tTwo
            00003fb8    _tThree
            00003fb9    _usCriticalNesting
            00003fba    _uartObj
            00003fce    _hUart
            00003fd0    _Buf_sec
            00003fd3    _Buf_min
            00003fd6    _Buf_hour
            00003fd9    _Buf_day
            00003fdc    _Buf_month
            00003fdf    _Buf_year
            00003fe2    _Flag_RTC
            00003fe3    _Conunt_RTC
            00003fe4    _gI2cObj
            00003ff4    _i2cHandle
            00004000    _xSuspendedTestQueue
            0000400c    _xMediumPriorityTask
            0000400e    _xHighPriorityTask
            00004010    _xHighestPriorityTask
            00004030    _SarObj
            00004033    _preKey
            00004034    _SarHandle
            00004036    _keyCnt1
            00004037    _keyCnt2
            00004038    _fSineWave
            00004039    _f1KToneOn
            0000403a    _f2KToneOn
            00004044    _led_tsk_ctr
            0000404c    _GpioObj
            0000404e    _hGpio
            00004052    _LED_Blink_ctr
            00004058    __lock
            0000405a    __unlock
            0000405c    __cleanup_ptr
            0000405e    __dtors_ptr
            00004060    _fTimer
            00004061    _fTimer02
            00004062    _Timer0_Int_CTR
            00004063    _Timer2_Int_CTR
            00004068    _hI2s
            0000406a    __sys_memory
            00006bb0    __ctypes_
00010000                _i2s0_read_CR
00010006                _i2s0_write_CR
0001000c                _i2s0_read_SRGR
00010012                _i2s0_write_SRGR
00010018                _i2s0_read_TXL_LSW
0001001e                _i2s0_write_TXL_LSW
00010024                _i2s0_read_TXL_MSW
0001002a                _i2s0_write_TXL_MSW
00010030                _i2s0_read_TXR_LSW
00010036                _i2s0_write_TXR_LSW
0001003c                _i2s0_read_TXR_MSW
00010042                _i2s0_write_TXR_MSW
00010048                _i2s0_read_INTR
0001004e                _i2s0_read_INT_MASK
00010054                _i2s0_write_INT_MASK
0001005a                _i2s0_read_RXL_LSW
00010060                _i2s0_write_RXL_LSW
00010066                _i2s0_read_RXL_MSW
0001006c                _i2s0_write_RXL_MSW
00010072                _i2s0_read_RXR_LSW
00010078                _i2s0_write_RXR_LSW
0001007e                _i2s0_read_RXR_MSW
00010084                _i2s0_write_RXR_MSW
0001008a                _i2s1_read_CR
00010090                _i2s1_write_CR
00010096                _i2s1_read_SRGR
0001009c                _i2s1_write_SRGR
000100a2                _i2s1_read_TXL_LSW
000100a8                _i2s1_write_TXL_LSW
000100ae                _i2s1_read_TXL_MSW
000100b4                _i2s1_write_TXL_MSW
000100ba                _i2s1_read_TXR_LSW
000100c0                _i2s1_write_TXR_LSW
000100c6                _i2s1_read_TXR_MSW
000100cc                _i2s1_write_TXR_MSW
000100d2                _i2s1_read_INTR
000100d8                _i2s1_read_INT_MASK
000100de                _i2s1_write_INT_MASK
000100e4                _i2s1_read_RXL_LSW
000100ea                _i2s1_write_RXL_LSW
000100f0                _i2s1_read_RXL_MSW
000100f6                _i2s1_write_RXL_MSW
000100fc                _i2s1_read_RXR_LSW
00010102                _i2s1_write_RXR_LSW
00010108                _i2s1_read_RXR_MSW
0001010e                _i2s1_write_RXR_MSW
00010114                _i2s2_read_CR
0001011a                _i2s2_write_CR
00010120                _i2s2_read_SRGR
00010126                _i2s2_write_SRGR
0001012c                _i2s2_read_TXL_LSW
00010132                _i2s2_write_TXL_LSW
00010138                _i2s2_read_TXL_MSW
0001013e                _i2s2_write_TXL_MSW
00010144                _i2s2_read_TXR_LSW
0001014a                _i2s2_write_TXR_LSW
00010150                _i2s2_read_TXR_MSW
00010156                _i2s2_write_TXR_MSW
0001015c                _i2s2_read_INTR
00010162                _i2s2_read_INT_MASK
00010168                _i2s2_write_INT_MASK
0001016e                _i2s2_read_RXL_LSW
00010174                _i2s2_write_RXL_LSW
0001017a                _i2s2_read_RXL_MSW
00010180                _i2s2_write_RXL_MSW
00010186                _i2s2_read_RXR_LSW
0001018c                _i2s2_write_RXR_LSW
00010192                _i2s2_read_RXR_MSW
00010198                _i2s2_write_RXR_MSW
0001019e                _i2s3_read_CR
000101a4                _i2s3_write_CR
000101aa                _i2s3_read_SRGR
000101b0                _i2s3_write_SRGR
000101b6                _i2s3_read_TXL_LSW
000101bc                _i2s3_write_TXL_LSW
000101c2                _i2s3_read_TXL_MSW
000101c8                _i2s3_write_TXL_MSW
000101ce                _i2s3_read_TXR_LSW
000101d4                _i2s3_write_TXR_LSW
000101da                _i2s3_read_TXR_MSW
000101e0                _i2s3_write_TXR_MSW
000101e6                _i2s3_read_INTR
000101ec                _i2s3_read_INT_MASK
000101f2                _i2s3_write_INT_MASK
000101f8                _i2s3_read_RXL_LSW
000101fe                _i2s3_write_RXL_LSW
00010204                _i2s3_read_RXL_MSW
0001020a                _i2s3_write_RXL_MSW
00010210                _i2s3_read_RXR_LSW
00010216                _i2s3_write_RXR_LSW
0001021c                _i2s3_read_RXR_MSW
00010222                _i2s3_write_RXR_MSW
00010228                _enable_i2s0
00010236                _enable_i2s1
00010244                _enable_i2s2
00010252                _enable_i2s3
00010260                _disable_i2s0
0001026e                _disable_i2s1
0001027c                _disable_i2s2
0001028a                _disable_i2s3
000103b9                __cleanup
00010413                _freopen
000104dc                _fopen
00010518                _WDTIM_open
00010590                _WDTIM_start
000105d8                _WDTIM_stop
00010620                _WDTIM_getCnt
00010650                _WDTIM_close
00010694                _WDTIM_service
000106c8                _WDTIM_config
00010734                _WDTIM_getConfig
0001077e                __remull
000107cc                __remlli
000107fb                __mpylli
000108b3                __divull
000109a7                __divlli
000109dc                __addd
00010c38                _Timer_isr
00010d64                _Timer02_isr
00010e90                _set_dma1_ch0_stop
00010ea8                _set_dma0_ch0_stop
00010ec0                _set_dma1_ch1_stop
00010ed8                _set_dma0_ch1_stop
00010ef0                _set_dma1_ch0_i2s2_Lout
00010f5c                _set_dma0_ch0_i2s0_Lout
00010fc8                _set_dma1_ch1_i2s2_Rout
00011034                _set_dma0_ch1_i2s0_Rout
000110a0                _enable_dma_int
000110b0                _vStartQueueOverwriteTask
000111d0                _xIsQueueOverwriteTaskStillRunning
00011200                _vQueueOverwritePeriodicISRDemo
000112d0                _EZDSP5535_LED_init
00011308                _EZDSP5535_LED_getall
0001135c                _EZDSP5535_LED_setall
000113cc                _EZDSP5535_LED_on
00011404                _EZDSP5535_LED_off
00011438                _EZDSP5535_LED_toggle
00011480                _EZDSP5535_XF_on
0001148c                _EZDSP5535_XF_off
00011498                _EZDSP5535_XF_get
000114a8                _EZDSP5535_XF_toggle
000114c7                __neqd
000114fb                __lssd
00011543                __leqd
00011590                __gtrd
000115db                __geqd
00011625                __eqld
00011659                __cmpd
000116b4                _pxPortInitialiseStack
0001185c                _vPortEndScheduler
00011860                _prvSetupTimerInterrupt
00011874                _vStartPolledQueueTasks
00011a00                _xArePollingQueuesStillRunning
00011a2c                _vListInitialise
00011a70                _vListInitialiseItem
00011a84                _vListInsertEnd
00011ad8                _vListInsert
00011b78                _uxListRemove
00011bdc                _EZDSP5535_OSD9616_send
00011c04                _EZDSP5535_OSD9616_multiSend
00011c50                _EZDSP5535_OSD9616_init
00011d34                _EZDSP5535_OSD9616_printLetter
00011d74                _spiflash_test
00011eff                _fputs
00012034                _puts
00012062                __mpyd
000121b0                _EZDSP5535_I2S_init
0001220c                _EZDSP5535_I2S_readLeft
00012240                _EZDSP5535_I2S_writeLeft
00012270                _EZDSP5535_I2S_readRight
00012294                _EZDSP5535_I2S_writeRight
000122b0                _EZDSP5535_I2S_close
000122c4                _vStartIntegerMathTasks
00012398                _xAreIntegerMathsTaskStillRunning
000123c8                _enable_rtc_second_int
000123d4                _reset_RTC
00012490                _convert_number_to_string
000124c4                _vStartLEDFlashTasks
000125ae                _setvbuf
00012694                __wrt_ok
00012714                __rd_ok
00012771                __doflush
000127da                _fflush
00012834                _pvPortMalloc
000128d0                _vPortFree
000128dc                _vPortInitialiseBlocks
000128e4                _xPortGetFreeHeapSize
000128f2                _writemsg
000129a7                C$$IO$$
000129ac                _mem_test
00012a5b                _fputc
00012a5b                _putc
00012af2                _putchar
00012b04                _EZDSP5535_UART_open
00012b74                _EVM5515_UART_putChar
00012b8c                _EVM5515_UART_getChar
00012ba6                __divul
00012c48                _vParTestInitialise
00012c4c                _vParTestSetLED
00012c64                _vParTestToggleLED
00012ce4                _EZDSP5535_I2C_init
00012d1c                _EZDSP5535_I2C_reset
00012d28                _EZDSP5535_I2C_write
00012d50                _EZDSP5535_I2C_read
00012d78                _IRQ_plug
00012e04                _set_i2s2_master
00012e38                _set_i2s0_master
00012e6c                _set_i2s0_slave
00012e90                _EZDSP5535_GPIO_init
00012ebc                _EZDSP5535_GPIO_setDirection
00012ee0                _EZDSP5535_GPIO_setOutput
00012efc                _EZDSP5535_GPIO_getInput
00012f1a                reset_isr
00012f99                _ltoa
00013016                _fclose
00013091                __frcmpyd
00013107                __frcmpyd_div
0001317a                __remul
000131ec                __fixdli
0001325b                _readmsg
000132c8                _fseek
00013333                __fltlid
0001339a                _atoi
000133f8                _Timer0Init
00013420                _Timer02Init
00013444                _StartTimer0
0001344c                _StartTimer02
00013454                __fltuld
000134b0                _EZDSP5535_wait
000134e4                _EZDSP5535_waitusec
000134f8                _EZDSP5535_init
00013506                _printf
00013558                _RTC_Isr
000135a6                _auto_init
000135f3                __args_main
0001363e                __remli
00013689                __divli
000136d1                _memcpy
00013710                _exit
0001374e                _c_int00
00013782                __fixdi
000137ac                I$$UDIV
000137ac                __divu
000137c1                I$$UMOD
000137c1                __remu
000137d6                _memccpy
000137f9                ___isinf
00013813                __subd
00013827                I$$LMPY
00013827                __mpyli
0001383a                __register_unlock
00013842                __register_lock
0001384a                __nop
0001384c                _memset
0001385d                _strlen
0001386e                __negd
0001387e                __fltud
0001388c                _abort
0001388d                C$$EXIT
00020000                _MMC_init
00020038                _MMC_open
00020248                _MMC_close
00020288                _MMC_setCardType
000202bc                _MMC_setCardPtr
000202f0                _MMC_setCallBack
00020330                _MMC_getNumberOfCards
00020368                _MMC_clearResponse
00020444                _MMC_ierEnable
00020488                _MMC_ierDisable
000204bc                _MMC_intEnable
000204e4                _MMC_eventEnable
000206e0                _MMC_eventDisable
000208b8                _MMC_drrdy
00020900                _MMC_dxrdy
00020948                _MMC_saveStatus
00020988                _MMC_getStatus
000209ec                _MMC_setupNative
00020aa0                _MMC_config
00020b3c                _MMC_getConfig
00020bdc                _MMC_sendCmd
00020c90                _MMC_sendGoIdle
00020d18                _MMC_stop
00020df0                _MMC_deselectCard
00020ec0                _MMC_selectCard
00021450                _MMC_sendOpCond
000214f4                _MMC_setRca
000215cc                _SD_sendRca
000216c8                _MMC_sendAllCID
000218a0                _SD_sendAllCID
00021a8c                _MMC_getCardCsd
00021ee0                _SD_getCardCsd
000225bc                _MMC_read
00022fd8                _MMC_write
00023c14                _MMC_setDmaHandle
00023c74                _MMC_setDataTransferCallback
00023cc4                _MMC_setDmaChanConfig
00023da4                _MMC_setEndianMode
00023e2c                _MMC_setBlockLength
00023ec4                _MMC_setWriteBlkEraseCnt
00023ff4                _SD_setBusWidth
00024164                _MMC_getCardStatus
00024260                _SD_configurePullup
0002438c                _MMC_checkReadDmaDone
00024c30                _MSC_Open
00024c54                _MSC_OpenFullspeed
00024fa0                _MSC_Close
00024fdc                _MSC_SetLunAttr
000251cc                _MSC_Ctrl
000253c4                _MSC_Bulk
000254c0                _MSC_GetLunLockedStatus
000254f0                _MSC_GetactivityFlagStatus
0002550c                _MSC_GetsuspendFlagStatus
000259b4                _MSC_HandleStateWaitForCBW
00025c58                _MSC_ExecuteRead
0002604c                _MSC_ExecuteWrite
00026600                _MSC_HandleTestUnitReady
00026824                _MSC_HandlePreventAllowMediaRemoval
000269c8                _MSC_HandleReadCapacity
00026c18                _MSC_reqGetDescriptor
00026e50                _MSC_reqBotMscReset
00026ebc                _MSC_sendCswWithPhaseError
00026f24                _MSC_handleDataDirMisMatch
00026fa0                _SDIO_init
00026fe0                _SDIO_open
000270ac                _SDIO_close
000270d4                _SDIO_config
000271ac                _SDIO_detectCard
00027518                _SDIO_initCard
0002799c                _SDIO_resetCard
00027a84                _SDIO_getRca
00027b4c                _SDIO_deselectCard
00027c0c                _SDIO_selectCard
00027cd0                _SDIO_sendCommand
00027da4                _SDIO_getResponse
00027f38                _SDIO_clearResponse
00028014                _SDIO_getStatus
0002807c                _SDIO_getSdioStatus
000280e8                _SDIO_eventEnable
00028310                _SDIO_eventDisable
00028508                _SDIO_readWaitEnable
00028540                _SDIO_readWaitDisable
00028578                _SDIO_readSingleByte
000286a4                _SDIO_writeSingleByte
000287a4                _SDIO_readBytes
00028be8                _SDIO_writeBytes
00029028                _SDIO_readBlocks
00029468                _SDIO_writeBlocks
000298bc                _SDIO_setEndianMode
0002993c                _SDIO_setClock
00029c58                _USB_init
0002a07c                _USB_resetDev
0002a2ac                _USB_initEndptObj
0002a694                _USB_getEvents
0002a70c                _USB_peekEvents
0002a77c                _USB_getSetupPacket
0002a824                _USB_postTransaction
0002a9e0                _USB_isTransactionDone
0002aa68                _USB_bytesRemaining
0002aafc                _USB_stallEndpt
0002ac70                _USB_clearEndptStall
0002ae58                _USB_getEndptStall
0002aedc                _USB_epNumToHandle
0002b00c                _USB_abortTransaction
0002b16c                _USB_abortAllTransaction
0002b1c0                _USB_connectDev
0002b1f4                _USB_disconnectDev
0002b224                _USB_setRemoteWakeup
0002b254                _USB_getRemoteWakeupStat
0002b26c                _USB_issueRemoteWakeup
0002b2bc                _USB_setDevAddr
0002b304                _USB_getFrameNo
0002b320                _USB_suspendDevice
0002b364                _USB_selfwakeup
0002b3d0                _USB_initPLL
0002b454                _USB_setParams
0002b4b0                _USB_getMaxPower
0002b4d0                _USB_setFullSpeedMode
0002b504                _USB_getDataCountReadFromFifo
0002b55c                _USB_findFifoSize
0002b6e0                _USB_coreEventProcessEp0
0002bb9c                _DMA_init
0002bbd4                _DMA_open
0002bcc0                _DMA_close
0002bce0                _DMA_config
0002c8b4                _DMA_getConfig
0002ce24                _DMA_start
0002cf34                _DMA_stop
0002d038                _DMA_reset
0002d324                _DMA_swapWords
0002d39c                _DMA_getLastTransferType
0002d448                _xTaskCreate
0002d760                _vTaskDelete
0002d824                _vTaskDelayUntil
0002d8b8                _vTaskDelay
0002d8e4                _uxTaskPriorityGet
0002d92c                _uxTaskPriorityGetFromISR
0002d950                _vTaskPrioritySet
0002da98                _vTaskSuspend
0002dbf8                _vTaskResume
0002dcac                _xTaskResumeFromISR
0002dd40                _vTaskStartScheduler
0002dd9c                _vTaskEndScheduler
0002ddb0                _vTaskSuspendAll
0002ddbc                _xTaskResumeAll
0002ded4                _xTaskGetTickCount
0002df10                _xTaskGetTickCountFromISR
0002df28                _uxTaskGetNumberOfTasks
0002df30                _pcTaskGetName
0002df50                _xTaskIncrementTick
0002e0bc                _vTaskSwitchContext
0002e154                _vTaskPlaceOnEventList
0002e178                _vTaskPlaceOnUnorderedEventList
0002e1b0                _xTaskRemoveFromEventList
0002e250                _vTaskRemoveFromUnorderedEventList
0002e2d4                _vTaskSetTimeOutState
0002e31c                _vTaskInternalSetTimeOutState
0002e33c                _xTaskCheckForTimeOut
0002e3ec                _vTaskMissedYield
0002e538                _uxTaskGetStackHighWaterMark
0002e5d0                _uxTaskResetEventItemValue
0002e600                _ulTaskNotifyTake
0002e6d4                _xTaskNotifyWait
0002e7d0                _xTaskGenericNotify
0002e918                _xTaskGenericNotifyFromISR
0002ea64                _vTaskNotifyGiveFromISR
0002eb28                _xTaskNotifyStateClear
0002ff97                __printfi
000301dc                _NAND_init
00030270                _NAND_setup
0003078c                _NAND_getBankInfo
00030850                _NAND_setLatchEnableOffset
0003088c                _NAND_isStatusWriteProtected
00030974                _NAND_sendCommand
000309a0                _NAND_checkCommandStatus
00030a08                _NAND_setAddress
00030a4c                _NAND_enableHwECC
00030b74                _NAND_disableHwECC
00030c5c                _NAND_readECC
00030e10                _NAND_readNBytes
00030f24                _NAND_writeNBytes
00031100                _NAND_hasRandomRead
00031130                _NAND_hasRandomWrite
00031160                _NAND_hasCacheProg
00031190                _NAND_hasCopyBack
000311c0                _NAND_intrEnable
00031220                _NAND_intrDisable
00031280                _NAND_getIntrNum
000312a0                _NAND_intrReadAT
000312e0                _NAND_intrReadLT
00031324                _NAND_intrReadWR
00031368                _NAND_intrClear
00031454                _UART_init
00031510                _UART_setup
000319b8                _UART_config
00031ac0                _UART_setupBaudRate
00031bcc                _UART_reset
00031c14                _UART_resetOff
00031c60                _UART_eventEnable
00031cf8                _UART_eventDisable
00031d88                _UART_read
00031eb4                _UART_write
00032038                _UART_fgetc
000320d8                _UART_fputc
00032160                _UART_fgets
00032290                _UART_fputs
00032380                _UART_getEventId
000323a8                _UART_getConfig
00032468                _UART_setCallback
000324d0                _xQueueGenericReset
0003259c                _xQueueGenericCreate
0003262c                _xQueueGenericSend
000327b4                _xQueueGenericSendFromISR
00032840                _xQueueGiveFromISR
000328c8                _xQueueReceive
00032a50                _xQueueSemaphoreTake
00032bc8                _xQueuePeek
00032d54                _xQueueReceiveFromISR
00032de0                _xQueuePeekFromISR
00032e24                _uxQueueMessagesWaiting
00032e60                _uxQueueSpacesAvailable
00032ea8                _uxQueueMessagesWaitingFromISR
00032ec0                _vQueueDelete
00033128                _xQueueIsQueueEmptyFromISR
00033194                _xQueueIsQueueFullFromISR
000331bc                _xQueueCRSend
00033250                _xQueueCRReceive
00033314                _xQueueCRSendFromISR
00033368                _xQueueCRReceiveFromISR
00033404                _DAT_open
000334dc                _DAT_close
00033670                _DAT_copy
00033b6c                _DAT_fill
0003407c                _DAT_wait
00034244                _AC_Open
0003448c                _AC_Close
000344c8                _AC_Ctrl
000346c0                _AC_Iso
0003475c                _AC_GetactivityFlagStatus
00034778                _AC_GetsuspendFlagStatus
00034790                _AC_initDescriptors
00034a40                _AC_reqGetDescriptor
00034c18                _AC_reqSetCurrent
00034cf4                _AC_reqGetCurrent
00034db8                _AC_reqGetMinimum
00034dfc                _AC_reqGetMaximum
00034e40                _AC_reqGetResolution
00034e84                _AC_reqSetInterface
00034fd0                _CDC_Open
00034ff4                _CDC_OpenFullspeed
000351c8                _CDC_Close
00035204                _CDC_GetactivityFlagStatus
0003521c                _CDC_GetsuspendFlagStatus
00035234                _CDC_eventHandler
00035530                _CDC_bulkOutHandler
00035630                _CDC_bulkInHandler
00035920                _CDC_getData
000359b0                _CDC_putData
00035ba4                _I2C_init
00035c50                _I2C_config
00035db8                _I2C_getConfig
00035e90                _I2C_setup
0003608c                _I2C_write
000362d0                _I2C_read
000364f0                _I2C_eventEnable
00036624                _I2C_eventDisable
00036744                _I2C_setCallback
000367d4                _I2C_getEventId
000367f0                _MMC_initState
00036934                _MMC_readWriteControl
00036c14                _MMC_issueReadCommand
00036dd0                _MMC_readNextWord
00036e40                _MMC_readNextWord1
00036eb4                _MMC_readNextNWords
00036f24                _MMC_writeSector
0003700c                _MMC_readNSectors
000370e4                _MMC_writeNSectors
000371bc                _MMC_read_CID
00037228                _MMC_read_CSD
00037294                _MMC_writeSectorFlush
000372a0                _MMC_commandReadyStatusCheck
000372ac                _MMC_dataReadyStatusCheck
000372b8                _MMC_busyStatusCheck
000372c4                _MMC_getSerialID
000372d4                _MMC_file_system_format
000372e0                _MMC_reset
000372ec                _MMC_get_time
000372f0                _MMC_get_mod_time
000372f4                _MMC_get_date
000372f8                _MMC_get_mod_date
000372fc                _MMC_flushFat
00037330                _SAR_init
00037390                _SAR_deInit
000373b0                _SAR_chanInit
000373cc                _SAR_chanOpen
00037430                _SAR_chanClose
000374b4                _SAR_chanConfig
0003752c                _SAR_getConfig
000375a0                _SAR_chanSetup
000377b4                _SAR_chanCycSet
00037804                _SAR_startConversion
00037838                _SAR_stopConversion
00037880                _SAR_readData
000378c4                _SAR_A2DMeasParamSet
00037d40                _SAR_GPODirSet
00037e1c                _SAR_getStatus
00037e5c                _I2S_open
00037fa0                _I2S_setup
00038288                _I2S_close
00038334                _I2S_read
000385f0                _I2S_write
00038748                _I2S_reset
000387f4                _I2S_transEnable
000388cc                _RTC_reset
000388dc                _RTC_start
00038900                _RTC_stop
00038908                _RTC_config
000389f4                _RTC_getConfig
00038aa4                _RTC_setTime
00038b20                _RTC_getTime
00038b6c                _RTC_setDate
00038bdc                _RTC_getDate
00038c1c                _RTC_setAlarm
00038cf0                _RTC_setPeriodicInterval
00038da4                _RTC_eventEnable
00038e90                _RTC_eventDisable
00038f44                _RTC_getEventId
00038f98                _RTC_decToBcd
00038fd8                _RTC_bcdToDec
00039018                _RTC_setCallback
000390a8                _RTC_setCompensation
000390f4                _LCD_init
0003911c                _LCD_open
00039160                _LCD_setup
000395bc                _LCD_configDMA
0003990c                _LCD_close
0003992c                _oled_test
0003a14c                _GPIO_open
0003a190                _GPIO_close
0003a1b4                _GPIO_config
0003a23c                _GPIO_getConfig
0003a2c4                _GPIO_read
0003a348                _GPIO_write
0003a3ec                _GPIO_configBit
0003a534                _GPIO_disableInt
0003a5b4                _GPIO_enableInt
0003a640                _GPIO_clearInt
0003a6cc                _GPIO_statusBit
0003a754                _GPIO_reset
0003a7e4                _SPI_init
0003a848                _SPI_open
0003a87c                _SPI_close
0003a8a8                _SPI_config
0003ab30                _SPI_deInit
0003ab5c                _SPI_read
0003ac40                _SPI_write
0003ad2c                _SPI_dataTransaction
0003ada0                _vCreateBlockTimeTasks
0003b2fc                _xAreBlockTimeTestTasksStillRunning
0003b34b                _write
0003b48d                _unlink
0003b4c0                _rename
0003b519                _remove_device
0003b54f                _read
0003b5fd                _open
0003b6bc                _lseek
0003b722                _find_registered_device
0003b72b                _close
0003b79e                _add_device
0003b890                _IRQ_init
0003b918                _IRQ_clear
0003b984                _IRQ_clearAll
0003b994                _IRQ_config
0003ba1c                _IRQ_getConfig
0003baa4                _IRQ_disable
0003bb24                _IRQ_disableAll
0003bb34                _IRQ_enable
0003bbc0                _IRQ_restore
0003bc30                _IRQ_getArg
0003bc74                _IRQ_setArg
0003bca8                _IRQ_map
0003bcd4                _IRQ_setVecs
0003bd08                _IRQ_test
0003bd7c                _IRQ_globalDisable
0003bd98                _IRQ_globalEnable
0003bdb4                _IRQ_globalRestore
0003bdc8                _getenv
0003be43                _HOSTwrite
0003bed0                _HOSTunlink
0003bf3a                _HOSTtime
0003bf98                _HOSTrename
0003c046                _HOSTread
0003c0d3                _HOSTopen
0003c172                _HOSTlseek
0003c227                _HOSTclose
0003c292                _HOSTclock
0003c2f0                _EZDSP5535_SDCARD_init
0003c698                _EZDSP5535_SDCARD_read
0003c6cc                _EZDSP5535_SDCARD_write
0003c700                _EZDSP5535_SDCARD_close
0003c7c8                _xEventGroupCreate
0003c7f0                _xEventGroupSync
0003c918                _xEventGroupWaitBits
0003ca54                _xEventGroupClearBits
0003caa8                _xEventGroupGetBitsFromISR
0003cac8                _xEventGroupSetBits
0003cbdc                _vEventGroupDelete
0003cc1c                _vEventGroupSetBitsCallback
0003cc30                _vEventGroupClearBitsCallback
0003cc7f                _free
0003cd4b                _minit
0003cdb0                _malloc
0003cea5                _realloc
0003d056                _max_free
0003d0b0                _free_memory
0003d106                _chkheap
0003d10e                _calloc
0003d134                _xCoRoutineCreate
0003d210                _vCoRoutineAddToDelayedList
0003d408                _vCoRoutineSchedule
0003d50c                _xCoRoutineRemoveFromEventList
0003d55c                _vStartQueuePeekTasks
0003d948                _xAreQueuePeekTasksStillRunning
0003d980                _xPortStartScheduler
0003da7d                _vTickISR
0003dc01                _vPortYield
0003dd6c                _vStartMathTasks
0003e104                _xAreMathsTaskStillRunning
0003e13e                __divd
0003e50c                _EZDSP5535_SPIFLASH_init
0003e570                _EZDSP5535_SPIFLASH_status
0003e5b4                _EZDSP5535_SPIFLASH_erase
0003e6b8                _EZDSP5535_SPIFLASH_read
0003e768                _EZDSP5535_SPIFLASH_write
0003e8d0                _main
0003ea78                _vApplicationIdleHook
0003eaac                _InitSystem
0003eb14                _ConfigPort
0003eb1c                _SYS_GlobalIntEnable
0003eb24                _SYS_GlobalIntDisable
0003eb38                _BlinkLED
0003eb70                _GenerateAudioTone
0003ebfc                _systemInit
0003ec74                _vApplicationMallocFailedHook
0003ec7c                _vApplicationStackOverflowHook
0003ec8c                _MEM_init
0003ec90                _MEM_enableRetentionMode
0003ecd4                _MEM_disableRetentionMode
0003ed18                _MEM_enablePartialRetentionMode
0003ee60                _MEM_disablePartialRetentionMode
0003ef84                _MEM_setmSDRAMClock
0003efc0                _MEM_getmSDRAMClock
0003efd4                _vStartDynamicPriorityTasks
0003f2b4                _xAreDynamicPriorityTasksStillRunning
0003f314                _GPT_open
0003f3d8                _GPT_reset
0003f454                _GPT_close
0003f4cc                _GPT_start
0003f4fc                _GPT_stop
0003f528                _GPT_getCnt
0003f564                _GPT_config
0003f60b                _AIC3254_init
0003f8fc                _vStartSemaphoreTasks
0003fb7c                _xAreSemaphoreTasksStillRunning
0003fbf8                _PLL_init
0003fc30                _PLL_config
0003fd54                _PLL_enable
0003fdbc                _PLL_bypass
0003fe0c                _PLL_reset
0003fe78                _EZDSP5535_SAR_init
0003ff40                _EZDSP5535_SAR_getKey
0003fff4                _remove
            00020000    ___cinit__
            00020000    cinit
            000202e0    __CIOBUF_
0004ce00                _Reset
0004cf00                _RST
0004cf00                _VECSTART
ffffffff                .bss
ffffffff                .data
ffffffff                .text
ffffffff                ___binit__
ffffffff                ___bss__
ffffffff                ___c_args__
ffffffff                ___data__
ffffffff                ___edata__
ffffffff                ___end__
ffffffff                ___etext__
ffffffff                ___pinit__
ffffffff                ___text__
ffffffff                binit
ffffffff                edata
ffffffff                end
ffffffff                etext
ffffffff                pinit

[875 symbols]
