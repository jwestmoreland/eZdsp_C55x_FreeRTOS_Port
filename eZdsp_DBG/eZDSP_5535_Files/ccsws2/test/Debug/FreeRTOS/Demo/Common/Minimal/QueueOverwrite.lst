TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    1

    1422              ; Temporary Registers Used: None
       1              ;*******************************************************************************
       2              ;* TMS320C55x C/C++ Codegen                                          PC v4.4.1 *
       3              ;* Date/Time created: Sat Sep 22 15:53:54 2018                                 *
       4              ;*******************************************************************************
       5                      .compiler_opts --hll_source=on --mem_model:code=flat --mem_model:data=large --object_format=coff --si
       6                      .mmregs
       7                      .cpl_on
       8                      .arms_on
       9                      .c54cm_off
      10                      .asg AR6, FP
      11                      .asg XAR6, XFP
      12                      .asg DPH, MDP
      13                      .model call=c55_std
      14                      .model mem=large
      15                      .noremark 5002  ; code respects overwrite rules
      16              ;*******************************************************************************
      17              ;* GLOBAL FILE PARAMETERS                                                      *
      18              ;*                                                                             *
      19              ;*   Architecture       : TMS320C55x                                           *
      20              ;*   Optimizing for     : Speed                                                *
      21              ;*   Memory             : Large Model (23-Bit Data Pointers)                   *
      22              ;*   Calls              : Normal Library ASM calls                             *
      23              ;*   Debug Info         : Standard TI Debug Information                        *
      24              ;*******************************************************************************
      25              
      26              $C$DW$CU        .dwtag  DW_TAG_compile_unit
      27                      .dwattr $C$DW$CU, DW_AT_name("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
      28                      .dwattr $C$DW$CU, DW_AT_producer("TMS320C55x C/C++ Codegen PC v4.4.1 Copyright (c) 1996-2012 Texas In
      29                      .dwattr $C$DW$CU, DW_AT_TI_version(0x01)
      30                      .dwattr $C$DW$CU, DW_AT_comp_dir("F:\eZdsp_DBG\eZDSP_5535_Files\ccsws2\test\Debug")
      31              ;******************************************************************************
      32              ;* CINIT RECORDS                                                              *
      33              ;******************************************************************************
      34 000000               .sect   ".cinit"
      35                      .align  1
      36 000000 0002          .field          2,16
      37 000001 0000-         .field          _ulLoopCounter+0,24
         000002 0000 
      38 000002 0000          .field          0,8
      39 000003 0000          .field  0,32                    ; _ulLoopCounter @ 0
         000004 0000 
      40              
      41 000005               .sect   ".cinit"
      42                      .align  1
      43 000005 0001          .field          1,16
      44 000006 0000-         .field          _xISRTestStatus+0,24
         000007 0200 
      45 000007 0200          .field          0,8
      46 000008 0001          .field  1,16                    ; _xISRTestStatus @ 0
      47              
      48 000009               .sect   ".cinit"
      49                      .align  1
      50 000009 0002          .field          2,16
      51 00000a 0000-         .field          _xISRQueue+0,24
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    2

         00000b 0400 
      52 00000b 0400          .field          0,8
      53 00000c 0000          .field  0,32                    ; _xISRQueue @ 0
         00000d 0000 
      54              
      55 00000e               .sect   ".cinit"
      56                      .align  1
      57 00000e 0002          .field          2,16
      58 00000f 0000-         .field          _ulCallCount$1+0,24
         000010 0600 
      59 000010 0600          .field          0,8
      60 000011 0000          .field  0,32                    ; _ulCallCount$1 @ 0
         000012 0000 
      61              
      62              
      63              $C$DW$1 .dwtag  DW_TAG_subprogram, DW_AT_name("xTaskCreate")
      64                      .dwattr $C$DW$1, DW_AT_TI_symbol_name("_xTaskCreate")
      65                      .dwattr $C$DW$1, DW_AT_type(*$C$DW$T$39)
      66                      .dwattr $C$DW$1, DW_AT_declaration
      67                      .dwattr $C$DW$1, DW_AT_external
      68              $C$DW$2 .dwtag  DW_TAG_formal_parameter
      69                      .dwattr $C$DW$2, DW_AT_type(*$C$DW$T$33)
      70              $C$DW$3 .dwtag  DW_TAG_formal_parameter
      71                      .dwattr $C$DW$3, DW_AT_type(*$C$DW$T$44)
      72              $C$DW$4 .dwtag  DW_TAG_formal_parameter
      73                      .dwattr $C$DW$4, DW_AT_type(*$C$DW$T$46)
      74              $C$DW$5 .dwtag  DW_TAG_formal_parameter
      75                      .dwattr $C$DW$5, DW_AT_type(*$C$DW$T$30)
      76              $C$DW$6 .dwtag  DW_TAG_formal_parameter
      77                      .dwattr $C$DW$6, DW_AT_type(*$C$DW$T$24)
      78              $C$DW$7 .dwtag  DW_TAG_formal_parameter
      79                      .dwattr $C$DW$7, DW_AT_type(*$C$DW$T$50)
      80                      .dwendtag $C$DW$1
      81              
      82              
      83              $C$DW$8 .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueGenericSend")
      84                      .dwattr $C$DW$8, DW_AT_TI_symbol_name("_xQueueGenericSend")
      85                      .dwattr $C$DW$8, DW_AT_type(*$C$DW$T$39)
      86                      .dwattr $C$DW$8, DW_AT_declaration
      87                      .dwattr $C$DW$8, DW_AT_external
      88              $C$DW$9 .dwtag  DW_TAG_formal_parameter
      89                      .dwattr $C$DW$9, DW_AT_type(*$C$DW$T$22)
      90              $C$DW$10        .dwtag  DW_TAG_formal_parameter
      91                      .dwattr $C$DW$10, DW_AT_type(*$C$DW$T$36)
      92              $C$DW$11        .dwtag  DW_TAG_formal_parameter
      93                      .dwattr $C$DW$11, DW_AT_type(*$C$DW$T$53)
      94              $C$DW$12        .dwtag  DW_TAG_formal_parameter
      95                      .dwattr $C$DW$12, DW_AT_type(*$C$DW$T$40)
      96                      .dwendtag $C$DW$8
      97              
      98              
      99              $C$DW$13        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueuePeek")
     100                      .dwattr $C$DW$13, DW_AT_TI_symbol_name("_xQueuePeek")
     101                      .dwattr $C$DW$13, DW_AT_type(*$C$DW$T$39)
     102                      .dwattr $C$DW$13, DW_AT_declaration
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    3

     103                      .dwattr $C$DW$13, DW_AT_external
     104              $C$DW$14        .dwtag  DW_TAG_formal_parameter
     105                      .dwattr $C$DW$14, DW_AT_type(*$C$DW$T$22)
     106              $C$DW$15        .dwtag  DW_TAG_formal_parameter
     107                      .dwattr $C$DW$15, DW_AT_type(*$C$DW$T$30)
     108              $C$DW$16        .dwtag  DW_TAG_formal_parameter
     109                      .dwattr $C$DW$16, DW_AT_type(*$C$DW$T$53)
     110                      .dwendtag $C$DW$13
     111              
     112              
     113              $C$DW$17        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueuePeekFromISR")
     114                      .dwattr $C$DW$17, DW_AT_TI_symbol_name("_xQueuePeekFromISR")
     115                      .dwattr $C$DW$17, DW_AT_type(*$C$DW$T$39)
     116                      .dwattr $C$DW$17, DW_AT_declaration
     117                      .dwattr $C$DW$17, DW_AT_external
     118              $C$DW$18        .dwtag  DW_TAG_formal_parameter
     119                      .dwattr $C$DW$18, DW_AT_type(*$C$DW$T$22)
     120              $C$DW$19        .dwtag  DW_TAG_formal_parameter
     121                      .dwattr $C$DW$19, DW_AT_type(*$C$DW$T$30)
     122                      .dwendtag $C$DW$17
     123              
     124              
     125              $C$DW$20        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueReceive")
     126                      .dwattr $C$DW$20, DW_AT_TI_symbol_name("_xQueueReceive")
     127                      .dwattr $C$DW$20, DW_AT_type(*$C$DW$T$39)
     128                      .dwattr $C$DW$20, DW_AT_declaration
     129                      .dwattr $C$DW$20, DW_AT_external
     130              $C$DW$21        .dwtag  DW_TAG_formal_parameter
     131                      .dwattr $C$DW$21, DW_AT_type(*$C$DW$T$22)
     132              $C$DW$22        .dwtag  DW_TAG_formal_parameter
     133                      .dwattr $C$DW$22, DW_AT_type(*$C$DW$T$30)
     134              $C$DW$23        .dwtag  DW_TAG_formal_parameter
     135                      .dwattr $C$DW$23, DW_AT_type(*$C$DW$T$53)
     136                      .dwendtag $C$DW$20
     137              
     138              
     139              $C$DW$24        .dwtag  DW_TAG_subprogram, DW_AT_name("uxQueueMessagesWaiting")
     140                      .dwattr $C$DW$24, DW_AT_TI_symbol_name("_uxQueueMessagesWaiting")
     141                      .dwattr $C$DW$24, DW_AT_type(*$C$DW$T$24)
     142                      .dwattr $C$DW$24, DW_AT_declaration
     143                      .dwattr $C$DW$24, DW_AT_external
     144              $C$DW$25        .dwtag  DW_TAG_formal_parameter
     145                      .dwattr $C$DW$25, DW_AT_type(*$C$DW$T$23)
     146                      .dwendtag $C$DW$24
     147              
     148              
     149              $C$DW$26        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueGenericSendFromISR")
     150                      .dwattr $C$DW$26, DW_AT_TI_symbol_name("_xQueueGenericSendFromISR")
     151                      .dwattr $C$DW$26, DW_AT_type(*$C$DW$T$39)
     152                      .dwattr $C$DW$26, DW_AT_declaration
     153                      .dwattr $C$DW$26, DW_AT_external
     154              $C$DW$27        .dwtag  DW_TAG_formal_parameter
     155                      .dwattr $C$DW$27, DW_AT_type(*$C$DW$T$22)
     156              $C$DW$28        .dwtag  DW_TAG_formal_parameter
     157                      .dwattr $C$DW$28, DW_AT_type(*$C$DW$T$36)
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    4

     158              $C$DW$29        .dwtag  DW_TAG_formal_parameter
     159                      .dwattr $C$DW$29, DW_AT_type(*$C$DW$T$61)
     160              $C$DW$30        .dwtag  DW_TAG_formal_parameter
     161                      .dwattr $C$DW$30, DW_AT_type(*$C$DW$T$40)
     162                      .dwendtag $C$DW$26
     163              
     164              
     165              $C$DW$31        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueReceiveFromISR")
     166                      .dwattr $C$DW$31, DW_AT_TI_symbol_name("_xQueueReceiveFromISR")
     167                      .dwattr $C$DW$31, DW_AT_type(*$C$DW$T$39)
     168                      .dwattr $C$DW$31, DW_AT_declaration
     169                      .dwattr $C$DW$31, DW_AT_external
     170              $C$DW$32        .dwtag  DW_TAG_formal_parameter
     171                      .dwattr $C$DW$32, DW_AT_type(*$C$DW$T$22)
     172              $C$DW$33        .dwtag  DW_TAG_formal_parameter
     173                      .dwattr $C$DW$33, DW_AT_type(*$C$DW$T$30)
     174              $C$DW$34        .dwtag  DW_TAG_formal_parameter
     175                      .dwattr $C$DW$34, DW_AT_type(*$C$DW$T$61)
     176                      .dwendtag $C$DW$31
     177              
     178              
     179              $C$DW$35        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueGenericCreate")
     180                      .dwattr $C$DW$35, DW_AT_TI_symbol_name("_xQueueGenericCreate")
     181                      .dwattr $C$DW$35, DW_AT_type(*$C$DW$T$22)
     182                      .dwattr $C$DW$35, DW_AT_declaration
     183                      .dwattr $C$DW$35, DW_AT_external
     184              $C$DW$36        .dwtag  DW_TAG_formal_parameter
     185                      .dwattr $C$DW$36, DW_AT_type(*$C$DW$T$25)
     186              $C$DW$37        .dwtag  DW_TAG_formal_parameter
     187                      .dwattr $C$DW$37, DW_AT_type(*$C$DW$T$25)
     188              $C$DW$38        .dwtag  DW_TAG_formal_parameter
     189                      .dwattr $C$DW$38, DW_AT_type(*$C$DW$T$27)
     190                      .dwendtag $C$DW$35
     191              
     192 000000               .bss    _ulLoopCounter,2,0,2
     193              $C$DW$39        .dwtag  DW_TAG_variable, DW_AT_name("ulLoopCounter")
     194                      .dwattr $C$DW$39, DW_AT_TI_symbol_name("_ulLoopCounter")
     195                      .dwattr $C$DW$39, DW_AT_type(*$C$DW$T$69)
     196                      .dwattr $C$DW$39, DW_AT_location[DW_OP_addr _ulLoopCounter]
     197 000002               .bss    _xISRTestStatus,1,0,0
     198              $C$DW$40        .dwtag  DW_TAG_variable, DW_AT_name("xISRTestStatus")
     199                      .dwattr $C$DW$40, DW_AT_TI_symbol_name("_xISRTestStatus")
     200                      .dwattr $C$DW$40, DW_AT_type(*$C$DW$T$39)
     201                      .dwattr $C$DW$40, DW_AT_location[DW_OP_addr _xISRTestStatus]
     202 000004               .bss    _xISRQueue,2,0,2
     203              $C$DW$41        .dwtag  DW_TAG_variable, DW_AT_name("xISRQueue")
     204                      .dwattr $C$DW$41, DW_AT_TI_symbol_name("_xISRQueue")
     205                      .dwattr $C$DW$41, DW_AT_type(*$C$DW$T$22)
     206                      .dwattr $C$DW$41, DW_AT_location[DW_OP_addr _xISRQueue]
     207 000006               .bss    _ulCallCount$1,2,0,2
     208              ;       F:\ti\ccs8p1\ccsv8\tools\compiler\alt-install-ti-cgt-c55x_4.4.1\bin\acp55.exe -@f:\\AppData\\Local\\T
     209 000000               .sect   ".text"
     210                      .align 4
     211                      .global _vStartQueueOverwriteTask
     212              
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    5

     213              $C$DW$42        .dwtag  DW_TAG_subprogram, DW_AT_name("vStartQueueOverwriteTask")
     214                      .dwattr $C$DW$42, DW_AT_low_pc(_vStartQueueOverwriteTask)
     215                      .dwattr $C$DW$42, DW_AT_high_pc(0x00)
     216                      .dwattr $C$DW$42, DW_AT_TI_symbol_name("_vStartQueueOverwriteTask")
     217                      .dwattr $C$DW$42, DW_AT_external
     218                      .dwattr $C$DW$42, DW_AT_TI_begin_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     219                      .dwattr $C$DW$42, DW_AT_TI_begin_line(0x40)
     220                      .dwattr $C$DW$42, DW_AT_TI_begin_column(0x06)
     221                      .dwattr $C$DW$42, DW_AT_TI_max_frame_size(0x04)
     222                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 65,column 1,is_stmt,address _vSt
     223              
     224                      .dwfde $C$DW$CIE, _vStartQueueOverwriteTask
     225              $C$DW$43        .dwtag  DW_TAG_formal_parameter, DW_AT_name("uxPriority")
     226                      .dwattr $C$DW$43, DW_AT_TI_symbol_name("_uxPriority")
     227                      .dwattr $C$DW$43, DW_AT_type(*$C$DW$T$24)
     228                      .dwattr $C$DW$43, DW_AT_location[DW_OP_reg12]
     229              ;*******************************************************************************
     230              ;* FUNCTION NAME: vStartQueueOverwriteTask                                     *
     231              ;*                                                                             *
     232              ;*   Function Uses Regs : AC0,AC0,T0,T1,AR0,XAR0,AR1,XAR1,AR2,XAR2,SP,M40,SATA,*
     233              ;*                        SATD,RDM,FRCT,SMUL                                   *
     234              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
     235              ;*   Total Frame Size   : 4 words                                              *
     236              ;*                        (2 return address/alignment)                         *
     237              ;*                        (2 local values)                                     *
     238              ;*   Min System Stack   : 1 word                                               *
     239              ;*******************************************************************************
     240 000000       _vStartQueueOverwriteTask:
     241                      .dwcfi  cfa_offset, 1
     242                      .dwcfi  save_reg_to_mem, 91, -1
     243 000000 4EFD          AADD #-3, SP
     244                      .dwcfi  cfa_offset, 4
     245              $C$DW$44        .dwtag  DW_TAG_variable, DW_AT_name("uxPriority")
     246                      .dwattr $C$DW$44, DW_AT_TI_symbol_name("_uxPriority")
     247                      .dwattr $C$DW$44, DW_AT_type(*$C$DW$T$24)
     248                      .dwattr $C$DW$44, DW_AT_location[DW_OP_bregx 0x24 0]
     249              $C$DW$45        .dwtag  DW_TAG_variable, DW_AT_name("uxQueueLength")
     250                      .dwattr $C$DW$45, DW_AT_TI_symbol_name("_uxQueueLength")
     251                      .dwattr $C$DW$45, DW_AT_type(*$C$DW$T$25)
     252                      .dwattr $C$DW$45, DW_AT_location[DW_OP_bregx 0x24 1]
     253 000002 C400          MOV T0, *SP(#0) ; |65| 
     254                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 66,column 19,is_stmt
     255 000004 E602          MOV #1, *SP(#1) ; |66| 
         000006 01   
     256                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 70,column 2,is_stmt
     257              
     258 000007 A402          MOV *SP(#1), T0 ; |70| 
     259 000009 3D25  ||      MOV #2, T1
     260              
     261              $C$DW$46        .dwtag  DW_TAG_TI_branch
     262                      .dwattr $C$DW$46, DW_AT_low_pc(0x00)
     263                      .dwattr $C$DW$46, DW_AT_name("_xQueueGenericCreate")
     264                      .dwattr $C$DW$46, DW_AT_TI_call
     265              
     266 00000b 6C00          CALL #_xQueueGenericCreate ; |70| 
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    6

         00000d 0000!
     267 00000f 3D08  ||      MOV #0, AR0
     268              
     269                                                      ; call occurs [#_xQueueGenericCreate] ; |70| 
     270 000011 EB31          MOV XAR0, dbl(*(#_xISRQueue))
         000013 8500 
         000015 0004-
     271                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 74,column 2,is_stmt
     272 000017 7A00          MOV #(_prvQueueOverwriteTask >> 16) << #16, AC0 ; |74| 
         000019 000A%
     273 00001b EC31          AMOV #0, XAR2 ; |74| 
         00001d AE00 
         00001f 0000 
     274 000021 EC31          AMOV #0, XAR1 ; |74| 
         000023 9E00 
         000025 0000 
     275 000027 7600          MOV #128, T0 ; |74| 
         000029 8048 
     276 00002b A500          MOV *SP(#0), T1 ; |74| 
     277 00002d 7E00          OR #(_prvQueueOverwriteTask & 0xffff), AC0, AC0 ; |74| 
         00002f 0000%
     278 000031 EC31          AMOV #$C$FSL1, XAR0 ; |74| 
         000033 8E00 
         000035 0000+
     279              $C$DW$47        .dwtag  DW_TAG_TI_branch
     280                      .dwattr $C$DW$47, DW_AT_low_pc(0x00)
     281                      .dwattr $C$DW$47, DW_AT_name("_xTaskCreate")
     282                      .dwattr $C$DW$47, DW_AT_TI_call
     283 000037 6C00          CALL #_xTaskCreate ; |74| 
         000039 0000!
     284                                                      ; call occurs [#_xTaskCreate] ; |74| 
     285                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 75,column 1,is_stmt
     286 00003b 4E03          AADD #3, SP
     287                      .dwcfi  cfa_offset, 1
     288              $C$DW$48        .dwtag  DW_TAG_TI_branch
     289                      .dwattr $C$DW$48, DW_AT_low_pc(0x00)
     290                      .dwattr $C$DW$48, DW_AT_TI_return
     291 00003d 4804          RET
     292                                                      ; return occurs
     293                      .dwattr $C$DW$42, DW_AT_TI_end_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     294                      .dwattr $C$DW$42, DW_AT_TI_end_line(0x4b)
     295                      .dwattr $C$DW$42, DW_AT_TI_end_column(0x01)
     296                      .dwendentry
     297                      .dwendtag $C$DW$42
     298              
     299 00003f               .sect   ".text"
     300                      .align 4
     301              
     302              $C$DW$49        .dwtag  DW_TAG_subprogram, DW_AT_name("prvQueueOverwriteTask")
     303                      .dwattr $C$DW$49, DW_AT_low_pc(_prvQueueOverwriteTask)
     304                      .dwattr $C$DW$49, DW_AT_high_pc(0x00)
     305                      .dwattr $C$DW$49, DW_AT_TI_symbol_name("_prvQueueOverwriteTask")
     306                      .dwattr $C$DW$49, DW_AT_TI_begin_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     307                      .dwattr $C$DW$49, DW_AT_TI_begin_line(0x4e)
     308                      .dwattr $C$DW$49, DW_AT_TI_begin_column(0x0d)
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    7

     309                      .dwattr $C$DW$49, DW_AT_TI_max_frame_size(0x0e)
     310                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 79,column 1,is_stmt,address _prv
     311              
     312                      .dwfde $C$DW$CIE, _prvQueueOverwriteTask
     313              $C$DW$50        .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvParameters")
     314                      .dwattr $C$DW$50, DW_AT_TI_symbol_name("_pvParameters")
     315                      .dwattr $C$DW$50, DW_AT_type(*$C$DW$T$3)
     316                      .dwattr $C$DW$50, DW_AT_location[DW_OP_reg17]
     317              ;*******************************************************************************
     318              ;* FUNCTION NAME: prvQueueOverwriteTask                                        *
     319              ;*                                                                             *
     320              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,T1,AR0,XAR0,AR1,XAR1,AR3,XAR3,SP, *
     321              ;*                        CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL                *
     322              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
     323              ;*   Total Frame Size   : 14 words                                             *
     324              ;*                        (2 return address/alignment)                         *
     325              ;*                        (12 local values)                                    *
     326              ;*   Min System Stack   : 1 word                                               *
     327              ;*******************************************************************************
     328 000040       _prvQueueOverwriteTask:
     329                      .dwcfi  cfa_offset, 1
     330                      .dwcfi  save_reg_to_mem, 91, -1
     331 000040 4EF3          AADD #-13, SP
     332                      .dwcfi  cfa_offset, 14
     333              $C$DW$51        .dwtag  DW_TAG_variable, DW_AT_name("pvParameters")
     334                      .dwattr $C$DW$51, DW_AT_TI_symbol_name("_pvParameters")
     335                      .dwattr $C$DW$51, DW_AT_type(*$C$DW$T$3)
     336                      .dwattr $C$DW$51, DW_AT_location[DW_OP_bregx 0x24 0]
     337              $C$DW$52        .dwtag  DW_TAG_variable, DW_AT_name("xTaskQueue")
     338                      .dwattr $C$DW$52, DW_AT_TI_symbol_name("_xTaskQueue")
     339                      .dwattr $C$DW$52, DW_AT_type(*$C$DW$T$22)
     340                      .dwattr $C$DW$52, DW_AT_location[DW_OP_bregx 0x24 2]
     341              $C$DW$53        .dwtag  DW_TAG_variable, DW_AT_name("uxQueueLength")
     342                      .dwattr $C$DW$53, DW_AT_TI_symbol_name("_uxQueueLength")
     343                      .dwattr $C$DW$53, DW_AT_type(*$C$DW$T$25)
     344                      .dwattr $C$DW$53, DW_AT_location[DW_OP_bregx 0x24 4]
     345              $C$DW$54        .dwtag  DW_TAG_variable, DW_AT_name("ulValue")
     346                      .dwattr $C$DW$54, DW_AT_TI_symbol_name("_ulValue")
     347                      .dwattr $C$DW$54, DW_AT_type(*$C$DW$T$69)
     348                      .dwattr $C$DW$54, DW_AT_location[DW_OP_bregx 0x24 6]
     349              $C$DW$55        .dwtag  DW_TAG_variable, DW_AT_name("ulStatus")
     350                      .dwattr $C$DW$55, DW_AT_TI_symbol_name("_ulStatus")
     351                      .dwattr $C$DW$55, DW_AT_type(*$C$DW$T$69)
     352                      .dwattr $C$DW$55, DW_AT_location[DW_OP_bregx 0x24 8]
     353              $C$DW$56        .dwtag  DW_TAG_variable, DW_AT_name("x")
     354                      .dwattr $C$DW$56, DW_AT_TI_symbol_name("_x")
     355                      .dwattr $C$DW$56, DW_AT_type(*$C$DW$T$69)
     356                      .dwattr $C$DW$56, DW_AT_location[DW_OP_bregx 0x24 10]
     357 000042 EB00          MOV XAR0, dbl(*SP(#0))
         000044 85   
     358                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 81,column 19,is_stmt
     359 000045 E608          MOV #1, *SP(#4) ; |81| 
         000047 01   
     360                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 82,column 19,is_stmt
     361 000048 3C10          MOV #1, AC0 ; |82| 
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    8

     362 00004a EB10          MOV AC0, dbl(*SP(#8)) ; |82| 
         00004c 08   
     363                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 85,column 2,is_stmt
     364                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 89,column 2,is_stmt
     365              
     366 00004d A408          MOV *SP(#4), T0 ; |89| 
     367 00004f 3D25  ||      MOV #2, T1
     368              
     369              $C$DW$57        .dwtag  DW_TAG_TI_branch
     370                      .dwattr $C$DW$57, DW_AT_low_pc(0x00)
     371                      .dwattr $C$DW$57, DW_AT_name("_xQueueGenericCreate")
     372                      .dwattr $C$DW$57, DW_AT_TI_call
     373              
     374 000051 6C00          CALL #_xQueueGenericCreate ; |89| 
         000053 0000!
     375 000055 3D08  ||      MOV #0, AR0
     376              
     377                                                      ; call occurs [#_xQueueGenericCreate] ; |89| 
     378 000057 EB04          MOV XAR0, dbl(*SP(#2))
         000059 85   
     379                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 90,column 2,is_stmt
     380 00005a ED04          MOV dbl(*SP(#2)), XAR3
         00005c BF   
     381 00005d 90B0          MOV XAR3, AC0
     382 00005f 6290          BCC $C$L2,AC0 != #0 ; |90| 
     383                                                      ; branchcc occurs ; |90| 
     384 000061 20     nop
     385 000062 46B3   bset INTM
     386 000064       $C$L1:    
     387 000064       $C$DW$L$_prvQueueOverwriteTask$3$B:
     388 000064 4A7E          B $C$L1   ; |90| 
     389                                                      ; branch occurs ; |90| 
     390 000066       $C$DW$L$_prvQueueOverwriteTask$3$E:
     391 000066       $C$L2:    
     392 000066       $C$DW$L$_prvQueueOverwriteTask$4$B:
     393                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 96,column 3,is_stmt
     394 000066 3CA0          MOV #10, AC0 ; |96| 
     395 000068 EB0C          MOV AC0, dbl(*SP(#6)) ; |96| 
         00006a 08   
     396                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 97,column 3,is_stmt
     397              
     398 00006e 3D24          MOV #2, T0
     399 00006b EC0C  ||      AMAR *SP(#6), XAR1
         00006d 9E   
     400              
     401 000070 ED04          MOV dbl(*SP(#2)), XAR0
         000072 8F   
     402              $C$DW$58        .dwtag  DW_TAG_TI_branch
     403                      .dwattr $C$DW$58, DW_AT_low_pc(0x00)
     404                      .dwattr $C$DW$58, DW_AT_name("_xQueueGenericSend")
     405                      .dwattr $C$DW$58, DW_AT_TI_call
     406              
     407 000073 6C00          CALL #_xQueueGenericSend ; |97| 
         000075 0000!
     408 000077 3D00  ||      MOV #0, AC0 ; |97| 
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE    9

     409              
     410                                                      ; call occurs [#_xQueueGenericSend] ; |97| 
     411                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 99,column 3,is_stmt
     412 000079 3C00          MOV #0, AC0 ; |99| 
     413 00007b EB0C          MOV AC0, dbl(*SP(#6)) ; |99| 
         00007d 08   
     414                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 100,column 3,is_stmt
     415 00007e EC0C          AMAR *SP(#6), XAR1
         000080 9E   
     416 000081 ED04          MOV dbl(*SP(#2)), XAR0
         000083 8F   
     417              $C$DW$59        .dwtag  DW_TAG_TI_branch
     418                      .dwattr $C$DW$59, DW_AT_low_pc(0x00)
     419                      .dwattr $C$DW$59, DW_AT_name("_xQueueReceive")
     420                      .dwattr $C$DW$59, DW_AT_TI_call
     421 000084 6C00          CALL #_xQueueReceive ; |100| 
         000086 0000!
     422                                                      ; call occurs [#_xQueueReceive] ; |100| 
     423                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 102,column 3,is_stmt
     424              
     425 000088 ED0C          MOV dbl(*SP(#6)), AC1 ; |102| 
         00008a 18   
     426 00008b 3DA0  ||      MOV #10, AC0 ; |102| 
     427              
     428 00008d 1210          CMPU AC1 == AC0, TC1 ; |102| 
         00008f 04   
     429 000090 62E4          BCC $C$L3,TC1 ; |102| 
     430                                                      ; branchcc occurs ; |102| 
     431 000092       $C$DW$L$_prvQueueOverwriteTask$4$E:
     432 000092       $C$DW$L$_prvQueueOverwriteTask$5$B:
     433                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 104,column 4,is_stmt
     434 000092 3C00          MOV #0, AC0 ; |104| 
     435 000094 EB10          MOV AC0, dbl(*SP(#8)) ; |104| 
         000096 08   
     436 000097       $C$DW$L$_prvQueueOverwriteTask$5$E:
     437 000097       $C$L3:    
     438 000097       $C$DW$L$_prvQueueOverwriteTask$6$B:
     439                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 109,column 8,is_stmt
     440 000097 3C00          MOV #0, AC0 ; |109| 
     441 000099 EB14          MOV AC0, dbl(*SP(#10)) ; |109| 
         00009b 08   
     442                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 109,column 15,is_stmt
     443              
     444 00009f 3D50          MOV #5, AC0 ; |109| 
     445 00009c ED14  ||      MOV dbl(*SP(#10)), AC1 ; |109| 
         00009e 18   
     446              
     447 0000a1 1218          CMPU AC1 >= AC0, TC1 ; |109| 
         0000a3 04   
     448 0000a4 0464          BCC $C$L7,TC1 ; |109| 
         0000a6 50   
     449                                                      ; branchcc occurs ; |109| 
     450 0000a7       $C$DW$L$_prvQueueOverwriteTask$6$E:
     451 0000a7       $C$L4:    
     452 0000a7       $C$DW$L$_prvQueueOverwriteTask$7$B:
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   10

     453                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 112,column 4,is_stmt
     454 0000a7 ED04          MOV dbl(*SP(#2)), XAR0
         0000a9 8F   
     455              
     456 0000ad 3D00          MOV #0, AC0 ; |112| 
     457 0000aa EC14  ||      AMAR *SP(#10), XAR1
         0000ac 9E   
     458              
     459              $C$DW$60        .dwtag  DW_TAG_TI_branch
     460                      .dwattr $C$DW$60, DW_AT_low_pc(0x00)
     461                      .dwattr $C$DW$60, DW_AT_name("_xQueueGenericSend")
     462                      .dwattr $C$DW$60, DW_AT_TI_call
     463              
     464 0000af 6C00          CALL #_xQueueGenericSend ; |112| 
         0000b1 0000!
     465 0000b3 3D24  ||      MOV #2, T0
     466              
     467                                                      ; call occurs [#_xQueueGenericSend] ; |112| 
     468                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 116,column 4,is_stmt
     469 0000b5 EC0C          AMAR *SP(#6), XAR1
         0000b7 9E   
     470 0000b8 ED04          MOV dbl(*SP(#2)), XAR0
         0000ba 8F   
     471              $C$DW$61        .dwtag  DW_TAG_TI_branch
     472                      .dwattr $C$DW$61, DW_AT_low_pc(0x00)
     473                      .dwattr $C$DW$61, DW_AT_name("_xQueuePeek")
     474                      .dwattr $C$DW$61, DW_AT_TI_call
     475              
     476 0000bb 6C00          CALL #_xQueuePeek ; |116| 
         0000bd 0000!
     477 0000bf 3D00  ||      MOV #0, AC0 ; |116| 
     478              
     479                                                      ; call occurs [#_xQueuePeek] ; |116| 
     480                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 117,column 4,is_stmt
     481 0000c1 ED14          MOV dbl(*SP(#10)), AC0 ; |117| 
         0000c3 08   
     482 0000c4 ED0C          MOV dbl(*SP(#6)), AC1 ; |117| 
         0000c6 18   
     483 0000c7 1210          CMPU AC1 == AC0, TC1 ; |117| 
         0000c9 04   
     484 0000ca 62E4          BCC $C$L5,TC1 ; |117| 
     485                                                      ; branchcc occurs ; |117| 
     486 0000cc       $C$DW$L$_prvQueueOverwriteTask$7$E:
     487 0000cc       $C$DW$L$_prvQueueOverwriteTask$8$B:
     488                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 119,column 5,is_stmt
     489 0000cc 3C00          MOV #0, AC0 ; |119| 
     490 0000ce EB10          MOV AC0, dbl(*SP(#8)) ; |119| 
         0000d0 08   
     491 0000d1       $C$DW$L$_prvQueueOverwriteTask$8$E:
     492 0000d1       $C$L5:    
     493 0000d1       $C$DW$L$_prvQueueOverwriteTask$9$B:
     494                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 123,column 4,is_stmt
     495 0000d1 ED04          MOV dbl(*SP(#2)), XAR0
         0000d3 8F   
     496              $C$DW$62        .dwtag  DW_TAG_TI_branch
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   11

     497                      .dwattr $C$DW$62, DW_AT_low_pc(0x00)
     498                      .dwattr $C$DW$62, DW_AT_name("_uxQueueMessagesWaiting")
     499                      .dwattr $C$DW$62, DW_AT_TI_call
     500 0000d4 6C00          CALL #_uxQueueMessagesWaiting ; |123| 
         0000d6 0000!
     501                                                      ; call occurs [#_uxQueueMessagesWaiting] ; |123| 
     502 0000d8 A908          MOV *SP(#4), AR1 ; |123| 
     503 0000da 1240          CMPU T0 == AR1, TC1 ; |123| 
         0000dc 94   
     504 0000dd 62E4          BCC $C$L6,TC1 ; |123| 
     505                                                      ; branchcc occurs ; |123| 
     506 0000df       $C$DW$L$_prvQueueOverwriteTask$9$E:
     507 0000df       $C$DW$L$_prvQueueOverwriteTask$10$B:
     508                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 125,column 5,is_stmt
     509 0000df 3C00          MOV #0, AC0 ; |125| 
     510 0000e1 EB10          MOV AC0, dbl(*SP(#8)) ; |125| 
         0000e3 08   
     511 0000e4       $C$DW$L$_prvQueueOverwriteTask$10$E:
     512 0000e4       $C$L6:    
     513 0000e4       $C$DW$L$_prvQueueOverwriteTask$11$B:
     514                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 109,column 28,is_stmt
     515 0000e4 ED14          MOV dbl(*SP(#10)), AC0 ; |109| 
         0000e6 08   
     516 0000e7 4010          ADD #1, AC0 ; |109| 
     517 0000e9 EB14          MOV AC0, dbl(*SP(#10)) ; |109| 
         0000eb 08   
     518                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 109,column 15,is_stmt
     519              
     520 0000ef 3D50          MOV #5, AC0 ; |109| 
     521 0000ec ED14  ||      MOV dbl(*SP(#10)), AC1 ; |109| 
         0000ee 18   
     522              
     523 0000f1 1214          CMPU AC1 < AC0, TC1 ; |109| 
         0000f3 04   
     524 0000f4 0464          BCC $C$L4,TC1 ; |109| 
         0000f6 B0   
     525                                                      ; branchcc occurs ; |109| 
     526 0000f7       $C$DW$L$_prvQueueOverwriteTask$11$E:
     527 0000f7       $C$L7:    
     528 0000f7       $C$DW$L$_prvQueueOverwriteTask$12$B:
     529                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 130,column 3,is_stmt
     530 0000f7 ED04          MOV dbl(*SP(#2)), XAR0
         0000f9 8F   
     531 0000fa EC0C          AMAR *SP(#6), XAR1
         0000fc 9E   
     532              $C$DW$63        .dwtag  DW_TAG_TI_branch
     533                      .dwattr $C$DW$63, DW_AT_low_pc(0x00)
     534                      .dwattr $C$DW$63, DW_AT_name("_xQueueReceive")
     535                      .dwattr $C$DW$63, DW_AT_TI_call
     536              
     537 0000fd 6C00          CALL #_xQueueReceive ; |130| 
         0000ff 0000!
     538 000101 3D00  ||      MOV #0, AC0 ; |130| 
     539              
     540                                                      ; call occurs [#_xQueueReceive] ; |130| 
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   12

     541                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 132,column 3,is_stmt
     542 000103 ED04          MOV dbl(*SP(#2)), XAR0
         000105 8F   
     543              $C$DW$64        .dwtag  DW_TAG_TI_branch
     544                      .dwattr $C$DW$64, DW_AT_low_pc(0x00)
     545                      .dwattr $C$DW$64, DW_AT_name("_uxQueueMessagesWaiting")
     546                      .dwattr $C$DW$64, DW_AT_TI_call
     547 000106 6C00          CALL #_uxQueueMessagesWaiting ; |132| 
         000108 0000!
     548                                                      ; call occurs [#_uxQueueMessagesWaiting] ; |132| 
     549 00010a 6284          BCC $C$L8,T0 == #0 ; |132| 
     550                                                      ; branchcc occurs ; |132| 
     551 00010c       $C$DW$L$_prvQueueOverwriteTask$12$E:
     552 00010c       $C$DW$L$_prvQueueOverwriteTask$13$B:
     553                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 134,column 4,is_stmt
     554 00010c 3C00          MOV #0, AC0 ; |134| 
     555 00010e EB10          MOV AC0, dbl(*SP(#8)) ; |134| 
         000110 08   
     556 000111       $C$DW$L$_prvQueueOverwriteTask$13$E:
     557 000111       $C$L8:    
     558 000111       $C$DW$L$_prvQueueOverwriteTask$14$B:
     559                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 137,column 3,is_stmt
     560 000111 ED10          MOV dbl(*SP(#8)), AC0 ; |137| 
         000113 08   
     561 000114 6D00          BCC $C$L2,AC0 == #0 ; |137| 
         000116 FF4E 
     562                                                      ; branchcc occurs ; |137| 
     563 000118       $C$DW$L$_prvQueueOverwriteTask$14$E:
     564 000118       $C$DW$L$_prvQueueOverwriteTask$15$B:
     565                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 141,column 4,is_stmt
     566 000118 ED31          MOV dbl(*(#_ulLoopCounter)), AC0 ; |141| 
         00011a 0800 
         00011c 0000-
     567 00011e 4010          ADD #1, AC0 ; |141| 
     568 000120 EB31          MOV AC0, dbl(*(#_ulLoopCounter)) ; |141| 
         000122 0800 
         000124 0000-
     569                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 147,column 2,is_stmt
     570 000126 06FF          B $C$L2   ; |147| 
         000128 3D   
     571                                                      ; branch occurs ; |147| 
     572 000129       $C$DW$L$_prvQueueOverwriteTask$15$E:
     573                      .dwcfi  cfa_offset, 1
     574              
     575              $C$DW$65        .dwtag  DW_TAG_TI_loop
     576                      .dwattr $C$DW$65, DW_AT_name("F:\eZdsp_DBG\eZDSP_5535_Files\ccsws2\test\Debug\QueueOverwrite.asm:$C$L
     577                      .dwattr $C$DW$65, DW_AT_TI_begin_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     578                      .dwattr $C$DW$65, DW_AT_TI_begin_line(0x5c)
     579                      .dwattr $C$DW$65, DW_AT_TI_end_line(0x93)
     580              $C$DW$66        .dwtag  DW_TAG_TI_loop_range
     581                      .dwattr $C$DW$66, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$4$B)
     582                      .dwattr $C$DW$66, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$4$E)
     583              $C$DW$67        .dwtag  DW_TAG_TI_loop_range
     584                      .dwattr $C$DW$67, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$5$B)
     585                      .dwattr $C$DW$67, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$5$E)
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   13

     586              $C$DW$68        .dwtag  DW_TAG_TI_loop_range
     587                      .dwattr $C$DW$68, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$6$B)
     588                      .dwattr $C$DW$68, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$6$E)
     589              $C$DW$69        .dwtag  DW_TAG_TI_loop_range
     590                      .dwattr $C$DW$69, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$12$B)
     591                      .dwattr $C$DW$69, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$12$E)
     592              $C$DW$70        .dwtag  DW_TAG_TI_loop_range
     593                      .dwattr $C$DW$70, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$13$B)
     594                      .dwattr $C$DW$70, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$13$E)
     595              $C$DW$71        .dwtag  DW_TAG_TI_loop_range
     596                      .dwattr $C$DW$71, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$15$B)
     597                      .dwattr $C$DW$71, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$15$E)
     598              $C$DW$72        .dwtag  DW_TAG_TI_loop_range
     599                      .dwattr $C$DW$72, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$14$B)
     600                      .dwattr $C$DW$72, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$14$E)
     601              
     602              $C$DW$73        .dwtag  DW_TAG_TI_loop
     603                      .dwattr $C$DW$73, DW_AT_name("F:\eZdsp_DBG\eZDSP_5535_Files\ccsws2\test\Debug\QueueOverwrite.asm:$C$L
     604                      .dwattr $C$DW$73, DW_AT_TI_begin_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     605                      .dwattr $C$DW$73, DW_AT_TI_begin_line(0x6d)
     606                      .dwattr $C$DW$73, DW_AT_TI_end_line(0x7f)
     607              $C$DW$74        .dwtag  DW_TAG_TI_loop_range
     608                      .dwattr $C$DW$74, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$7$B)
     609                      .dwattr $C$DW$74, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$7$E)
     610              $C$DW$75        .dwtag  DW_TAG_TI_loop_range
     611                      .dwattr $C$DW$75, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$8$B)
     612                      .dwattr $C$DW$75, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$8$E)
     613              $C$DW$76        .dwtag  DW_TAG_TI_loop_range
     614                      .dwattr $C$DW$76, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$9$B)
     615                      .dwattr $C$DW$76, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$9$E)
     616              $C$DW$77        .dwtag  DW_TAG_TI_loop_range
     617                      .dwattr $C$DW$77, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$10$B)
     618                      .dwattr $C$DW$77, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$10$E)
     619              $C$DW$78        .dwtag  DW_TAG_TI_loop_range
     620                      .dwattr $C$DW$78, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$11$B)
     621                      .dwattr $C$DW$78, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$11$E)
     622                      .dwendtag $C$DW$73
     623              
     624                      .dwendtag $C$DW$65
     625              
     626              
     627              $C$DW$79        .dwtag  DW_TAG_TI_loop
     628                      .dwattr $C$DW$79, DW_AT_name("F:\eZdsp_DBG\eZDSP_5535_Files\ccsws2\test\Debug\QueueOverwrite.asm:$C$L
     629                      .dwattr $C$DW$79, DW_AT_TI_begin_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     630                      .dwattr $C$DW$79, DW_AT_TI_begin_line(0x5a)
     631                      .dwattr $C$DW$79, DW_AT_TI_end_line(0x5a)
     632              $C$DW$80        .dwtag  DW_TAG_TI_loop_range
     633                      .dwattr $C$DW$80, DW_AT_low_pc($C$DW$L$_prvQueueOverwriteTask$3$B)
     634                      .dwattr $C$DW$80, DW_AT_high_pc($C$DW$L$_prvQueueOverwriteTask$3$E)
     635                      .dwendtag $C$DW$79
     636              
     637                      .dwattr $C$DW$49, DW_AT_TI_end_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     638                      .dwattr $C$DW$49, DW_AT_TI_end_line(0x94)
     639                      .dwattr $C$DW$49, DW_AT_TI_end_column(0x01)
     640                      .dwendentry
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   14

     641                      .dwendtag $C$DW$49
     642              
     643 000129               .sect   ".text"
     644                      .align 4
     645                      .global _xIsQueueOverwriteTaskStillRunning
     646              
     647              $C$DW$81        .dwtag  DW_TAG_subprogram, DW_AT_name("xIsQueueOverwriteTaskStillRunning")
     648                      .dwattr $C$DW$81, DW_AT_low_pc(_xIsQueueOverwriteTaskStillRunning)
     649                      .dwattr $C$DW$81, DW_AT_high_pc(0x00)
     650                      .dwattr $C$DW$81, DW_AT_TI_symbol_name("_xIsQueueOverwriteTaskStillRunning")
     651                      .dwattr $C$DW$81, DW_AT_external
     652                      .dwattr $C$DW$81, DW_AT_type(*$C$DW$T$39)
     653                      .dwattr $C$DW$81, DW_AT_TI_begin_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     654                      .dwattr $C$DW$81, DW_AT_TI_begin_line(0x97)
     655                      .dwattr $C$DW$81, DW_AT_TI_begin_column(0x0c)
     656                      .dwattr $C$DW$81, DW_AT_TI_max_frame_size(0x02)
     657                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 152,column 1,is_stmt,address _xI
     658              
     659                      .dwfde $C$DW$CIE, _xIsQueueOverwriteTaskStillRunning
     660              ;*******************************************************************************
     661              ;* FUNCTION NAME: xIsQueueOverwriteTaskStillRunning                            *
     662              ;*                                                                             *
     663              ;*   Function Uses Regs : AC0,AC0,T0,SP,TC1,M40,SATA,SATD,RDM,FRCT,SMUL        *
     664              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
     665              ;*   Total Frame Size   : 2 words                                              *
     666              ;*                        (1 return address/alignment)                         *
     667              ;*                        (1 local values)                                     *
     668              ;*   Min System Stack   : 1 word                                               *
     669              ;*******************************************************************************
     670 00012c       _xIsQueueOverwriteTaskStillRunning:
     671                      .dwcfi  cfa_offset, 1
     672                      .dwcfi  save_reg_to_mem, 91, -1
     673 00012c 4EFF          AADD #-1, SP
     674                      .dwcfi  cfa_offset, 2
     675              $C$DW$82        .dwtag  DW_TAG_variable, DW_AT_name("xReturn")
     676                      .dwattr $C$DW$82, DW_AT_TI_symbol_name("_xReturn")
     677                      .dwattr $C$DW$82, DW_AT_type(*$C$DW$T$39)
     678                      .dwattr $C$DW$82, DW_AT_location[DW_OP_bregx 0x24 0]
     679                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 155,column 2,is_stmt
     680 00012e F031          CMP *(#_xISRTestStatus) == #1, TC1 ; |155| 
         000130 0001 
         000132 0000 
         000134 02-  
     681 000135 62E4          BCC $C$L9,TC1 ; |155| 
     682                                                      ; branchcc occurs ; |155| 
     683                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 157,column 3,is_stmt
     684 000137 E600          MOV #0, *SP(#0) ; |157| 
         000139 00   
     685                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 158,column 2,is_stmt
     686 00013a 4A10          B $C$L11  ; |158| 
     687                                                      ; branch occurs ; |158| 
     688 00013c       $C$L9:    
     689                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 159,column 7,is_stmt
     690 00013c ED31          MOV dbl(*(#_ulLoopCounter)), AC0 ; |159| 
         00013e 0800 
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   15

         000140 0000-
     691 000142 6280          BCC $C$L10,AC0 == #0 ; |159| 
     692                                                      ; branchcc occurs ; |159| 
     693                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 161,column 3,is_stmt
     694 000144 E600          MOV #1, *SP(#0) ; |161| 
         000146 01   
     695                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 162,column 2,is_stmt
     696 000147 4A03          B $C$L11  ; |162| 
     697                                                      ; branch occurs ; |162| 
     698 000149       $C$L10:    
     699                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 166,column 3,is_stmt
     700 000149 E600          MOV #0, *SP(#0) ; |166| 
         00014b 00   
     701 00014c       $C$L11:    
     702                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 169,column 2,is_stmt
     703 00014c 3C00          MOV #0, AC0 ; |169| 
     704 00014e EB31          MOV AC0, dbl(*(#_ulLoopCounter)) ; |169| 
         000150 0800 
         000152 0000-
     705                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 171,column 2,is_stmt
     706 000154 A400          MOV *SP(#0), T0 ; |171| 
     707                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 172,column 1,is_stmt
     708 000156 4E01          AADD #1, SP
     709                      .dwcfi  cfa_offset, 1
     710              $C$DW$83        .dwtag  DW_TAG_TI_branch
     711                      .dwattr $C$DW$83, DW_AT_low_pc(0x00)
     712                      .dwattr $C$DW$83, DW_AT_TI_return
     713 000158 4804          RET
     714                                                      ; return occurs
     715                      .dwattr $C$DW$81, DW_AT_TI_end_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     716                      .dwattr $C$DW$81, DW_AT_TI_end_line(0xac)
     717                      .dwattr $C$DW$81, DW_AT_TI_end_column(0x01)
     718                      .dwendentry
     719                      .dwendtag $C$DW$81
     720              
     721 00015a               .sect   ".text"
     722                      .align 4
     723                      .global _vQueueOverwritePeriodicISRDemo
     724              
     725              $C$DW$84        .dwtag  DW_TAG_subprogram, DW_AT_name("vQueueOverwritePeriodicISRDemo")
     726                      .dwattr $C$DW$84, DW_AT_low_pc(_vQueueOverwritePeriodicISRDemo)
     727                      .dwattr $C$DW$84, DW_AT_high_pc(0x00)
     728                      .dwattr $C$DW$84, DW_AT_TI_symbol_name("_vQueueOverwritePeriodicISRDemo")
     729                      .dwattr $C$DW$84, DW_AT_external
     730                      .dwattr $C$DW$84, DW_AT_TI_begin_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     731                      .dwattr $C$DW$84, DW_AT_TI_begin_line(0xaf)
     732                      .dwattr $C$DW$84, DW_AT_TI_begin_column(0x06)
     733                      .dwattr $C$DW$84, DW_AT_TI_max_frame_size(0x0a)
     734                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 176,column 1,is_stmt,address _vQ
     735              
     736                      .dwfde $C$DW$CIE, _vQueueOverwritePeriodicISRDemo
     737              $C$DW$85        .dwtag  DW_TAG_variable, DW_AT_name("ulCallCount")
     738                      .dwattr $C$DW$85, DW_AT_TI_symbol_name("_ulCallCount$1")
     739                      .dwattr $C$DW$85, DW_AT_type(*$C$DW$T$69)
     740                      .dwattr $C$DW$85, DW_AT_location[DW_OP_addr _ulCallCount$1]
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   16

     741              ;*******************************************************************************
     742              ;* FUNCTION NAME: vQueueOverwritePeriodicISRDemo                               *
     743              ;*                                                                             *
     744              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,AR0,XAR0,AR1,XAR1,AR2,XAR2,AR3,   *
     745              ;*                        XAR3,SP,CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL        *
     746              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
     747              ;*   Total Frame Size   : 10 words                                             *
     748              ;*                        (2 return address/alignment)                         *
     749              ;*                        (8 local values)                                     *
     750              ;*   Min System Stack   : 1 word                                               *
     751              ;*******************************************************************************
     752 00015c       _vQueueOverwritePeriodicISRDemo:
     753                      .dwcfi  cfa_offset, 1
     754                      .dwcfi  save_reg_to_mem, 91, -1
     755 00015c 4EF7          AADD #-9, SP
     756                      .dwcfi  cfa_offset, 10
     757              $C$DW$86        .dwtag  DW_TAG_variable, DW_AT_name("ulTx1")
     758                      .dwattr $C$DW$86, DW_AT_TI_symbol_name("_ulTx1")
     759                      .dwattr $C$DW$86, DW_AT_type(*$C$DW$T$71)
     760                      .dwattr $C$DW$86, DW_AT_location[DW_OP_bregx 0x24 0]
     761              $C$DW$87        .dwtag  DW_TAG_variable, DW_AT_name("ulTx2")
     762                      .dwattr $C$DW$87, DW_AT_TI_symbol_name("_ulTx2")
     763                      .dwattr $C$DW$87, DW_AT_type(*$C$DW$T$71)
     764                      .dwattr $C$DW$87, DW_AT_location[DW_OP_bregx 0x24 2]
     765              $C$DW$88        .dwtag  DW_TAG_variable, DW_AT_name("ulNumberOfSwitchCases")
     766                      .dwattr $C$DW$88, DW_AT_TI_symbol_name("_ulNumberOfSwitchCases")
     767                      .dwattr $C$DW$88, DW_AT_type(*$C$DW$T$71)
     768                      .dwattr $C$DW$88, DW_AT_location[DW_OP_bregx 0x24 4]
     769              $C$DW$89        .dwtag  DW_TAG_variable, DW_AT_name("ulRx")
     770                      .dwattr $C$DW$89, DW_AT_TI_symbol_name("_ulRx")
     771                      .dwattr $C$DW$89, DW_AT_type(*$C$DW$T$69)
     772                      .dwattr $C$DW$89, DW_AT_location[DW_OP_bregx 0x24 6]
     773                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 178,column 16,is_stmt
     774 00015e 3CA0          MOV #10, AC0 ; |178| 
     775 000160 EB00          MOV AC0, dbl(*SP(#0)) ; |178| 
         000162 08   
     776                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 178,column 30,is_stmt
     777 000163 7600          MOV #20, AC0 ; |178| 
         000165 1408 
     778 000167 EB04          MOV AC0, dbl(*SP(#2)) ; |178| 
         000169 08   
     779                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 178,column 44,is_stmt
     780 00016a 3C30          MOV #3, AC0 ; |178| 
     781 00016c EB08          MOV AC0, dbl(*SP(#4)) ; |178| 
         00016e 08   
     782                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 184,column 2,is_stmt
     783 00016f ED31          MOV dbl(*(#_xISRQueue)), XAR3
         000171 BF00 
         000173 0004-
     784 000175 90B0          MOV XAR3, AC0
     785 000177 0410          BCC $C$L16,AC0 != #0 ; |184| 
         000179 7B   
     786                                                      ; branchcc occurs ; |184| 
     787 00017a 20     nop
     788 00017b 46B3   bset INTM
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   17

     789 00017d       $C$L12:    
     790 00017d       $C$DW$L$_vQueueOverwritePeriodicISRDemo$3$B:
     791 00017d 4A7E          B $C$L12  ; |184| 
     792                                                      ; branch occurs ; |184| 
     793 00017f       $C$DW$L$_vQueueOverwritePeriodicISRDemo$3$E:
     794 00017f       $C$L13:    
     795                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 192,column 4,is_stmt
     796 00017f EC00          AMAR *SP(#0), XAR1
         000181 9E   
     797 000182 ED31          MOV dbl(*(#_xISRQueue)), XAR0
         000184 8F00 
         000186 0004-
     798 000188 EC31          AMOV #0, XAR2 ; |192| 
         00018a AE00 
         00018c 0000 
     799              $C$DW$90        .dwtag  DW_TAG_TI_branch
     800                      .dwattr $C$DW$90, DW_AT_low_pc(0x00)
     801                      .dwattr $C$DW$90, DW_AT_name("_xQueueGenericSendFromISR")
     802                      .dwattr $C$DW$90, DW_AT_TI_call
     803              
     804 00018e 6C00          CALL #_xQueueGenericSendFromISR ; |192| 
         000190 0000!
     805 000192 3D24  ||      MOV #2, T0
     806              
     807                                                      ; call occurs [#_xQueueGenericSendFromISR] ; |192| 
     808                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 195,column 4,is_stmt
     809 000194 EC0C          AMAR *SP(#6), XAR1
         000196 9E   
     810 000197 ED31          MOV dbl(*(#_xISRQueue)), XAR0
         000199 8F00 
         00019b 0004-
     811              $C$DW$91        .dwtag  DW_TAG_TI_branch
     812                      .dwattr $C$DW$91, DW_AT_low_pc(0x00)
     813                      .dwattr $C$DW$91, DW_AT_name("_xQueuePeekFromISR")
     814                      .dwattr $C$DW$91, DW_AT_TI_call
     815 00019d 6C00          CALL #_xQueuePeekFromISR ; |195| 
         00019f 0000!
     816                                                      ; call occurs [#_xQueuePeekFromISR] ; |195| 
     817                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 196,column 4,is_stmt
     818 0001a1 ED00          MOV dbl(*SP(#0)), AC0 ; |196| 
         0001a3 08   
     819 0001a4 ED0C          MOV dbl(*SP(#6)), AC1 ; |196| 
         0001a6 18   
     820 0001a7 1210          CMPU AC1 == AC0, TC1 ; |196| 
         0001a9 04   
     821 0001aa 0464          BCC $C$L17,TC1 ; |196| 
         0001ac 61   
     822                                                      ; branchcc occurs ; |196| 
     823                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 198,column 5,is_stmt
     824 0001ad E631          MOV #0, *(#_xISRTestStatus) ; |198| 
         0001af 0000 
         0001b1 0002-
     825                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 200,column 9,is_stmt
     826 0001b3 0600          B $C$L17  ; |200| 
         0001b5 58   
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   18

     827                                                      ; branch occurs ; |200| 
     828 0001b6       $C$L14:    
     829                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 205,column 4,is_stmt
     830 0001b6 EC04          AMAR *SP(#2), XAR1
         0001b8 9E   
     831 0001b9 ED31          MOV dbl(*(#_xISRQueue)), XAR0
         0001bb 8F00 
         0001bd 0004-
     832 0001bf EC31          AMOV #0, XAR2 ; |205| 
         0001c1 AE00 
         0001c3 0000 
     833              $C$DW$92        .dwtag  DW_TAG_TI_branch
     834                      .dwattr $C$DW$92, DW_AT_low_pc(0x00)
     835                      .dwattr $C$DW$92, DW_AT_name("_xQueueGenericSendFromISR")
     836                      .dwattr $C$DW$92, DW_AT_TI_call
     837              
     838 0001c5 6C00          CALL #_xQueueGenericSendFromISR ; |205| 
         0001c7 0000!
     839 0001c9 3D24  ||      MOV #2, T0
     840              
     841                                                      ; call occurs [#_xQueueGenericSendFromISR] ; |205| 
     842                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 206,column 9,is_stmt
     843 0001cb 0600          B $C$L17  ; |206| 
         0001cd 40   
     844                                                      ; branch occurs ; |206| 
     845 0001ce       $C$L15:    
     846                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 211,column 4,is_stmt
     847 0001ce EC0C          AMAR *SP(#6), XAR1
         0001d0 9E   
     848 0001d1 ED31          MOV dbl(*(#_xISRQueue)), XAR0
         0001d3 8F00 
         0001d5 0004-
     849 0001d7 EC31          AMOV #0, XAR2 ; |211| 
         0001d9 AE00 
         0001db 0000 
     850              $C$DW$93        .dwtag  DW_TAG_TI_branch
     851                      .dwattr $C$DW$93, DW_AT_low_pc(0x00)
     852                      .dwattr $C$DW$93, DW_AT_name("_xQueueReceiveFromISR")
     853                      .dwattr $C$DW$93, DW_AT_TI_call
     854 0001dd 6C00          CALL #_xQueueReceiveFromISR ; |211| 
         0001df 0000!
     855                                                      ; call occurs [#_xQueueReceiveFromISR] ; |211| 
     856                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 213,column 4,is_stmt
     857 0001e1 ED04          MOV dbl(*SP(#2)), AC0 ; |213| 
         0001e3 08   
     858 0001e4 ED0C          MOV dbl(*SP(#6)), AC1 ; |213| 
         0001e6 18   
     859 0001e7 1210          CMPU AC1 == AC0, TC1 ; |213| 
         0001e9 04   
     860 0001ea 0464          BCC $C$L17,TC1 ; |213| 
         0001ec 21   
     861                                                      ; branchcc occurs ; |213| 
     862                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 215,column 5,is_stmt
     863 0001ed E631          MOV #0, *(#_xISRTestStatus) ; |215| 
         0001ef 0000 
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   19

         0001f1 0002-
     864                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 217,column 9,is_stmt
     865 0001f3 4A19          B $C$L17  ; |217| 
     866                                                      ; branch occurs ; |217| 
     867 0001f5       $C$L16:    
     868                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 186,column 2,is_stmt
     869 0001f5 ED31          MOV dbl(*(#_ulCallCount$1)), AC0 ; |186| 
         0001f7 0800 
         0001f9 0006-
     870 0001fb 0400          BCC $C$L13,AC0 == #0 ; |186| 
         0001fd 81   
     871                                                      ; branchcc occurs ; |186| 
     872 0001fe 3C11          MOV #1, AC1 ; |186| 
     873 000200 1200          CMPU AC0 == AC1, TC1 ; |186| 
         000202 14   
     874 000203 0464          BCC $C$L14,TC1 ; |186| 
         000205 B0   
     875                                                      ; branchcc occurs ; |186| 
     876 000206 3C21          MOV #2, AC1 ; |186| 
     877 000208 1200          CMPU AC0 == AC1, TC1 ; |186| 
         00020a 14   
     878 00020b 0464          BCC $C$L15,TC1 ; |186| 
         00020d C0   
     879                                                      ; branchcc occurs ; |186| 
     880 00020e       $C$L17:    
     881                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 222,column 2,is_stmt
     882 00020e ED31          MOV dbl(*(#_ulCallCount$1)), AC0 ; |222| 
         000210 0800 
         000212 0006-
     883 000214 4010          ADD #1, AC0 ; |222| 
     884 000216 EB31          MOV AC0, dbl(*(#_ulCallCount$1)) ; |222| 
         000218 0800 
         00021a 0006-
     885                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 224,column 2,is_stmt
     886 00021c ED31          MOV dbl(*(#_ulCallCount$1)), AC1 ; |224| 
         00021e 1800 
         000220 0006-
     887 000222 ED08          MOV dbl(*SP(#4)), AC0 ; |224| 
         000224 08   
     888 000225 1214          CMPU AC1 < AC0, TC1 ; |224| 
         000227 04   
     889 000228 6464          BCC $C$L18,TC1 ; |224| 
     890                                                      ; branchcc occurs ; |224| 
     891                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 227,column 3,is_stmt
     892 00022a 3C00          MOV #0, AC0 ; |227| 
     893 00022c EB31          MOV AC0, dbl(*(#_ulCallCount$1)) ; |227| 
         00022e 0800 
         000230 0006-
     894                      .dwpsn  file "../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c",line 229,column 1,is_stmt
     895 000232       $C$L18:    
     896 000232 4E09          AADD #9, SP
     897                      .dwcfi  cfa_offset, 1
     898              $C$DW$94        .dwtag  DW_TAG_TI_branch
     899                      .dwattr $C$DW$94, DW_AT_low_pc(0x00)
     900                      .dwattr $C$DW$94, DW_AT_TI_return
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   20

     901 000234 4804          RET
     902                                                      ; return occurs
     903              
     904              $C$DW$95        .dwtag  DW_TAG_TI_loop
     905                      .dwattr $C$DW$95, DW_AT_name("F:\eZdsp_DBG\eZDSP_5535_Files\ccsws2\test\Debug\QueueOverwrite.asm:$C$L
     906                      .dwattr $C$DW$95, DW_AT_TI_begin_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     907                      .dwattr $C$DW$95, DW_AT_TI_begin_line(0xb8)
     908                      .dwattr $C$DW$95, DW_AT_TI_end_line(0xb8)
     909              $C$DW$96        .dwtag  DW_TAG_TI_loop_range
     910                      .dwattr $C$DW$96, DW_AT_low_pc($C$DW$L$_vQueueOverwritePeriodicISRDemo$3$B)
     911                      .dwattr $C$DW$96, DW_AT_high_pc($C$DW$L$_vQueueOverwritePeriodicISRDemo$3$E)
     912                      .dwendtag $C$DW$95
     913              
     914                      .dwattr $C$DW$84, DW_AT_TI_end_file("../FreeRTOS/Demo/Common/Minimal/QueueOverwrite.c")
     915                      .dwattr $C$DW$84, DW_AT_TI_end_line(0xe5)
     916                      .dwattr $C$DW$84, DW_AT_TI_end_column(0x01)
     917                      .dwendentry
     918                      .dwendtag $C$DW$84
     919              
     920              ;*******************************************************************************
     921              ;* FAR STRINGS                                                                 *
     922              ;*******************************************************************************
     923 000000               .sect   ".const:.string"
     924                      .align  2
     925 000000 0051  $C$FSL1:        .string "QOver",0
         000001 004F 
         000002 0076 
         000003 0065 
         000004 0072 
         000005 0000 
     926              ;******************************************************************************
     927              ;* UNDEFINED EXTERNAL REFERENCES                                              *
     928              ;******************************************************************************
     929                      .global _xTaskCreate
     930                      .global _xQueueGenericSend
     931                      .global _xQueuePeek
     932                      .global _xQueuePeekFromISR
     933                      .global _xQueueReceive
     934                      .global _uxQueueMessagesWaiting
     935                      .global _xQueueGenericSendFromISR
     936                      .global _xQueueReceiveFromISR
     937                      .global _xQueueGenericCreate
     938              
     939              ;*******************************************************************************
     940              ;* TYPE INFORMATION                                                            *
     941              ;*******************************************************************************
     942              
     943              $C$DW$T$19      .dwtag  DW_TAG_structure_type
     944                      .dwattr $C$DW$T$19, DW_AT_name("QueueDefinition")
     945                      .dwattr $C$DW$T$19, DW_AT_declaration
     946                      .dwendtag $C$DW$T$19
     947              
     948              $C$DW$T$21      .dwtag  DW_TAG_pointer_type
     949                      .dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$19)
     950                      .dwattr $C$DW$T$21, DW_AT_address_class(0x17)
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   21

     951              $C$DW$T$22      .dwtag  DW_TAG_typedef, DW_AT_name("QueueHandle_t")
     952                      .dwattr $C$DW$T$22, DW_AT_type(*$C$DW$T$21)
     953                      .dwattr $C$DW$T$22, DW_AT_language(DW_LANG_C)
     954              $C$DW$97        .dwtag  DW_TAG_TI_far_type
     955                      .dwattr $C$DW$97, DW_AT_type(*$C$DW$T$22)
     956              $C$DW$T$23      .dwtag  DW_TAG_const_type
     957                      .dwattr $C$DW$T$23, DW_AT_type(*$C$DW$97)
     958              $C$DW$T$3       .dwtag  DW_TAG_pointer_type
     959                      .dwattr $C$DW$T$3, DW_AT_address_class(0x17)
     960              $C$DW$98        .dwtag  DW_TAG_TI_far_type
     961                      .dwattr $C$DW$98, DW_AT_type(*$C$DW$T$3)
     962              $C$DW$T$30      .dwtag  DW_TAG_const_type
     963                      .dwattr $C$DW$T$30, DW_AT_type(*$C$DW$98)
     964              
     965              $C$DW$T$31      .dwtag  DW_TAG_subroutine_type
     966                      .dwattr $C$DW$T$31, DW_AT_language(DW_LANG_C)
     967              $C$DW$99        .dwtag  DW_TAG_formal_parameter
     968                      .dwattr $C$DW$99, DW_AT_type(*$C$DW$T$3)
     969                      .dwendtag $C$DW$T$31
     970              
     971              $C$DW$T$32      .dwtag  DW_TAG_pointer_type
     972                      .dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$31)
     973                      .dwattr $C$DW$T$32, DW_AT_address_class(0x20)
     974              $C$DW$T$33      .dwtag  DW_TAG_typedef, DW_AT_name("TaskFunction_t")
     975                      .dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$32)
     976                      .dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
     977              $C$DW$100       .dwtag  DW_TAG_TI_far_type
     978              $C$DW$T$34      .dwtag  DW_TAG_const_type
     979                      .dwattr $C$DW$T$34, DW_AT_type(*$C$DW$100)
     980              $C$DW$T$35      .dwtag  DW_TAG_pointer_type
     981                      .dwattr $C$DW$T$35, DW_AT_type(*$C$DW$T$34)
     982                      .dwattr $C$DW$T$35, DW_AT_address_class(0x17)
     983              $C$DW$101       .dwtag  DW_TAG_TI_far_type
     984                      .dwattr $C$DW$101, DW_AT_type(*$C$DW$T$35)
     985              $C$DW$T$36      .dwtag  DW_TAG_const_type
     986                      .dwattr $C$DW$T$36, DW_AT_type(*$C$DW$101)
     987              $C$DW$T$4       .dwtag  DW_TAG_base_type
     988                      .dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
     989                      .dwattr $C$DW$T$4, DW_AT_name("bool")
     990                      .dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
     991              $C$DW$T$5       .dwtag  DW_TAG_base_type
     992                      .dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
     993                      .dwattr $C$DW$T$5, DW_AT_name("signed char")
     994                      .dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
     995              $C$DW$T$6       .dwtag  DW_TAG_base_type
     996                      .dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
     997                      .dwattr $C$DW$T$6, DW_AT_name("unsigned char")
     998                      .dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
     999              $C$DW$T$26      .dwtag  DW_TAG_typedef, DW_AT_name("uint8_t")
    1000                      .dwattr $C$DW$T$26, DW_AT_type(*$C$DW$T$6)
    1001                      .dwattr $C$DW$T$26, DW_AT_language(DW_LANG_C)
    1002              $C$DW$102       .dwtag  DW_TAG_TI_far_type
    1003                      .dwattr $C$DW$102, DW_AT_type(*$C$DW$T$26)
    1004              $C$DW$T$27      .dwtag  DW_TAG_const_type
    1005                      .dwattr $C$DW$T$27, DW_AT_type(*$C$DW$102)
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   22

    1006              $C$DW$T$7       .dwtag  DW_TAG_base_type
    1007                      .dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
    1008                      .dwattr $C$DW$T$7, DW_AT_name("wchar_t")
    1009                      .dwattr $C$DW$T$7, DW_AT_byte_size(0x01)
    1010              $C$DW$T$8       .dwtag  DW_TAG_base_type
    1011                      .dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
    1012                      .dwattr $C$DW$T$8, DW_AT_name("short")
    1013                      .dwattr $C$DW$T$8, DW_AT_byte_size(0x01)
    1014              $C$DW$T$39      .dwtag  DW_TAG_typedef, DW_AT_name("BaseType_t")
    1015                      .dwattr $C$DW$T$39, DW_AT_type(*$C$DW$T$8)
    1016                      .dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
    1017              $C$DW$103       .dwtag  DW_TAG_TI_far_type
    1018                      .dwattr $C$DW$103, DW_AT_type(*$C$DW$T$39)
    1019              $C$DW$T$40      .dwtag  DW_TAG_const_type
    1020                      .dwattr $C$DW$T$40, DW_AT_type(*$C$DW$103)
    1021              $C$DW$T$60      .dwtag  DW_TAG_pointer_type
    1022                      .dwattr $C$DW$T$60, DW_AT_type(*$C$DW$T$39)
    1023                      .dwattr $C$DW$T$60, DW_AT_address_class(0x17)
    1024              $C$DW$104       .dwtag  DW_TAG_TI_far_type
    1025                      .dwattr $C$DW$104, DW_AT_type(*$C$DW$T$60)
    1026              $C$DW$T$61      .dwtag  DW_TAG_const_type
    1027                      .dwattr $C$DW$T$61, DW_AT_type(*$C$DW$104)
    1028              $C$DW$T$9       .dwtag  DW_TAG_base_type
    1029                      .dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
    1030                      .dwattr $C$DW$T$9, DW_AT_name("unsigned short")
    1031                      .dwattr $C$DW$T$9, DW_AT_byte_size(0x01)
    1032              $C$DW$T$24      .dwtag  DW_TAG_typedef, DW_AT_name("UBaseType_t")
    1033                      .dwattr $C$DW$T$24, DW_AT_type(*$C$DW$T$9)
    1034                      .dwattr $C$DW$T$24, DW_AT_language(DW_LANG_C)
    1035              $C$DW$105       .dwtag  DW_TAG_TI_far_type
    1036                      .dwattr $C$DW$105, DW_AT_type(*$C$DW$T$24)
    1037              $C$DW$T$25      .dwtag  DW_TAG_const_type
    1038                      .dwattr $C$DW$T$25, DW_AT_type(*$C$DW$105)
    1039              $C$DW$T$10      .dwtag  DW_TAG_base_type
    1040                      .dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
    1041                      .dwattr $C$DW$T$10, DW_AT_name("int")
    1042                      .dwattr $C$DW$T$10, DW_AT_byte_size(0x01)
    1043              $C$DW$T$11      .dwtag  DW_TAG_base_type
    1044                      .dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
    1045                      .dwattr $C$DW$T$11, DW_AT_name("unsigned int")
    1046                      .dwattr $C$DW$T$11, DW_AT_byte_size(0x01)
    1047              $C$DW$T$45      .dwtag  DW_TAG_typedef, DW_AT_name("uint16_t")
    1048                      .dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$11)
    1049                      .dwattr $C$DW$T$45, DW_AT_language(DW_LANG_C)
    1050              $C$DW$106       .dwtag  DW_TAG_TI_far_type
    1051                      .dwattr $C$DW$106, DW_AT_type(*$C$DW$T$45)
    1052              $C$DW$T$46      .dwtag  DW_TAG_const_type
    1053                      .dwattr $C$DW$T$46, DW_AT_type(*$C$DW$106)
    1054              $C$DW$T$12      .dwtag  DW_TAG_base_type
    1055                      .dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
    1056                      .dwattr $C$DW$T$12, DW_AT_name("long")
    1057                      .dwattr $C$DW$T$12, DW_AT_byte_size(0x02)
    1058              $C$DW$T$13      .dwtag  DW_TAG_base_type
    1059                      .dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
    1060                      .dwattr $C$DW$T$13, DW_AT_name("unsigned long")
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   23

    1061                      .dwattr $C$DW$T$13, DW_AT_byte_size(0x02)
    1062              $C$DW$T$53      .dwtag  DW_TAG_typedef, DW_AT_name("TickType_t")
    1063                      .dwattr $C$DW$T$53, DW_AT_type(*$C$DW$T$13)
    1064                      .dwattr $C$DW$T$53, DW_AT_language(DW_LANG_C)
    1065              $C$DW$T$69      .dwtag  DW_TAG_typedef, DW_AT_name("uint32_t")
    1066                      .dwattr $C$DW$T$69, DW_AT_type(*$C$DW$T$13)
    1067                      .dwattr $C$DW$T$69, DW_AT_language(DW_LANG_C)
    1068              $C$DW$107       .dwtag  DW_TAG_TI_far_type
    1069                      .dwattr $C$DW$107, DW_AT_type(*$C$DW$T$69)
    1070              $C$DW$T$71      .dwtag  DW_TAG_const_type
    1071                      .dwattr $C$DW$T$71, DW_AT_type(*$C$DW$107)
    1072              $C$DW$T$14      .dwtag  DW_TAG_base_type
    1073                      .dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
    1074                      .dwattr $C$DW$T$14, DW_AT_name("long long")
    1075                      .dwattr $C$DW$T$14, DW_AT_byte_size(0x04)
    1076                      .dwattr $C$DW$T$14, DW_AT_bit_size(0x28)
    1077                      .dwattr $C$DW$T$14, DW_AT_bit_offset(0x18)
    1078              $C$DW$T$15      .dwtag  DW_TAG_base_type
    1079                      .dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
    1080                      .dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
    1081                      .dwattr $C$DW$T$15, DW_AT_byte_size(0x04)
    1082                      .dwattr $C$DW$T$15, DW_AT_bit_size(0x28)
    1083                      .dwattr $C$DW$T$15, DW_AT_bit_offset(0x18)
    1084              $C$DW$T$16      .dwtag  DW_TAG_base_type
    1085                      .dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
    1086                      .dwattr $C$DW$T$16, DW_AT_name("float")
    1087                      .dwattr $C$DW$T$16, DW_AT_byte_size(0x02)
    1088              $C$DW$T$17      .dwtag  DW_TAG_base_type
    1089                      .dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
    1090                      .dwattr $C$DW$T$17, DW_AT_name("double")
    1091                      .dwattr $C$DW$T$17, DW_AT_byte_size(0x02)
    1092              $C$DW$T$18      .dwtag  DW_TAG_base_type
    1093                      .dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
    1094                      .dwattr $C$DW$T$18, DW_AT_name("long double")
    1095                      .dwattr $C$DW$T$18, DW_AT_byte_size(0x02)
    1096              $C$DW$T$41      .dwtag  DW_TAG_base_type
    1097                      .dwattr $C$DW$T$41, DW_AT_encoding(DW_ATE_signed_char)
    1098                      .dwattr $C$DW$T$41, DW_AT_name("signed char")
    1099                      .dwattr $C$DW$T$41, DW_AT_byte_size(0x01)
    1100              $C$DW$108       .dwtag  DW_TAG_TI_far_type
    1101                      .dwattr $C$DW$108, DW_AT_type(*$C$DW$T$41)
    1102              $C$DW$T$42      .dwtag  DW_TAG_const_type
    1103                      .dwattr $C$DW$T$42, DW_AT_type(*$C$DW$108)
    1104              $C$DW$T$43      .dwtag  DW_TAG_pointer_type
    1105                      .dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$42)
    1106                      .dwattr $C$DW$T$43, DW_AT_address_class(0x17)
    1107              $C$DW$109       .dwtag  DW_TAG_TI_far_type
    1108                      .dwattr $C$DW$109, DW_AT_type(*$C$DW$T$43)
    1109              $C$DW$T$44      .dwtag  DW_TAG_const_type
    1110                      .dwattr $C$DW$T$44, DW_AT_type(*$C$DW$109)
    1111              
    1112              $C$DW$T$20      .dwtag  DW_TAG_structure_type
    1113                      .dwattr $C$DW$T$20, DW_AT_name("tskTaskControlBlock")
    1114                      .dwattr $C$DW$T$20, DW_AT_declaration
    1115                      .dwendtag $C$DW$T$20
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   24

    1116              
    1117              $C$DW$T$47      .dwtag  DW_TAG_pointer_type
    1118                      .dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$20)
    1119                      .dwattr $C$DW$T$47, DW_AT_address_class(0x17)
    1120              $C$DW$T$48      .dwtag  DW_TAG_typedef, DW_AT_name("TaskHandle_t")
    1121                      .dwattr $C$DW$T$48, DW_AT_type(*$C$DW$T$47)
    1122                      .dwattr $C$DW$T$48, DW_AT_language(DW_LANG_C)
    1123              $C$DW$T$49      .dwtag  DW_TAG_pointer_type
    1124                      .dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$48)
    1125                      .dwattr $C$DW$T$49, DW_AT_address_class(0x17)
    1126              $C$DW$110       .dwtag  DW_TAG_TI_far_type
    1127                      .dwattr $C$DW$110, DW_AT_type(*$C$DW$T$49)
    1128              $C$DW$T$50      .dwtag  DW_TAG_const_type
    1129                      .dwattr $C$DW$T$50, DW_AT_type(*$C$DW$110)
    1130                      .dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)
    1131              
    1132              ;***************************************************************
    1133              ;* DWARF CIE ENTRIES                                           *
    1134              ;***************************************************************
    1135              
    1136              $C$DW$CIE       .dwcie 91
    1137                      .dwcfi  cfa_register, 36
    1138                      .dwcfi  cfa_offset, 0
    1139                      .dwcfi  undefined, 0
    1140                      .dwcfi  undefined, 1
    1141                      .dwcfi  undefined, 2
    1142                      .dwcfi  undefined, 3
    1143                      .dwcfi  undefined, 4
    1144                      .dwcfi  undefined, 5
    1145                      .dwcfi  undefined, 6
    1146                      .dwcfi  undefined, 7
    1147                      .dwcfi  undefined, 8
    1148                      .dwcfi  undefined, 9
    1149                      .dwcfi  undefined, 10
    1150                      .dwcfi  undefined, 11
    1151                      .dwcfi  undefined, 12
    1152                      .dwcfi  undefined, 13
    1153                      .dwcfi  same_value, 14
    1154                      .dwcfi  same_value, 15
    1155                      .dwcfi  undefined, 16
    1156                      .dwcfi  undefined, 17
    1157                      .dwcfi  undefined, 18
    1158                      .dwcfi  undefined, 19
    1159                      .dwcfi  undefined, 20
    1160                      .dwcfi  undefined, 21
    1161                      .dwcfi  undefined, 22
    1162                      .dwcfi  undefined, 23
    1163                      .dwcfi  undefined, 24
    1164                      .dwcfi  undefined, 25
    1165                      .dwcfi  same_value, 26
    1166                      .dwcfi  same_value, 27
    1167                      .dwcfi  same_value, 28
    1168                      .dwcfi  same_value, 29
    1169                      .dwcfi  same_value, 30
    1170                      .dwcfi  same_value, 31
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   25

    1171                      .dwcfi  undefined, 32
    1172                      .dwcfi  undefined, 33
    1173                      .dwcfi  undefined, 34
    1174                      .dwcfi  undefined, 35
    1175                      .dwcfi  undefined, 36
    1176                      .dwcfi  undefined, 37
    1177                      .dwcfi  undefined, 38
    1178                      .dwcfi  undefined, 39
    1179                      .dwcfi  undefined, 40
    1180                      .dwcfi  undefined, 41
    1181                      .dwcfi  undefined, 42
    1182                      .dwcfi  undefined, 43
    1183                      .dwcfi  undefined, 44
    1184                      .dwcfi  undefined, 45
    1185                      .dwcfi  undefined, 46
    1186                      .dwcfi  undefined, 47
    1187                      .dwcfi  undefined, 48
    1188                      .dwcfi  undefined, 49
    1189                      .dwcfi  undefined, 50
    1190                      .dwcfi  undefined, 51
    1191                      .dwcfi  undefined, 52
    1192                      .dwcfi  undefined, 53
    1193                      .dwcfi  undefined, 54
    1194                      .dwcfi  undefined, 55
    1195                      .dwcfi  undefined, 56
    1196                      .dwcfi  undefined, 57
    1197                      .dwcfi  undefined, 58
    1198                      .dwcfi  undefined, 59
    1199                      .dwcfi  undefined, 60
    1200                      .dwcfi  undefined, 61
    1201                      .dwcfi  undefined, 62
    1202                      .dwcfi  undefined, 63
    1203                      .dwcfi  undefined, 64
    1204                      .dwcfi  undefined, 65
    1205                      .dwcfi  undefined, 66
    1206                      .dwcfi  undefined, 67
    1207                      .dwcfi  undefined, 68
    1208                      .dwcfi  undefined, 69
    1209                      .dwcfi  undefined, 70
    1210                      .dwcfi  undefined, 71
    1211                      .dwcfi  undefined, 72
    1212                      .dwcfi  undefined, 73
    1213                      .dwcfi  undefined, 74
    1214                      .dwcfi  undefined, 75
    1215                      .dwcfi  undefined, 76
    1216                      .dwcfi  undefined, 77
    1217                      .dwcfi  undefined, 78
    1218                      .dwcfi  undefined, 79
    1219                      .dwcfi  undefined, 80
    1220                      .dwcfi  undefined, 81
    1221                      .dwcfi  undefined, 82
    1222                      .dwcfi  undefined, 83
    1223                      .dwcfi  undefined, 84
    1224                      .dwcfi  undefined, 85
    1225                      .dwcfi  undefined, 86
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   26

    1226                      .dwcfi  undefined, 87
    1227                      .dwcfi  undefined, 88
    1228                      .dwcfi  undefined, 89
    1229                      .dwcfi  undefined, 90
    1230                      .dwcfi  undefined, 91
    1231                      .dwendentry
    1232              
    1233              ;***************************************************************
    1234              ;* DWARF REGISTER MAP                                          *
    1235              ;***************************************************************
    1236              
    1237              $C$DW$111       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0")
    1238                      .dwattr $C$DW$111, DW_AT_location[DW_OP_reg0]
    1239              $C$DW$112       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0")
    1240                      .dwattr $C$DW$112, DW_AT_location[DW_OP_reg1]
    1241              $C$DW$113       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0_G")
    1242                      .dwattr $C$DW$113, DW_AT_location[DW_OP_reg2]
    1243              $C$DW$114       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1")
    1244                      .dwattr $C$DW$114, DW_AT_location[DW_OP_reg3]
    1245              $C$DW$115       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1")
    1246                      .dwattr $C$DW$115, DW_AT_location[DW_OP_reg4]
    1247              $C$DW$116       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1_G")
    1248                      .dwattr $C$DW$116, DW_AT_location[DW_OP_reg5]
    1249              $C$DW$117       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2")
    1250                      .dwattr $C$DW$117, DW_AT_location[DW_OP_reg6]
    1251              $C$DW$118       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2")
    1252                      .dwattr $C$DW$118, DW_AT_location[DW_OP_reg7]
    1253              $C$DW$119       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2_G")
    1254                      .dwattr $C$DW$119, DW_AT_location[DW_OP_reg8]
    1255              $C$DW$120       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3")
    1256                      .dwattr $C$DW$120, DW_AT_location[DW_OP_reg9]
    1257              $C$DW$121       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3")
    1258                      .dwattr $C$DW$121, DW_AT_location[DW_OP_reg10]
    1259              $C$DW$122       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3_G")
    1260                      .dwattr $C$DW$122, DW_AT_location[DW_OP_reg11]
    1261              $C$DW$123       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T0")
    1262                      .dwattr $C$DW$123, DW_AT_location[DW_OP_reg12]
    1263              $C$DW$124       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T1")
    1264                      .dwattr $C$DW$124, DW_AT_location[DW_OP_reg13]
    1265              $C$DW$125       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T2")
    1266                      .dwattr $C$DW$125, DW_AT_location[DW_OP_reg14]
    1267              $C$DW$126       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T3")
    1268                      .dwattr $C$DW$126, DW_AT_location[DW_OP_reg15]
    1269              $C$DW$127       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR0")
    1270                      .dwattr $C$DW$127, DW_AT_location[DW_OP_reg16]
    1271              $C$DW$128       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR0")
    1272                      .dwattr $C$DW$128, DW_AT_location[DW_OP_reg17]
    1273              $C$DW$129       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR1")
    1274                      .dwattr $C$DW$129, DW_AT_location[DW_OP_reg18]
    1275              $C$DW$130       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR1")
    1276                      .dwattr $C$DW$130, DW_AT_location[DW_OP_reg19]
    1277              $C$DW$131       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR2")
    1278                      .dwattr $C$DW$131, DW_AT_location[DW_OP_reg20]
    1279              $C$DW$132       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR2")
    1280                      .dwattr $C$DW$132, DW_AT_location[DW_OP_reg21]
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   27

    1281              $C$DW$133       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR3")
    1282                      .dwattr $C$DW$133, DW_AT_location[DW_OP_reg22]
    1283              $C$DW$134       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR3")
    1284                      .dwattr $C$DW$134, DW_AT_location[DW_OP_reg23]
    1285              $C$DW$135       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR4")
    1286                      .dwattr $C$DW$135, DW_AT_location[DW_OP_reg24]
    1287              $C$DW$136       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR4")
    1288                      .dwattr $C$DW$136, DW_AT_location[DW_OP_reg25]
    1289              $C$DW$137       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR5")
    1290                      .dwattr $C$DW$137, DW_AT_location[DW_OP_reg26]
    1291              $C$DW$138       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR5")
    1292                      .dwattr $C$DW$138, DW_AT_location[DW_OP_reg27]
    1293              $C$DW$139       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR6")
    1294                      .dwattr $C$DW$139, DW_AT_location[DW_OP_reg28]
    1295              $C$DW$140       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR6")
    1296                      .dwattr $C$DW$140, DW_AT_location[DW_OP_reg29]
    1297              $C$DW$141       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR7")
    1298                      .dwattr $C$DW$141, DW_AT_location[DW_OP_reg30]
    1299              $C$DW$142       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR7")
    1300                      .dwattr $C$DW$142, DW_AT_location[DW_OP_reg31]
    1301              $C$DW$143       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("FP")
    1302                      .dwattr $C$DW$143, DW_AT_location[DW_OP_regx 0x20]
    1303              $C$DW$144       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XFP")
    1304                      .dwattr $C$DW$144, DW_AT_location[DW_OP_regx 0x21]
    1305              $C$DW$145       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("PC")
    1306                      .dwattr $C$DW$145, DW_AT_location[DW_OP_regx 0x22]
    1307              $C$DW$146       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SP")
    1308                      .dwattr $C$DW$146, DW_AT_location[DW_OP_regx 0x23]
    1309              $C$DW$147       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XSP")
    1310                      .dwattr $C$DW$147, DW_AT_location[DW_OP_regx 0x24]
    1311              $C$DW$148       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BKC")
    1312                      .dwattr $C$DW$148, DW_AT_location[DW_OP_regx 0x25]
    1313              $C$DW$149       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BK03")
    1314                      .dwattr $C$DW$149, DW_AT_location[DW_OP_regx 0x26]
    1315              $C$DW$150       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BK47")
    1316                      .dwattr $C$DW$150, DW_AT_location[DW_OP_regx 0x27]
    1317              $C$DW$151       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST0")
    1318                      .dwattr $C$DW$151, DW_AT_location[DW_OP_regx 0x28]
    1319              $C$DW$152       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST1")
    1320                      .dwattr $C$DW$152, DW_AT_location[DW_OP_regx 0x29]
    1321              $C$DW$153       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST2")
    1322                      .dwattr $C$DW$153, DW_AT_location[DW_OP_regx 0x2a]
    1323              $C$DW$154       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST3")
    1324                      .dwattr $C$DW$154, DW_AT_location[DW_OP_regx 0x2b]
    1325              $C$DW$155       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP")
    1326                      .dwattr $C$DW$155, DW_AT_location[DW_OP_regx 0x2c]
    1327              $C$DW$156       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP05")
    1328                      .dwattr $C$DW$156, DW_AT_location[DW_OP_regx 0x2d]
    1329              $C$DW$157       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP67")
    1330                      .dwattr $C$DW$157, DW_AT_location[DW_OP_regx 0x2e]
    1331              $C$DW$158       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRC0")
    1332                      .dwattr $C$DW$158, DW_AT_location[DW_OP_regx 0x2f]
    1333              $C$DW$159       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA0")
    1334                      .dwattr $C$DW$159, DW_AT_location[DW_OP_regx 0x30]
    1335              $C$DW$160       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA0_H")
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   28

    1336                      .dwattr $C$DW$160, DW_AT_location[DW_OP_regx 0x31]
    1337              $C$DW$161       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA0")
    1338                      .dwattr $C$DW$161, DW_AT_location[DW_OP_regx 0x32]
    1339              $C$DW$162       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA0_H")
    1340                      .dwattr $C$DW$162, DW_AT_location[DW_OP_regx 0x33]
    1341              $C$DW$163       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRS1")
    1342                      .dwattr $C$DW$163, DW_AT_location[DW_OP_regx 0x34]
    1343              $C$DW$164       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRC1")
    1344                      .dwattr $C$DW$164, DW_AT_location[DW_OP_regx 0x35]
    1345              $C$DW$165       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA1")
    1346                      .dwattr $C$DW$165, DW_AT_location[DW_OP_regx 0x36]
    1347              $C$DW$166       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA1_H")
    1348                      .dwattr $C$DW$166, DW_AT_location[DW_OP_regx 0x37]
    1349              $C$DW$167       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA1")
    1350                      .dwattr $C$DW$167, DW_AT_location[DW_OP_regx 0x38]
    1351              $C$DW$168       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA1_H")
    1352                      .dwattr $C$DW$168, DW_AT_location[DW_OP_regx 0x39]
    1353              $C$DW$169       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CSR")
    1354                      .dwattr $C$DW$169, DW_AT_location[DW_OP_regx 0x3a]
    1355              $C$DW$170       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RPTC")
    1356                      .dwattr $C$DW$170, DW_AT_location[DW_OP_regx 0x3b]
    1357              $C$DW$171       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CDP")
    1358                      .dwattr $C$DW$171, DW_AT_location[DW_OP_regx 0x3c]
    1359              $C$DW$172       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XCDP")
    1360                      .dwattr $C$DW$172, DW_AT_location[DW_OP_regx 0x3d]
    1361              $C$DW$173       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TRN0")
    1362                      .dwattr $C$DW$173, DW_AT_location[DW_OP_regx 0x3e]
    1363              $C$DW$174       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TRN1")
    1364                      .dwattr $C$DW$174, DW_AT_location[DW_OP_regx 0x3f]
    1365              $C$DW$175       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA01")
    1366                      .dwattr $C$DW$175, DW_AT_location[DW_OP_regx 0x40]
    1367              $C$DW$176       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA23")
    1368                      .dwattr $C$DW$176, DW_AT_location[DW_OP_regx 0x41]
    1369              $C$DW$177       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA45")
    1370                      .dwattr $C$DW$177, DW_AT_location[DW_OP_regx 0x42]
    1371              $C$DW$178       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA67")
    1372                      .dwattr $C$DW$178, DW_AT_location[DW_OP_regx 0x43]
    1373              $C$DW$179       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSAC")
    1374                      .dwattr $C$DW$179, DW_AT_location[DW_OP_regx 0x44]
    1375              $C$DW$180       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CARRY")
    1376                      .dwattr $C$DW$180, DW_AT_location[DW_OP_regx 0x45]
    1377              $C$DW$181       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TC1")
    1378                      .dwattr $C$DW$181, DW_AT_location[DW_OP_regx 0x46]
    1379              $C$DW$182       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TC2")
    1380                      .dwattr $C$DW$182, DW_AT_location[DW_OP_regx 0x47]
    1381              $C$DW$183       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("M40")
    1382                      .dwattr $C$DW$183, DW_AT_location[DW_OP_regx 0x48]
    1383              $C$DW$184       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SXMD")
    1384                      .dwattr $C$DW$184, DW_AT_location[DW_OP_regx 0x49]
    1385              $C$DW$185       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ARMS")
    1386                      .dwattr $C$DW$185, DW_AT_location[DW_OP_regx 0x4a]
    1387              $C$DW$186       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("C54CM")
    1388                      .dwattr $C$DW$186, DW_AT_location[DW_OP_regx 0x4b]
    1389              $C$DW$187       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SATA")
    1390                      .dwattr $C$DW$187, DW_AT_location[DW_OP_regx 0x4c]
TMS320C55x Assembler PC v4.4.1 Sat Sep 22 15:53:55 2018

Tools Copyright (c) 1996-2012 Texas Instruments Incorporated
QueueOverwrite.asm                                                   PAGE   29

    1391              $C$DW$188       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SATD")
    1392                      .dwattr $C$DW$188, DW_AT_location[DW_OP_regx 0x4d]
    1393              $C$DW$189       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RDM")
    1394                      .dwattr $C$DW$189, DW_AT_location[DW_OP_regx 0x4e]
    1395              $C$DW$190       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("FRCT")
    1396                      .dwattr $C$DW$190, DW_AT_location[DW_OP_regx 0x4f]
    1397              $C$DW$191       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SMUL")
    1398                      .dwattr $C$DW$191, DW_AT_location[DW_OP_regx 0x50]
    1399              $C$DW$192       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("INTM")
    1400                      .dwattr $C$DW$192, DW_AT_location[DW_OP_regx 0x51]
    1401              $C$DW$193       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR0LC")
    1402                      .dwattr $C$DW$193, DW_AT_location[DW_OP_regx 0x52]
    1403              $C$DW$194       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR1LC")
    1404                      .dwattr $C$DW$194, DW_AT_location[DW_OP_regx 0x53]
    1405              $C$DW$195       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR2LC")
    1406                      .dwattr $C$DW$195, DW_AT_location[DW_OP_regx 0x54]
    1407              $C$DW$196       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR3LC")
    1408                      .dwattr $C$DW$196, DW_AT_location[DW_OP_regx 0x55]
    1409              $C$DW$197       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR4LC")
    1410                      .dwattr $C$DW$197, DW_AT_location[DW_OP_regx 0x56]
    1411              $C$DW$198       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR5LC")
    1412                      .dwattr $C$DW$198, DW_AT_location[DW_OP_regx 0x57]
    1413              $C$DW$199       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR6LC")
    1414                      .dwattr $C$DW$199, DW_AT_location[DW_OP_regx 0x58]
    1415              $C$DW$200       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR7LC")
    1416                      .dwattr $C$DW$200, DW_AT_location[DW_OP_regx 0x59]
    1417              $C$DW$201       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CDPLC")
    1418                      .dwattr $C$DW$201, DW_AT_location[DW_OP_regx 0x5a]
    1419              $C$DW$202       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CIE_RETA")
    1420                      .dwattr $C$DW$202, DW_AT_location[DW_OP_regx 0x5b]
    1421                      .dwendtag $C$DW$CU
    1422              
    1422              
    1422              

No Assembly Errors, No Assembly Warnings
