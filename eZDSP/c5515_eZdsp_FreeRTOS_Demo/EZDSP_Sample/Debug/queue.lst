TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    1

       1              ;*******************************************************************************
       2              ;* TMS320C55x C/C++ Codegen                                          PC v4.3.8 *
       3              ;* Date/Time created: Fri Jan 21 01:13:25 2011                                 *
       4              ;*******************************************************************************
       5                      .compiler_opts --hll_source=on --mem_model:code=flat --mem_model:data=huge --silicon_core_3_3 --symde
       6                      .mmregs
       7                      .cpl_on
       8                      .arms_on
       9                      .c54cm_off
      10                      .asg AR6, FP
      11                      .asg XAR6, XFP
      12                      .model call=c55_std
      13                      .model mem=huge
      14                      .noremark 5002  ; code respects overwrite rules
      15              ;*******************************************************************************
      16              ;* GLOBAL FILE PARAMETERS                                                      *
      17              ;*                                                                             *
      18              ;*   Architecture       : TMS320C55x                                           *
      19              ;*   Optimizing for     : Speed                                                *
      20              ;*   Memory             : Huge Model (23-Bit Data Pointers)                    *
      21              ;*   Calls              : Normal Library ASM calls                             *
      22              ;*   Debug Info         : Standard TI Debug Information                        *
      23              ;*******************************************************************************
      24              
      25              $C$DW$CU        .dwtag  DW_TAG_compile_unit
      26                      .dwattr $C$DW$CU, DW_AT_name("../FreeRTOS/Source/queue.c")
      27                      .dwattr $C$DW$CU, DW_AT_producer("TMS320C55x C/C++ Codegen PC v4.3.8 Copyright (c) 1996-2010 Texas In
      28                      .dwattr $C$DW$CU, DW_AT_TI_version(0x01)
      29                      .dwattr $C$DW$CU, DW_AT_comp_dir("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\Debug")
      30              
      31              $C$DW$1 .dwtag  DW_TAG_subprogram, DW_AT_name("memcpy")
      32                      .dwattr $C$DW$1, DW_AT_TI_symbol_name("_memcpy")
      33                      .dwattr $C$DW$1, DW_AT_type(*$C$DW$T$3)
      34                      .dwattr $C$DW$1, DW_AT_declaration
      35                      .dwattr $C$DW$1, DW_AT_external
      36                      .dwattr $C$DW$1, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Generati
      37                      .dwattr $C$DW$1, DW_AT_decl_line(0x35)
      38                      .dwattr $C$DW$1, DW_AT_decl_column(0x16)
      39              $C$DW$2 .dwtag  DW_TAG_formal_parameter
      40                      .dwattr $C$DW$2, DW_AT_type(*$C$DW$T$3)
      41              $C$DW$3 .dwtag  DW_TAG_formal_parameter
      42                      .dwattr $C$DW$3, DW_AT_type(*$C$DW$T$55)
      43              $C$DW$4 .dwtag  DW_TAG_formal_parameter
      44                      .dwattr $C$DW$4, DW_AT_type(*$C$DW$T$56)
      45                      .dwendtag $C$DW$1
      46              
      47              
      48              $C$DW$5 .dwtag  DW_TAG_subprogram, DW_AT_name("_enable_interrupts")
      49                      .dwattr $C$DW$5, DW_AT_TI_symbol_name("__enable_interrupts")
      50                      .dwattr $C$DW$5, DW_AT_declaration
      51                      .dwattr $C$DW$5, DW_AT_external
      52                      .dwattr $C$DW$5, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Generati
      53                      .dwattr $C$DW$5, DW_AT_decl_line(0x78)
      54                      .dwattr $C$DW$5, DW_AT_decl_column(0x0e)
      55              
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    2

      56              $C$DW$6 .dwtag  DW_TAG_subprogram, DW_AT_name("_disable_interrupts")
      57                      .dwattr $C$DW$6, DW_AT_TI_symbol_name("__disable_interrupts")
      58                      .dwattr $C$DW$6, DW_AT_type(*$C$DW$T$11)
      59                      .dwattr $C$DW$6, DW_AT_declaration
      60                      .dwattr $C$DW$6, DW_AT_external
      61                      .dwattr $C$DW$6, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Generati
      62                      .dwattr $C$DW$6, DW_AT_decl_line(0x79)
      63                      .dwattr $C$DW$6, DW_AT_decl_column(0x0e)
      64              
      65              $C$DW$7 .dwtag  DW_TAG_subprogram, DW_AT_name("vPortYield")
      66                      .dwattr $C$DW$7, DW_AT_TI_symbol_name("_vPortYield")
      67                      .dwattr $C$DW$7, DW_AT_declaration
      68                      .dwattr $C$DW$7, DW_AT_external
      69                      .dwattr $C$DW$7, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\incl
      70                      .dwattr $C$DW$7, DW_AT_decl_line(0x8d)
      71                      .dwattr $C$DW$7, DW_AT_decl_column(0x0d)
      72              
      73              $C$DW$8 .dwtag  DW_TAG_subprogram, DW_AT_name("pvPortMalloc")
      74                      .dwattr $C$DW$8, DW_AT_TI_symbol_name("_pvPortMalloc")
      75                      .dwattr $C$DW$8, DW_AT_type(*$C$DW$T$3)
      76                      .dwattr $C$DW$8, DW_AT_declaration
      77                      .dwattr $C$DW$8, DW_AT_external
      78                      .dwattr $C$DW$8, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\incl
      79                      .dwattr $C$DW$8, DW_AT_decl_line(0x167)
      80                      .dwattr $C$DW$8, DW_AT_decl_column(0x07)
      81              $C$DW$9 .dwtag  DW_TAG_formal_parameter
      82                      .dwattr $C$DW$9, DW_AT_type(*$C$DW$T$56)
      83                      .dwendtag $C$DW$8
      84              
      85              
      86              $C$DW$10        .dwtag  DW_TAG_subprogram, DW_AT_name("vPortFree")
      87                      .dwattr $C$DW$10, DW_AT_TI_symbol_name("_vPortFree")
      88                      .dwattr $C$DW$10, DW_AT_declaration
      89                      .dwattr $C$DW$10, DW_AT_external
      90                      .dwattr $C$DW$10, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\inc
      91                      .dwattr $C$DW$10, DW_AT_decl_line(0x168)
      92                      .dwattr $C$DW$10, DW_AT_decl_column(0x06)
      93              $C$DW$11        .dwtag  DW_TAG_formal_parameter
      94                      .dwattr $C$DW$11, DW_AT_type(*$C$DW$T$3)
      95                      .dwendtag $C$DW$10
      96              
      97              
      98              $C$DW$12        .dwtag  DW_TAG_subprogram, DW_AT_name("vListInitialise")
      99                      .dwattr $C$DW$12, DW_AT_TI_symbol_name("_vListInitialise")
     100                      .dwattr $C$DW$12, DW_AT_declaration
     101                      .dwattr $C$DW$12, DW_AT_external
     102                      .dwattr $C$DW$12, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\inc
     103                      .dwattr $C$DW$12, DW_AT_decl_line(0xf1)
     104                      .dwattr $C$DW$12, DW_AT_decl_column(0x06)
     105              $C$DW$13        .dwtag  DW_TAG_formal_parameter
     106                      .dwattr $C$DW$13, DW_AT_type(*$C$DW$T$65)
     107                      .dwendtag $C$DW$12
     108              
     109              
     110              $C$DW$14        .dwtag  DW_TAG_subprogram, DW_AT_name("vTaskSuspendAll")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    3

     111                      .dwattr $C$DW$14, DW_AT_TI_symbol_name("_vTaskSuspendAll")
     112                      .dwattr $C$DW$14, DW_AT_declaration
     113                      .dwattr $C$DW$14, DW_AT_external
     114                      .dwattr $C$DW$14, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     115                      .dwattr $C$DW$14, DW_AT_decl_line(0x37f)
     116                      .dwattr $C$DW$14, DW_AT_decl_column(0x06)
     117              
     118              $C$DW$15        .dwtag  DW_TAG_subprogram, DW_AT_name("xTaskResumeAll")
     119                      .dwattr $C$DW$15, DW_AT_TI_symbol_name("_xTaskResumeAll")
     120                      .dwattr $C$DW$15, DW_AT_type(*$C$DW$T$10)
     121                      .dwattr $C$DW$15, DW_AT_declaration
     122                      .dwattr $C$DW$15, DW_AT_external
     123                      .dwattr $C$DW$15, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     124                      .dwattr $C$DW$15, DW_AT_decl_line(0x3b3)
     125                      .dwattr $C$DW$15, DW_AT_decl_column(0x16)
     126              
     127              $C$DW$16        .dwtag  DW_TAG_subprogram, DW_AT_name("vTaskPlaceOnEventList")
     128                      .dwattr $C$DW$16, DW_AT_TI_symbol_name("_vTaskPlaceOnEventList")
     129                      .dwattr $C$DW$16, DW_AT_declaration
     130                      .dwattr $C$DW$16, DW_AT_external
     131                      .dwattr $C$DW$16, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     132                      .dwattr $C$DW$16, DW_AT_decl_line(0x491)
     133                      .dwattr $C$DW$16, DW_AT_decl_column(0x06)
     134              $C$DW$17        .dwtag  DW_TAG_formal_parameter
     135                      .dwattr $C$DW$17, DW_AT_type(*$C$DW$T$70)
     136              $C$DW$18        .dwtag  DW_TAG_formal_parameter
     137                      .dwattr $C$DW$18, DW_AT_type(*$C$DW$T$19)
     138                      .dwendtag $C$DW$16
     139              
     140              
     141              $C$DW$19        .dwtag  DW_TAG_subprogram, DW_AT_name("xTaskRemoveFromEventList")
     142                      .dwattr $C$DW$19, DW_AT_TI_symbol_name("_xTaskRemoveFromEventList")
     143                      .dwattr $C$DW$19, DW_AT_type(*$C$DW$T$10)
     144                      .dwattr $C$DW$19, DW_AT_declaration
     145                      .dwattr $C$DW$19, DW_AT_external
     146                      .dwattr $C$DW$19, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     147                      .dwattr $C$DW$19, DW_AT_decl_line(0x4a2)
     148                      .dwattr $C$DW$19, DW_AT_decl_column(0x16)
     149              $C$DW$20        .dwtag  DW_TAG_formal_parameter
     150                      .dwattr $C$DW$20, DW_AT_type(*$C$DW$T$70)
     151                      .dwendtag $C$DW$19
     152              
     153              
     154              $C$DW$21        .dwtag  DW_TAG_subprogram, DW_AT_name("vTaskSetTimeOutState")
     155                      .dwattr $C$DW$21, DW_AT_TI_symbol_name("_vTaskSetTimeOutState")
     156                      .dwattr $C$DW$21, DW_AT_declaration
     157                      .dwattr $C$DW$21, DW_AT_external
     158                      .dwattr $C$DW$21, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     159                      .dwattr $C$DW$21, DW_AT_decl_line(0x4c3)
     160                      .dwattr $C$DW$21, DW_AT_decl_column(0x06)
     161              $C$DW$22        .dwtag  DW_TAG_formal_parameter
     162                      .dwattr $C$DW$22, DW_AT_type(*$C$DW$T$75)
     163                      .dwendtag $C$DW$21
     164              
     165              
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    4

     166              $C$DW$23        .dwtag  DW_TAG_subprogram, DW_AT_name("xTaskCheckForTimeOut")
     167                      .dwattr $C$DW$23, DW_AT_TI_symbol_name("_xTaskCheckForTimeOut")
     168                      .dwattr $C$DW$23, DW_AT_type(*$C$DW$T$10)
     169                      .dwattr $C$DW$23, DW_AT_declaration
     170                      .dwattr $C$DW$23, DW_AT_external
     171                      .dwattr $C$DW$23, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     172                      .dwattr $C$DW$23, DW_AT_decl_line(0x4c9)
     173                      .dwattr $C$DW$23, DW_AT_decl_column(0x0f)
     174              $C$DW$24        .dwtag  DW_TAG_formal_parameter
     175                      .dwattr $C$DW$24, DW_AT_type(*$C$DW$T$75)
     176              $C$DW$25        .dwtag  DW_TAG_formal_parameter
     177                      .dwattr $C$DW$25, DW_AT_type(*$C$DW$T$96)
     178                      .dwendtag $C$DW$23
     179              
     180              
     181              $C$DW$26        .dwtag  DW_TAG_subprogram, DW_AT_name("vTaskMissedYield")
     182                      .dwattr $C$DW$26, DW_AT_TI_symbol_name("_vTaskMissedYield")
     183                      .dwattr $C$DW$26, DW_AT_declaration
     184                      .dwattr $C$DW$26, DW_AT_external
     185                      .dwattr $C$DW$26, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     186                      .dwattr $C$DW$26, DW_AT_decl_line(0x4cf)
     187                      .dwattr $C$DW$26, DW_AT_decl_column(0x06)
     188              
     189              $C$DW$27        .dwtag  DW_TAG_subprogram, DW_AT_name("vCoRoutineAddToDelayedList")
     190                      .dwattr $C$DW$27, DW_AT_TI_symbol_name("_vCoRoutineAddToDelayedList")
     191                      .dwattr $C$DW$27, DW_AT_declaration
     192                      .dwattr $C$DW$27, DW_AT_external
     193                      .dwattr $C$DW$27, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     194                      .dwattr $C$DW$27, DW_AT_decl_line(0x2de)
     195                      .dwattr $C$DW$27, DW_AT_decl_column(0x06)
     196              $C$DW$28        .dwtag  DW_TAG_formal_parameter
     197                      .dwattr $C$DW$28, DW_AT_type(*$C$DW$T$19)
     198              $C$DW$29        .dwtag  DW_TAG_formal_parameter
     199                      .dwattr $C$DW$29, DW_AT_type(*$C$DW$T$65)
     200                      .dwendtag $C$DW$27
     201              
     202              
     203              $C$DW$30        .dwtag  DW_TAG_subprogram, DW_AT_name("xCoRoutineRemoveFromEventList")
     204                      .dwattr $C$DW$30, DW_AT_TI_symbol_name("_xCoRoutineRemoveFromEventList")
     205                      .dwattr $C$DW$30, DW_AT_type(*$C$DW$T$10)
     206                      .dwattr $C$DW$30, DW_AT_declaration
     207                      .dwattr $C$DW$30, DW_AT_external
     208                      .dwattr $C$DW$30, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/inc
     209                      .dwattr $C$DW$30, DW_AT_decl_line(0x2e7)
     210                      .dwattr $C$DW$30, DW_AT_decl_column(0x16)
     211              $C$DW$31        .dwtag  DW_TAG_formal_parameter
     212                      .dwattr $C$DW$31, DW_AT_type(*$C$DW$T$69)
     213                      .dwendtag $C$DW$30
     214              
     215              $C$DW$32        .dwtag  DW_TAG_variable, DW_AT_name("usCriticalNesting")
     216                      .dwattr $C$DW$32, DW_AT_TI_symbol_name("_usCriticalNesting")
     217                      .dwattr $C$DW$32, DW_AT_type(*$C$DW$T$24)
     218                      .dwattr $C$DW$32, DW_AT_declaration
     219                      .dwattr $C$DW$32, DW_AT_external
     220                      .dwattr $C$DW$32, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    5

     221                      .dwattr $C$DW$32, DW_AT_decl_line(0x1ce)
     222                      .dwattr $C$DW$32, DW_AT_decl_column(0x03)
     223              ;       C:\Texas Instruments Tools\ccsv4\tools\compiler\C5500 Code Generation Tools 4.3.8\bin\opt55.exe C:\\U
     224 000000               .sect   ".text"
     225                      .global _xQueueCreate
     226              
     227              $C$DW$33        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueCreate")
     228                      .dwattr $C$DW$33, DW_AT_low_pc(_xQueueCreate)
     229                      .dwattr $C$DW$33, DW_AT_high_pc(0x00)
     230                      .dwattr $C$DW$33, DW_AT_TI_symbol_name("_xQueueCreate")
     231                      .dwattr $C$DW$33, DW_AT_external
     232                      .dwattr $C$DW$33, DW_AT_type(*$C$DW$T$82)
     233                      .dwattr $C$DW$33, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
     234                      .dwattr $C$DW$33, DW_AT_TI_begin_line(0xf8)
     235                      .dwattr $C$DW$33, DW_AT_TI_begin_column(0x0e)
     236                      .dwattr $C$DW$33, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
     237                      .dwattr $C$DW$33, DW_AT_decl_line(0xf8)
     238                      .dwattr $C$DW$33, DW_AT_decl_column(0x0e)
     239                      .dwattr $C$DW$33, DW_AT_TI_max_frame_size(0x04)
     240                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 249,column 1,is_stmt,address _xQueueCreate
     241              
     242                      .dwfde $C$DW$CIE, _xQueueCreate
     243              $C$DW$34        .dwtag  DW_TAG_formal_parameter, DW_AT_name("uxQueueLength")
     244                      .dwattr $C$DW$34, DW_AT_TI_symbol_name("_uxQueueLength")
     245                      .dwattr $C$DW$34, DW_AT_type(*$C$DW$T$11)
     246                      .dwattr $C$DW$34, DW_AT_location[DW_OP_reg12]
     247              $C$DW$35        .dwtag  DW_TAG_formal_parameter, DW_AT_name("uxItemSize")
     248                      .dwattr $C$DW$35, DW_AT_TI_symbol_name("_uxItemSize")
     249                      .dwattr $C$DW$35, DW_AT_type(*$C$DW$T$11)
     250                      .dwattr $C$DW$35, DW_AT_location[DW_OP_reg13]
     251              ;*******************************************************************************
     252              ;* FUNCTION NAME: xQueueCreate                                                 *
     253              ;*                                                                             *
     254              ;*   Function Uses Regs : AC0,AC0,T0,T1,T2,T3,AR0,XAR0,AR2,XAR2,AR3,XAR3,AR5,  *
     255              ;*                        XAR5,SP,CARRY,M40,SATA,SATD,RDM,FRCT,SMUL            *
     256              ;*   Save On Entry Regs : T2,T3,AR5                                            *
     257              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
     258              ;*   Total Frame Size   : 4 words                                              *
     259              ;*                        (1 return address/alignment)                         *
     260              ;*                        (3 register save area)                               *
     261              ;*   Min System Stack   : 2 words                                              *
     262              ;*******************************************************************************
     263              
     264              ;*******************************************************************************
     265              ;*                                                                             *
     266              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
     267              ;*                                                                             *
     268              ;*******************************************************************************
     269 000000       _xQueueCreate:
     270              ;** 254 -----------------------    if ( !uxQueueLength ) goto g6;
     271                      .dwcfi  cfa_offset, 1
     272                      .dwcfi  save_reg_to_mem, 91, -1
     273 000000 5066          push(T2)
     274                      .dwcfi  cfa_offset, 2
     275                      .dwcfi  save_reg_to_mem, 14, -2
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    6

     276 000002 5076          push(T3)
     277                      .dwcfi  cfa_offset, 3
     278                      .dwcfi  save_reg_to_mem, 15, -3
     279 000004 50D5          pshboth(XAR5)
     280                      .dwcfi  cfa_offset, 4
     281                      .dwcfi  save_reg_to_mem, 26, -4
     282                      .dwcfi  cfa_offset, 4
     283              ;* AC0   assigned to _xQueueSizeInBytes
     284              $C$DW$36        .dwtag  DW_TAG_variable, DW_AT_name("xQueueSizeInBytes")
     285                      .dwattr $C$DW$36, DW_AT_TI_symbol_name("_xQueueSizeInBytes")
     286                      .dwattr $C$DW$36, DW_AT_type(*$C$DW$T$56)
     287                      .dwattr $C$DW$36, DW_AT_location[DW_OP_reg0]
     288              ;* AR5   assigned to _pxNewQueue
     289              $C$DW$37        .dwtag  DW_TAG_variable, DW_AT_name("pxNewQueue")
     290                      .dwattr $C$DW$37, DW_AT_TI_symbol_name("_pxNewQueue")
     291                      .dwattr $C$DW$37, DW_AT_type(*$C$DW$T$81)
     292                      .dwattr $C$DW$37, DW_AT_location[DW_OP_reg27]
     293              ;* T3    assigned to _uxItemSize
     294              $C$DW$38        .dwtag  DW_TAG_variable, DW_AT_name("uxItemSize")
     295                      .dwattr $C$DW$38, DW_AT_TI_symbol_name("_uxItemSize")
     296                      .dwattr $C$DW$38, DW_AT_type(*$C$DW$T$11)
     297                      .dwattr $C$DW$38, DW_AT_location[DW_OP_reg15]
     298              ;* T2    assigned to _uxQueueLength
     299              $C$DW$39        .dwtag  DW_TAG_variable, DW_AT_name("uxQueueLength")
     300                      .dwattr $C$DW$39, DW_AT_TI_symbol_name("_uxQueueLength")
     301                      .dwattr $C$DW$39, DW_AT_type(*$C$DW$T$11)
     302                      .dwattr $C$DW$39, DW_AT_location[DW_OP_reg14]
     303 000006 2246          T2 = T0   ; |249| 
     304 000008 2257          T3 = T1   ; |249| 
     305                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 254,column 2,is_stmt
     306 00000a 6D06          if (T2 == #0) goto $C$L2 ; |254| 
         00000c 0095 
     307                                                      ; branchcc occurs ; |254| 
     308              ;** 256 -----------------------    pxNewQueue = (struct _QueueDefinition *)pvPortMalloc(34uL);
     309              ;** 257 -----------------------    if ( pxNewQueue == NULL ) goto g6;
     310                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 256,column 3,is_stmt
     311 00000e 7600          AC0 = #34 ; |256| 
         000010 2208 
     312              $C$DW$40        .dwtag  DW_TAG_TI_branch
     313                      .dwattr $C$DW$40, DW_AT_low_pc(0x00)
     314                      .dwattr $C$DW$40, DW_AT_name("_pvPortMalloc")
     315                      .dwattr $C$DW$40, DW_AT_TI_call
     316 000012 6C00          call #_pvPortMalloc ; |256| 
         000014 0000!
     317                                                      ; call occurs [#_pvPortMalloc] ; |256| 
     318 000016 EC01          XAR5 = mar(*AR0)
         000018 DE   
     319                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 257,column 3,is_stmt
     320 000019 90D0          AC0 = XAR5
     321 00001b 6D00          if (AC0 == #0) goto $C$L2 ; |257| 
         00001d 0084 
     322                                                      ; branchcc occurs ; |257| 
     323              ;** 261 -----------------------    xQueueSizeInBytes = (unsigned long)(uxQueueLength*uxItemSize)+1uL;
     324              ;** 263 -----------------------    (*pxNewQueue).pcHead = (char *)pvPortMalloc(xQueueSizeInBytes);
     325              ;** 264 -----------------------    if ( (*pxNewQueue).pcHead == NULL ) goto g5;
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    7

     326                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 261,column 4,is_stmt
     327              
     328 00001f 5260          HI(AC0) = T2
     329 000021 2375  ||      T1 = T3
     330              
     331 000023 5804          AC0 = AC0 * T1 ; |261| 
     332 000025 7DFF          AC0 = AC0 & #0xffff ; |261| 
         000027 FF00 
     333 000029 4010          AC0 = AC0 + #1 ; |261| 
     334                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 263,column 4,is_stmt
     335              $C$DW$41        .dwtag  DW_TAG_TI_branch
     336                      .dwattr $C$DW$41, DW_AT_low_pc(0x00)
     337                      .dwattr $C$DW$41, DW_AT_name("_pvPortMalloc")
     338                      .dwattr $C$DW$41, DW_AT_TI_call
     339 00002b 6C00          call #_pvPortMalloc ; |263| 
         00002d 0000!
     340                                                      ; call occurs [#_pvPortMalloc] ; |263| 
     341 00002f EBA1          dbl(*AR5) = XAR0
         000031 85   
     342                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 264,column 4,is_stmt
     343 000032 EDA1          XAR3 = dbl(*AR5)
         000034 BF   
     344 000035 90B0          AC0 = XAR3
     345 000037 0400          if (AC0 == #0) goto $C$L1 ; |264| 
         000039 62   
     346                                                      ; branchcc occurs ; |264| 
     347              ;** 268 -----------------------    (*pxNewQueue).pcTail = uxQueueLength*uxItemSize+(*pxNewQueue).pcHead;
     348              ;** 269 -----------------------    (*pxNewQueue).uxMessagesWaiting = 0u;
     349              ;** 270 -----------------------    (*pxNewQueue).pcWriteTo = (*pxNewQueue).pcHead;
     350              ;** 271 -----------------------    (*pxNewQueue).pcReadFrom = (uxQueueLength-1u)*uxItemSize+(*pxNewQueue).pcH
     351              ;** 272 -----------------------    (*pxNewQueue).uxLength = uxQueueLength;
     352              ;** 273 -----------------------    (*pxNewQueue).uxItemSize = uxItemSize;
     353              ;** 274 -----------------------    (*pxNewQueue).xRxLock = (-1);
     354              ;** 275 -----------------------    (*pxNewQueue).xTxLock = (-1);
     355              ;** 278 -----------------------    vListInitialise((struct _xLIST *)pxNewQueue+8L);
     356              ;** 279 -----------------------    vListInitialise((struct _xLIST *)pxNewQueue+18L);
     357              ;** 282 -----------------------    return pxNewQueue;
     358                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 268,column 5,is_stmt
     359 00003a EDA1          XAR3 = dbl(*AR5)
         00003c BF   
     360              
     361 00003d 5260          HI(AC0) = T2
     362 00003f 2375  ||      T1 = T3
     363              
     364 000041 5804          AC0 = AC0 * T1 ; |268| 
     365 000043 7DFF          AC0 = AC0 & #0xffff ; |268| 
         000045 FF00 
     366 000047 900A          XAR2 = AC0
     367              
     368 000049 8EB5          dbl(*AR5(short(#2))) = XAR3
         00004b BB10 
         00004d B5A1 
     369              ||      mar(XAR3 + XAR2) ; |268| 
     370              
     371                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 269,column 5,is_stmt
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    8

     372 00004f E6AD          *AR5(#28) = #0 ; |269| 
         000051 0000 
         000053 1C   
     373                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 270,column 5,is_stmt
     374 000054 EDA1          XAR3 = dbl(*AR5)
         000056 BF   
     375 000057 EBB9          dbl(*AR5(short(#4))) = XAR3
         000059 B5   
     376                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 271,column 5,is_stmt
     377 00005a EDA1          XAR3 = dbl(*AR5)
         00005c BF   
     378              
     379 000061 5370          HI(AC0) = T3
     380 00005d 7C00  ||      T1 = T2 - #1 ; |271| 
         00005f 0156 
     381              
     382 000063 5804          AC0 = AC0 * T1 ; |271| 
     383 000065 7DFF          AC0 = AC0 & #0xffff ; |271| 
         000067 FF00 
     384 000069 900A          XAR2 = AC0
     385              
     386 00006b 8EBD          dbl(*AR5(short(#6))) = XAR3
         00006d BB10 
         00006f B5A1 
     387              ||      mar(XAR3 + XAR2) ; |271| 
     388              
     389                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 272,column 5,is_stmt
     390 000071 C6AD          *AR5(#29) = T2 ; |272| 
         000073 001D 
     391                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 273,column 5,is_stmt
     392 000075 C7AD          *AR5(#30) = T3 ; |273| 
         000077 001E 
     393                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 274,column 5,is_stmt
     394 000079 E6AD          *AR5(#31) = #-1 ; |274| 
         00007b FF00 
         00007d 1F   
     395                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 275,column 5,is_stmt
     396 00007e E6AD          *AR5(#32) = #-1 ; |275| 
         000080 FF00 
         000082 20   
     397                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 278,column 5,is_stmt
     398 000083 ECA1          XAR0 = mar(*AR5)
         000085 8E   
     399 000086 1408          mar(AR0 + #8) ; |278| 
         000088 84   
     400              $C$DW$42        .dwtag  DW_TAG_TI_branch
     401                      .dwattr $C$DW$42, DW_AT_low_pc(0x00)
     402                      .dwattr $C$DW$42, DW_AT_name("_vListInitialise")
     403                      .dwattr $C$DW$42, DW_AT_TI_call
     404 000089 6C00          call #_vListInitialise ; |278| 
         00008b 0000!
     405                                                      ; call occurs [#_vListInitialise] ; |278| 
     406                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 279,column 5,is_stmt
     407 00008d ECA1          XAR0 = mar(*AR5)
         00008f 8E   
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE    9

     408 000090 1412          mar(AR0 + #18) ; |279| 
         000092 84   
     409              $C$DW$43        .dwtag  DW_TAG_TI_branch
     410                      .dwattr $C$DW$43, DW_AT_low_pc(0x00)
     411                      .dwattr $C$DW$43, DW_AT_name("_vListInitialise")
     412                      .dwattr $C$DW$43, DW_AT_TI_call
     413 000093 6C00          call #_vListInitialise ; |279| 
         000095 0000!
     414                                                      ; call occurs [#_vListInitialise] ; |279| 
     415                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 282,column 5,is_stmt
     416 000097 ECA1          XAR0 = mar(*AR5)
         000099 8E   
     417 00009a 4A0D          goto $C$L3 ; |282| 
     418                                                      ; branch occurs ; |282| 
     419 00009c       $C$L1:    
     420              ;**     -----------------------g5:
     421              ;** 287 -----------------------    vPortFree((void *)pxNewQueue);
     422                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 287,column 5,is_stmt
     423 00009c ECA1          XAR0 = mar(*AR5)
         00009e 8E   
     424              $C$DW$44        .dwtag  DW_TAG_TI_branch
     425                      .dwattr $C$DW$44, DW_AT_low_pc(0x00)
     426                      .dwattr $C$DW$44, DW_AT_name("_vPortFree")
     427                      .dwattr $C$DW$44, DW_AT_TI_call
     428 00009f 6C00          call #_vPortFree ; |287| 
         0000a1 0000!
     429                                                      ; call occurs [#_vPortFree] ; |287| 
     430 0000a3       $C$L2:    
     431              ;**     -----------------------g6:
     432              ;** 294 -----------------------    return NULL;
     433                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 294,column 2,is_stmt
     434 0000a3 EC31          XAR0 = #0 ; |294| 
         0000a5 8E00 
         0000a7 0000 
     435 0000a9       $C$L3:    
     436                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 295,column 1,is_stmt
     437                      .dwcfi  cfa_offset, 4
     438 0000a9 50D4          XAR5 = popboth()
     439                      .dwcfi  restore_reg, 26
     440                      .dwcfi  cfa_offset, 3
     441 0000ab 5072          T3 = pop()
     442                      .dwcfi  restore_reg, 15
     443                      .dwcfi  cfa_offset, 2
     444 0000ad 5062          T2 = pop()
     445                      .dwcfi  restore_reg, 14
     446                      .dwcfi  cfa_offset, 1
     447              $C$DW$45        .dwtag  DW_TAG_TI_branch
     448                      .dwattr $C$DW$45, DW_AT_low_pc(0x00)
     449                      .dwattr $C$DW$45, DW_AT_TI_return
     450 0000af 4804          return
     451                                                      ; return occurs
     452                      .dwattr $C$DW$33, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
     453                      .dwattr $C$DW$33, DW_AT_TI_end_line(0x127)
     454                      .dwattr $C$DW$33, DW_AT_TI_end_column(0x01)
     455                      .dwendentry
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   10

     456                      .dwendtag $C$DW$33
     457              
     458 0000b1               .sect   ".text"
     459                      .global _xQueueGenericSend
     460              
     461              $C$DW$46        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueGenericSend")
     462                      .dwattr $C$DW$46, DW_AT_low_pc(_xQueueGenericSend)
     463                      .dwattr $C$DW$46, DW_AT_high_pc(0x00)
     464                      .dwattr $C$DW$46, DW_AT_TI_symbol_name("_xQueueGenericSend")
     465                      .dwattr $C$DW$46, DW_AT_external
     466                      .dwattr $C$DW$46, DW_AT_type(*$C$DW$T$10)
     467                      .dwattr $C$DW$46, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
     468                      .dwattr $C$DW$46, DW_AT_TI_begin_line(0x1c4)
     469                      .dwattr $C$DW$46, DW_AT_TI_begin_column(0x16)
     470                      .dwattr $C$DW$46, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
     471                      .dwattr $C$DW$46, DW_AT_decl_line(0x1c4)
     472                      .dwattr $C$DW$46, DW_AT_decl_column(0x16)
     473                      .dwattr $C$DW$46, DW_AT_TI_max_frame_size(0x0c)
     474                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 453,column 1,is_stmt,address _xQueueGenericSend
     475              
     476                      .dwfde $C$DW$CIE, _xQueueGenericSend
     477              $C$DW$47        .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
     478                      .dwattr $C$DW$47, DW_AT_TI_symbol_name("_pxQueue")
     479                      .dwattr $C$DW$47, DW_AT_type(*$C$DW$T$82)
     480                      .dwattr $C$DW$47, DW_AT_location[DW_OP_reg17]
     481              $C$DW$48        .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvItemToQueue")
     482                      .dwattr $C$DW$48, DW_AT_TI_symbol_name("_pvItemToQueue")
     483                      .dwattr $C$DW$48, DW_AT_type(*$C$DW$T$62)
     484                      .dwattr $C$DW$48, DW_AT_location[DW_OP_reg19]
     485              $C$DW$49        .dwtag  DW_TAG_formal_parameter, DW_AT_name("xTicksToWait")
     486                      .dwattr $C$DW$49, DW_AT_TI_symbol_name("_xTicksToWait")
     487                      .dwattr $C$DW$49, DW_AT_type(*$C$DW$T$19)
     488                      .dwattr $C$DW$49, DW_AT_location[DW_OP_reg0]
     489              $C$DW$50        .dwtag  DW_TAG_formal_parameter, DW_AT_name("xCopyPosition")
     490                      .dwattr $C$DW$50, DW_AT_TI_symbol_name("_xCopyPosition")
     491                      .dwattr $C$DW$50, DW_AT_type(*$C$DW$T$10)
     492                      .dwattr $C$DW$50, DW_AT_location[DW_OP_reg12]
     493              ;*******************************************************************************
     494              ;* FUNCTION NAME: xQueueGenericSend                                            *
     495              ;*                                                                             *
     496              ;*   Function Uses Regs : AC0,AC0,T0,T2,T3,AR0,XAR0,AR1,XAR1,AR2,AR5,XAR5,AR7, *
     497              ;*                        XAR7,SP,CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL,INTM   *
     498              ;*   Save On Entry Regs : T2,T3,AR5,AR7                                        *
     499              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
     500              ;*   Total Frame Size   : 12 words                                             *
     501              ;*                        (2 return address/alignment)                         *
     502              ;*                        (6 local values)                                     *
     503              ;*                        (4 register save area)                               *
     504              ;*   Min System Stack   : 3 words                                              *
     505              ;*******************************************************************************
     506              
     507              ;*******************************************************************************
     508              ;*                                                                             *
     509              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
     510              ;*                                                                             *
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   11

     511              ;*******************************************************************************
     512 0000b1       _xQueueGenericSend:
     513              ;** 454 -----------------------    xEntryTimeSet = 0;
     514              ;**     -----------------------    goto g25;
     515                      .dwcfi  cfa_offset, 1
     516                      .dwcfi  save_reg_to_mem, 91, -1
     517 0000b1 5066          push(T2)
     518                      .dwcfi  cfa_offset, 2
     519                      .dwcfi  save_reg_to_mem, 14, -2
     520 0000b3 5076          push(T3)
     521                      .dwcfi  cfa_offset, 3
     522                      .dwcfi  save_reg_to_mem, 15, -3
     523 0000b5 50D5          pshboth(XAR5)
     524                      .dwcfi  cfa_offset, 4
     525                      .dwcfi  save_reg_to_mem, 26, -4
     526 0000b7 50F5          pshboth(XAR7)
     527                      .dwcfi  cfa_offset, 5
     528                      .dwcfi  save_reg_to_mem, 30, -5
     529 0000b9 4EF9          SP = SP + #-7
     530                      .dwcfi  cfa_offset, 12
     531              ;* T3    assigned to _xEntryTimeSet
     532              $C$DW$51        .dwtag  DW_TAG_variable, DW_AT_name("xEntryTimeSet")
     533                      .dwattr $C$DW$51, DW_AT_TI_symbol_name("_xEntryTimeSet")
     534                      .dwattr $C$DW$51, DW_AT_type(*$C$DW$T$10)
     535                      .dwattr $C$DW$51, DW_AT_location[DW_OP_reg15]
     536              ;* T2    assigned to _xCopyPosition
     537              $C$DW$52        .dwtag  DW_TAG_variable, DW_AT_name("xCopyPosition")
     538                      .dwattr $C$DW$52, DW_AT_TI_symbol_name("_xCopyPosition")
     539                      .dwattr $C$DW$52, DW_AT_type(*$C$DW$T$10)
     540                      .dwattr $C$DW$52, DW_AT_location[DW_OP_reg14]
     541              $C$DW$53        .dwtag  DW_TAG_variable, DW_AT_name("xTicksToWait")
     542                      .dwattr $C$DW$53, DW_AT_TI_symbol_name("_xTicksToWait")
     543                      .dwattr $C$DW$53, DW_AT_type(*$C$DW$T$19)
     544                      .dwattr $C$DW$53, DW_AT_location[DW_OP_bregx 0x24 0]
     545              ;* AR7   assigned to _pvItemToQueue
     546              $C$DW$54        .dwtag  DW_TAG_variable, DW_AT_name("pvItemToQueue")
     547                      .dwattr $C$DW$54, DW_AT_TI_symbol_name("_pvItemToQueue")
     548                      .dwattr $C$DW$54, DW_AT_type(*$C$DW$T$62)
     549                      .dwattr $C$DW$54, DW_AT_location[DW_OP_reg31]
     550              ;* AR5   assigned to _pxQueue
     551              $C$DW$55        .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
     552                      .dwattr $C$DW$55, DW_AT_TI_symbol_name("_pxQueue")
     553                      .dwattr $C$DW$55, DW_AT_type(*$C$DW$T$82)
     554                      .dwattr $C$DW$55, DW_AT_location[DW_OP_reg27]
     555              $C$DW$56        .dwtag  DW_TAG_variable, DW_AT_name("xTimeOut")
     556                      .dwattr $C$DW$56, DW_AT_TI_symbol_name("_xTimeOut")
     557                      .dwattr $C$DW$56, DW_AT_type(*$C$DW$T$73)
     558                      .dwattr $C$DW$56, DW_AT_location[DW_OP_bregx 0x24 2]
     559 0000bb EC01          XAR5 = mar(*AR0)
         0000bd DE   
     560 0000be EC21          XAR7 = mar(*AR1)
         0000c0 FE   
     561              
     562 0000c1 EB00          dbl(*SP(#0)) = AC0 ; |453| 
         0000c3 08   
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   12

     563 0000c4 2346  ||      T2 = T0   ; |453| 
     564              
     565                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 454,column 22,is_stmt
     566              
     567 0000c6 0600          goto $C$L14
         0000c8 DC   
     568 0000c9 3D07  ||      T3 = #0
     569              
     570                                                      ; branch occurs
     571 0000cb       $C$L4:    
     572 0000cb       $C$DW$L$_xQueueGenericSend$2$B:
     573              ;**     -----------------------g2:
     574              ;** 493 -----------------------    if ( xTicksToWait ) goto g7;
     575                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 493,column 5,is_stmt
     576 0000cb ED00          AC0 = dbl(*SP(#0)) ; |493| 
         0000cd 08   
     577 0000ce 0410          if (AC0 != #0) goto $C$L6 ; |493| 
         0000d0 20   
     578                                                      ; branchcc occurs ; |493| 
     579 0000d1       $C$DW$L$_xQueueGenericSend$2$E:
     580              ;** 497 -----------------------    if ( !usCriticalNesting ) goto g6;
     581                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 497,column 6,is_stmt
     582 0000d1 A931          AR1 = *(#_usCriticalNesting) ; |497| 
         0000d3 0000 
         0000d5 00!  
     583 0000d6 0409          if (AR1 == #0) goto $C$L5 ; |497| 
         0000d8 13   
     584                                                      ; branchcc occurs ; |497| 
     585              ;** 497 -----------------------    usCriticalNesting = usCriticalNesting-1u;
     586              ;** 497 -----------------------    if ( usCriticalNesting ) goto g6;
     587 0000d9 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |497| 
         0000db FFFF 
         0000dd 0000 
         0000df 00!  
     588 0000e0 20            nop
     589 0000e1 20            nop
     590 0000e2 20            nop
     591 0000e3 A931          AR1 = *(#_usCriticalNesting) ; |497| 
         0000e5 0000 
         0000e7 00!  
     592 0000e8 6119          if (AR1 != #0) goto $C$L5 ; |497| 
     593                                                      ; branchcc occurs ; |497| 
     594              ;** 497 -----------------------    _enable_interrupts();
     595 0000ea 46B2          bit(ST1, #ST1_INTM) = #0 ; |497| 
     596 0000ec       $C$L5:    
     597              ;**     -----------------------g6:
     598              ;** 502 -----------------------    return 0;
     599                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 502,column 6,is_stmt
     600              
     601 0000ec 0601          goto $C$L17 ; |502| 
         0000ee 14   
     602 0000ef 3D04  ||      T0 = #0
     603              
     604                                                      ; branch occurs ; |502| 
     605 0000f1       $C$L6:    
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   13

     606 0000f1       $C$DW$L$_xQueueGenericSend$7$B:
     607              ;**     -----------------------g7:
     608              ;** 504 -----------------------    if ( xEntryTimeSet ) goto g9;
     609                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 504,column 10,is_stmt
     610 0000f1 6497          if (T3 != #0) goto $C$L7 ; |504| 
     611                                                      ; branchcc occurs ; |504| 
     612 0000f3       $C$DW$L$_xQueueGenericSend$7$E:
     613 0000f3       $C$DW$L$_xQueueGenericSend$8$B:
     614              ;** 508 -----------------------    vTaskSetTimeOutState(&xTimeOut);
     615              ;** 509 -----------------------    xEntryTimeSet = 1;
     616                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 508,column 6,is_stmt
     617 0000f3 EC04          XAR0 = mar(*SP(#2))
         0000f5 8E   
     618              $C$DW$57        .dwtag  DW_TAG_TI_branch
     619                      .dwattr $C$DW$57, DW_AT_low_pc(0x00)
     620                      .dwattr $C$DW$57, DW_AT_name("_vTaskSetTimeOutState")
     621                      .dwattr $C$DW$57, DW_AT_TI_call
     622 0000f6 6C00          call #_vTaskSetTimeOutState ; |508| 
         0000f8 0000!
     623                                                      ; call occurs [#_vTaskSetTimeOutState] ; |508| 
     624                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 509,column 6,is_stmt
     625 0000fa 3C17          T3 = #1
     626 0000fc       $C$DW$L$_xQueueGenericSend$8$E:
     627 0000fc       $C$L7:    
     628 0000fc       $C$DW$L$_xQueueGenericSend$9$B:
     629              ;**     -----------------------g9:
     630              ;** 513 -----------------------    if ( !usCriticalNesting ) goto g12;
     631                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 513,column 3,is_stmt
     632 0000fc A931          AR1 = *(#_usCriticalNesting) ; |513| 
         0000fe 0000 
         000100 00!  
     633 000101 0409          if (AR1 == #0) goto $C$L8 ; |513| 
         000103 13   
     634                                                      ; branchcc occurs ; |513| 
     635 000104       $C$DW$L$_xQueueGenericSend$9$E:
     636 000104       $C$DW$L$_xQueueGenericSend$10$B:
     637              ;** 513 -----------------------    usCriticalNesting = usCriticalNesting-1u;
     638              ;** 513 -----------------------    if ( usCriticalNesting ) goto g12;
     639 000104 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |513| 
         000106 FFFF 
         000108 0000 
         00010a 00!  
     640 00010b 20            nop
     641 00010c 20            nop
     642 00010d 20            nop
     643 00010e A931          AR1 = *(#_usCriticalNesting) ; |513| 
         000110 0000 
         000112 00!  
     644 000113 6119          if (AR1 != #0) goto $C$L8 ; |513| 
     645                                                      ; branchcc occurs ; |513| 
     646 000115       $C$DW$L$_xQueueGenericSend$10$E:
     647 000115       $C$DW$L$_xQueueGenericSend$11$B:
     648              ;** 513 -----------------------    _enable_interrupts();
     649 000115 46B2          bit(ST1, #ST1_INTM) = #0 ; |513| 
     650 000117       $C$DW$L$_xQueueGenericSend$11$E:
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   14

     651 000117       $C$L8:    
     652 000117       $C$DW$L$_xQueueGenericSend$12$B:
     653              ;**     -----------------------g12:
     654              ;** 518 -----------------------    vTaskSuspendAll();
     655              ;** 519 -----------------------    _disable_interrupts();
     656              ;** 519 -----------------------    usCriticalNesting = usCriticalNesting+1u;
     657              ;** 519 -----------------------    if ( (*pxQueue).xRxLock != (-1) ) goto g14;
     658                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 518,column 3,is_stmt
     659              $C$DW$58        .dwtag  DW_TAG_TI_branch
     660                      .dwattr $C$DW$58, DW_AT_low_pc(0x00)
     661                      .dwattr $C$DW$58, DW_AT_name("_vTaskSuspendAll")
     662                      .dwattr $C$DW$58, DW_AT_TI_call
     663 000117 6C00          call #_vTaskSuspendAll ; |518| 
         000119 0000!
     664                                                      ; call occurs [#_vTaskSuspendAll] ; |518| 
     665                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 519,column 3,is_stmt
     666 00011b 46B3          bit(ST1, #ST1_INTM) = #1 ; |519| 
     667                                                      ; interrupts disabled ; |519| 
     668 00011d F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |519| 
         00011f 0001 
         000121 0000 
         000123 00!  
     669 000124 F0AD          TC1 = (*AR5(#31) == #-1) ; |519| 
         000126 FFFF 
         000128 001F 
     670 00012a 62F4          if (!TC1) goto $C$L9 ; |519| 
     671                                                      ; branchcc occurs ; |519| 
     672 00012c       $C$DW$L$_xQueueGenericSend$12$E:
     673 00012c       $C$DW$L$_xQueueGenericSend$13$B:
     674              ;** 519 -----------------------    (*pxQueue).xRxLock = 0;
     675 00012c E6AD          *AR5(#31) = #0 ; |519| 
         00012e 0000 
         000130 1F   
     676 000131       $C$DW$L$_xQueueGenericSend$13$E:
     677 000131       $C$L9:    
     678 000131       $C$DW$L$_xQueueGenericSend$14$B:
     679              ;**     -----------------------g14:
     680              ;** 519 -----------------------    if ( (*pxQueue).xTxLock != (-1) ) goto g16;
     681 000131 F0AD          TC1 = (*AR5(#32) == #-1) ; |519| 
         000133 FFFF 
         000135 0020 
     682 000137 62F4          if (!TC1) goto $C$L10 ; |519| 
     683                                                      ; branchcc occurs ; |519| 
     684 000139       $C$DW$L$_xQueueGenericSend$14$E:
     685 000139       $C$DW$L$_xQueueGenericSend$15$B:
     686              ;** 519 -----------------------    (*pxQueue).xTxLock = 0;
     687 000139 E6AD          *AR5(#32) = #0 ; |519| 
         00013b 0000 
         00013d 20   
     688 00013e       $C$DW$L$_xQueueGenericSend$15$E:
     689 00013e       $C$L10:    
     690 00013e       $C$DW$L$_xQueueGenericSend$16$B:
     691              ;**     -----------------------g16:
     692              ;** 519 -----------------------    if ( !usCriticalNesting ) goto g19;
     693 00013e A931          AR1 = *(#_usCriticalNesting) ; |519| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   15

         000140 0000 
         000142 00!  
     694 000143 0409          if (AR1 == #0) goto $C$L11 ; |519| 
         000145 13   
     695                                                      ; branchcc occurs ; |519| 
     696 000146       $C$DW$L$_xQueueGenericSend$16$E:
     697 000146       $C$DW$L$_xQueueGenericSend$17$B:
     698              ;** 519 -----------------------    usCriticalNesting = usCriticalNesting-1u;
     699              ;** 519 -----------------------    if ( usCriticalNesting ) goto g19;
     700 000146 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |519| 
         000148 FFFF 
         00014a 0000 
         00014c 00!  
     701 00014d 20            nop
     702 00014e 20            nop
     703 00014f 20            nop
     704 000150 A931          AR1 = *(#_usCriticalNesting) ; |519| 
         000152 0000 
         000154 00!  
     705 000155 6119          if (AR1 != #0) goto $C$L11 ; |519| 
     706                                                      ; branchcc occurs ; |519| 
     707 000157       $C$DW$L$_xQueueGenericSend$17$E:
     708 000157       $C$DW$L$_xQueueGenericSend$18$B:
     709              ;** 519 -----------------------    _enable_interrupts();
     710 000157 46B2          bit(ST1, #ST1_INTM) = #0 ; |519| 
     711 000159       $C$DW$L$_xQueueGenericSend$18$E:
     712 000159       $C$L11:    
     713 000159       $C$DW$L$_xQueueGenericSend$19$B:
     714              ;**     -----------------------g19:
     715              ;** 522 -----------------------    if ( !xTaskCheckForTimeOut(&xTimeOut, &xTicksToWait) ) goto g21;
     716                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 522,column 3,is_stmt
     717 000159 EC04          XAR0 = mar(*SP(#2))
         00015b 8E   
     718 00015c EC00          XAR1 = mar(*SP(#0))
         00015e 9E   
     719              $C$DW$59        .dwtag  DW_TAG_TI_branch
     720                      .dwattr $C$DW$59, DW_AT_low_pc(0x00)
     721                      .dwattr $C$DW$59, DW_AT_name("_xTaskCheckForTimeOut")
     722                      .dwattr $C$DW$59, DW_AT_TI_call
     723 00015f 6C00          call #_xTaskCheckForTimeOut ; |522| 
         000161 0000!
     724                                                      ; call occurs [#_xTaskCheckForTimeOut] ; |522| 
     725 000163 6784          if (T0 == #0) goto $C$L12 ; |522| 
     726                                                      ; branchcc occurs ; |522| 
     727 000165       $C$DW$L$_xQueueGenericSend$19$E:
     728              ;** 556 -----------------------    prvUnlockQueue(pxQueue);
     729              ;** 557 -----------------------    xTaskResumeAll();
     730              ;** 562 -----------------------    return 0;
     731                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 556,column 4,is_stmt
     732 000165 ECA1          XAR0 = mar(*AR5)
         000167 8E   
     733              $C$DW$60        .dwtag  DW_TAG_TI_branch
     734                      .dwattr $C$DW$60, DW_AT_low_pc(0x00)
     735                      .dwattr $C$DW$60, DW_AT_name("_prvUnlockQueue")
     736                      .dwattr $C$DW$60, DW_AT_TI_call
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   16

     737 000168 0803          call #_prvUnlockQueue ; |556| 
         00016a E9   
     738                                                      ; call occurs [#_prvUnlockQueue] ; |556| 
     739                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 557,column 4,is_stmt
     740              $C$DW$61        .dwtag  DW_TAG_TI_branch
     741                      .dwattr $C$DW$61, DW_AT_low_pc(0x00)
     742                      .dwattr $C$DW$61, DW_AT_name("_xTaskResumeAll")
     743                      .dwattr $C$DW$61, DW_AT_TI_call
     744 00016b 6C00          call #_xTaskResumeAll ; |557| 
         00016d 0000!
     745                                                      ; call occurs [#_xTaskResumeAll] ; |557| 
     746                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 562,column 4,is_stmt
     747              
     748 00016f 0600          goto $C$L17 ; |562| 
         000171 91   
     749 000172 3D04  ||      T0 = #0
     750              
     751                                                      ; branch occurs ; |562| 
     752 000174       $C$L12:    
     753 000174       $C$DW$L$_xQueueGenericSend$21$B:
     754              ;**     -----------------------g21:
     755              ;** 524 -----------------------    if ( !prvIsQueueFull(pxQueue) ) goto g24;
     756                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 524,column 4,is_stmt
     757 000174 ECA1          XAR0 = mar(*AR5)
         000176 8E   
     758              $C$DW$62        .dwtag  DW_TAG_TI_branch
     759                      .dwattr $C$DW$62, DW_AT_low_pc(0x00)
     760                      .dwattr $C$DW$62, DW_AT_name("_prvIsQueueFull")
     761                      .dwattr $C$DW$62, DW_AT_TI_call
     762 000177 0804          call #_prvIsQueueFull ; |524| 
         000179 CA   
     763                                                      ; call occurs [#_prvIsQueueFull] ; |524| 
     764 00017a 0404          if (T0 == #0) goto $C$L13 ; |524| 
         00017c 20   
     765                                                      ; branchcc occurs ; |524| 
     766 00017d       $C$DW$L$_xQueueGenericSend$21$E:
     767 00017d       $C$DW$L$_xQueueGenericSend$22$B:
     768              ;** 527 -----------------------    vTaskPlaceOnEventList((struct _xLIST *)pxQueue+8L, xTicksToWait);
     769              ;** 534 -----------------------    prvUnlockQueue(pxQueue);
     770              ;** 541 -----------------------    if ( xTaskResumeAll() ) goto g25;
     771                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 527,column 5,is_stmt
     772 00017d ECA1          XAR0 = mar(*AR5)
         00017f 8E   
     773              
     774                      mar(AR0 + #8) ; |527| 
     775 000180 8E00  ||      AC0 = dbl(*SP(#0)) ; |527| 
         000182 8D1C 
         000184 0808 
     776              
     777              $C$DW$63        .dwtag  DW_TAG_TI_branch
     778                      .dwattr $C$DW$63, DW_AT_low_pc(0x00)
     779                      .dwattr $C$DW$63, DW_AT_name("_vTaskPlaceOnEventList")
     780                      .dwattr $C$DW$63, DW_AT_TI_call
     781 000186 6C00          call #_vTaskPlaceOnEventList ; |527| 
         000188 0000!
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   17

     782                                                      ; call occurs [#_vTaskPlaceOnEventList] ; |527| 
     783                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 534,column 5,is_stmt
     784 00018a ECA1          XAR0 = mar(*AR5)
         00018c 8E   
     785              $C$DW$64        .dwtag  DW_TAG_TI_branch
     786                      .dwattr $C$DW$64, DW_AT_low_pc(0x00)
     787                      .dwattr $C$DW$64, DW_AT_name("_prvUnlockQueue")
     788                      .dwattr $C$DW$64, DW_AT_TI_call
     789 00018d 0803          call #_prvUnlockQueue ; |534| 
         00018f C4   
     790                                                      ; call occurs [#_prvUnlockQueue] ; |534| 
     791                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 541,column 5,is_stmt
     792              $C$DW$65        .dwtag  DW_TAG_TI_branch
     793                      .dwattr $C$DW$65, DW_AT_low_pc(0x00)
     794                      .dwattr $C$DW$65, DW_AT_name("_xTaskResumeAll")
     795                      .dwattr $C$DW$65, DW_AT_TI_call
     796 000190 6C00          call #_xTaskResumeAll ; |541| 
         000192 0000!
     797                                                      ; call occurs [#_xTaskResumeAll] ; |541| 
     798 000194 0414          if (T0 != #0) goto $C$L14 ; |541| 
         000196 10   
     799                                                      ; branchcc occurs ; |541| 
     800 000197       $C$DW$L$_xQueueGenericSend$22$E:
     801 000197       $C$DW$L$_xQueueGenericSend$23$B:
     802              ;** 543 -----------------------    vPortYield();
     803              ;** 543 -----------------------    goto g25;
     804                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 543,column 6,is_stmt
     805              $C$DW$66        .dwtag  DW_TAG_TI_branch
     806                      .dwattr $C$DW$66, DW_AT_low_pc(0x00)
     807                      .dwattr $C$DW$66, DW_AT_name("_vPortYield")
     808                      .dwattr $C$DW$66, DW_AT_TI_call
     809 000197 6C00          call #_vPortYield ; |543| 
         000199 0000!
     810                                                      ; call occurs [#_vPortYield] ; |543| 
     811 00019b 4A0A          goto $C$L14 ; |543| 
     812                                                      ; branch occurs ; |543| 
     813 00019d       $C$DW$L$_xQueueGenericSend$23$E:
     814 00019d       $C$L13:    
     815 00019d       $C$DW$L$_xQueueGenericSend$24$B:
     816              ;**     -----------------------g24:
     817              ;** 549 -----------------------    prvUnlockQueue(pxQueue);
     818              ;** 550 -----------------------    xTaskResumeAll();
     819                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 549,column 5,is_stmt
     820 00019d ECA1          XAR0 = mar(*AR5)
         00019f 8E   
     821              $C$DW$67        .dwtag  DW_TAG_TI_branch
     822                      .dwattr $C$DW$67, DW_AT_low_pc(0x00)
     823                      .dwattr $C$DW$67, DW_AT_name("_prvUnlockQueue")
     824                      .dwattr $C$DW$67, DW_AT_TI_call
     825 0001a0 0803          call #_prvUnlockQueue ; |549| 
         0001a2 B1   
     826                                                      ; call occurs [#_prvUnlockQueue] ; |549| 
     827                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 550,column 5,is_stmt
     828              $C$DW$68        .dwtag  DW_TAG_TI_branch
     829                      .dwattr $C$DW$68, DW_AT_low_pc(0x00)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   18

     830                      .dwattr $C$DW$68, DW_AT_name("_xTaskResumeAll")
     831                      .dwattr $C$DW$68, DW_AT_TI_call
     832 0001a3 6C00          call #_xTaskResumeAll ; |550| 
         0001a5 0000!
     833                                                      ; call occurs [#_xTaskResumeAll] ; |550| 
     834 0001a7       $C$DW$L$_xQueueGenericSend$24$E:
     835 0001a7       $C$L14:    
     836 0001a7       $C$DW$L$_xQueueGenericSend$25$B:
     837              ;**     -----------------------g25:
     838              ;** 462 -----------------------    _disable_interrupts();
     839              ;** 462 -----------------------    usCriticalNesting = usCriticalNesting+1u;
     840              ;** 466 -----------------------    if ( (*pxQueue).uxMessagesWaiting >= (*pxQueue).uxLength ) goto g2;
     841                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 462,column 3,is_stmt
     842 0001a7 46B3          bit(ST1, #ST1_INTM) = #1 ; |462| 
     843                                                      ; interrupts disabled ; |462| 
     844 0001a9 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |462| 
         0001ab 0001 
         0001ad 0000 
         0001af 00!  
     845 0001b0 20            nop
     846 0001b1 20            nop
     847                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 466,column 4,is_stmt
     848 0001b2 A9AD          AR1 = *AR5(#29) ; |466| 
         0001b4 001D 
     849 0001b6 AAAD          AR2 = *AR5(#28) ; |466| 
         0001b8 001C 
     850 0001ba 12A8          TC1 = uns(AR2 >= AR1) ; |466| 
         0001bc 94   
     851 0001bd 6D64          if (TC1) goto $C$L4 ; |466| 
         0001bf FF0A 
     852                                                      ; branchcc occurs ; |466| 
     853 0001c1       $C$DW$L$_xQueueGenericSend$25$E:
     854              ;** 469 -----------------------    prvCopyDataToQueue(pxQueue, pvItemToQueue, xCopyPosition);
     855              ;** 473 -----------------------    if ( !(*pxQueue).xTasksWaitingToReceive.uxNumberOfItems ) goto g29;
     856                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 469,column 5,is_stmt
     857 0001c1 ECE1          XAR1 = mar(*AR7)
         0001c3 9E   
     858 0001c4 ECA1          XAR0 = mar(*AR5)
         0001c6 8E   
     859              $C$DW$69        .dwtag  DW_TAG_TI_branch
     860                      .dwattr $C$DW$69, DW_AT_low_pc(0x00)
     861                      .dwattr $C$DW$69, DW_AT_name("_prvCopyDataToQueue")
     862                      .dwattr $C$DW$69, DW_AT_TI_call
     863              
     864 0001c7 0802          call #_prvCopyDataToQueue ; |469| 
         0001c9 BA   
     865 0001ca 2364  ||      T0 = T2   ; |469| 
     866              
     867                                                      ; call occurs [#_prvCopyDataToQueue] ; |469| 
     868                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 473,column 5,is_stmt
     869 0001cc A9AD          AR1 = *AR5(#18) ; |473| 
         0001ce 0012 
     870 0001d0 0409          if (AR1 == #0) goto $C$L15 ; |473| 
         0001d2 15   
     871                                                      ; branchcc occurs ; |473| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   19

     872              ;** 475 -----------------------    if ( xTaskRemoveFromEventList((struct _xLIST *)pxQueue+18L) != 1 ) goto g2
     873                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 475,column 6,is_stmt
     874 0001d3 ECA1          XAR0 = mar(*AR5)
         0001d5 8E   
     875 0001d6 1412          mar(AR0 + #18) ; |475| 
         0001d8 84   
     876              $C$DW$70        .dwtag  DW_TAG_TI_branch
     877                      .dwattr $C$DW$70, DW_AT_low_pc(0x00)
     878                      .dwattr $C$DW$70, DW_AT_name("_xTaskRemoveFromEventList")
     879                      .dwattr $C$DW$70, DW_AT_TI_call
     880 0001d9 6C00          call #_xTaskRemoveFromEventList ; |475| 
         0001db 0000!
     881                                                      ; call occurs [#_xTaskRemoveFromEventList] ; |475| 
     882 0001dd 3C19          AR1 = #1
     883 0001df 124C          TC1 = (T0 != AR1) ; |475| 
         0001e1 90   
     884 0001e2 6264          if (TC1) goto $C$L15 ; |475| 
     885                                                      ; branchcc occurs ; |475| 
     886              ;** 481 -----------------------    vPortYield();
     887                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 481,column 7,is_stmt
     888              $C$DW$71        .dwtag  DW_TAG_TI_branch
     889                      .dwattr $C$DW$71, DW_AT_low_pc(0x00)
     890                      .dwattr $C$DW$71, DW_AT_name("_vPortYield")
     891                      .dwattr $C$DW$71, DW_AT_TI_call
     892 0001e4 6C00          call #_vPortYield ; |481| 
         0001e6 0000!
     893                                                      ; call occurs [#_vPortYield] ; |481| 
     894 0001e8       $C$L15:    
     895              ;**     -----------------------g29:
     896              ;** 485 -----------------------    if ( !usCriticalNesting ) goto g32;
     897                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 485,column 5,is_stmt
     898 0001e8 A931          AR1 = *(#_usCriticalNesting) ; |485| 
         0001ea 0000 
         0001ec 00!  
     899 0001ed 0409          if (AR1 == #0) goto $C$L16 ; |485| 
         0001ef 13   
     900                                                      ; branchcc occurs ; |485| 
     901              ;** 485 -----------------------    usCriticalNesting = usCriticalNesting-1u;
     902              ;** 485 -----------------------    if ( usCriticalNesting ) goto g32;
     903 0001f0 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |485| 
         0001f2 FFFF 
         0001f4 0000 
         0001f6 00!  
     904 0001f7 20            nop
     905 0001f8 20            nop
     906 0001f9 20            nop
     907 0001fa A931          AR1 = *(#_usCriticalNesting) ; |485| 
         0001fc 0000 
         0001fe 00!  
     908 0001ff 6119          if (AR1 != #0) goto $C$L16 ; |485| 
     909                                                      ; branchcc occurs ; |485| 
     910              ;** 485 -----------------------    _enable_interrupts();
     911 000201 46B2          bit(ST1, #ST1_INTM) = #0 ; |485| 
     912 000203       $C$L16:    
     913              ;**     -----------------------g32:
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   20

     914              ;** 489 -----------------------    return 1;
     915                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 489,column 5,is_stmt
     916 000203 3C14          T0 = #1
     917 000205       $C$L17:    
     918                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 565,column 1,is_stmt
     919 000205 4E07          SP = SP + #7
     920                      .dwcfi  cfa_offset, 5
     921 000207 50F4          XAR7 = popboth()
     922                      .dwcfi  restore_reg, 30
     923                      .dwcfi  cfa_offset, 4
     924 000209 50D4          XAR5 = popboth()
     925                      .dwcfi  restore_reg, 26
     926                      .dwcfi  cfa_offset, 3
     927 00020b 5072          T3 = pop()
     928                      .dwcfi  restore_reg, 15
     929                      .dwcfi  cfa_offset, 2
     930 00020d 5062          T2 = pop()
     931                      .dwcfi  restore_reg, 14
     932                      .dwcfi  cfa_offset, 1
     933              $C$DW$72        .dwtag  DW_TAG_TI_branch
     934                      .dwattr $C$DW$72, DW_AT_low_pc(0x00)
     935                      .dwattr $C$DW$72, DW_AT_TI_return
     936 00020f 4804          return
     937                                                      ; return occurs
     938              
     939              $C$DW$73        .dwtag  DW_TAG_TI_loop
     940                      .dwattr $C$DW$73, DW_AT_name("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\Debug\queue.asm:$C$L14:1
     941                      .dwattr $C$DW$73, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
     942                      .dwattr $C$DW$73, DW_AT_TI_begin_line(0x1ce)
     943                      .dwattr $C$DW$73, DW_AT_TI_end_line(0x226)
     944              $C$DW$74        .dwtag  DW_TAG_TI_loop_range
     945                      .dwattr $C$DW$74, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$25$B)
     946                      .dwattr $C$DW$74, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$25$E)
     947              $C$DW$75        .dwtag  DW_TAG_TI_loop_range
     948                      .dwattr $C$DW$75, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$2$B)
     949                      .dwattr $C$DW$75, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$2$E)
     950              $C$DW$76        .dwtag  DW_TAG_TI_loop_range
     951                      .dwattr $C$DW$76, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$7$B)
     952                      .dwattr $C$DW$76, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$7$E)
     953              $C$DW$77        .dwtag  DW_TAG_TI_loop_range
     954                      .dwattr $C$DW$77, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$8$B)
     955                      .dwattr $C$DW$77, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$8$E)
     956              $C$DW$78        .dwtag  DW_TAG_TI_loop_range
     957                      .dwattr $C$DW$78, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$9$B)
     958                      .dwattr $C$DW$78, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$9$E)
     959              $C$DW$79        .dwtag  DW_TAG_TI_loop_range
     960                      .dwattr $C$DW$79, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$10$B)
     961                      .dwattr $C$DW$79, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$10$E)
     962              $C$DW$80        .dwtag  DW_TAG_TI_loop_range
     963                      .dwattr $C$DW$80, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$11$B)
     964                      .dwattr $C$DW$80, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$11$E)
     965              $C$DW$81        .dwtag  DW_TAG_TI_loop_range
     966                      .dwattr $C$DW$81, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$12$B)
     967                      .dwattr $C$DW$81, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$12$E)
     968              $C$DW$82        .dwtag  DW_TAG_TI_loop_range
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   21

     969                      .dwattr $C$DW$82, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$13$B)
     970                      .dwattr $C$DW$82, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$13$E)
     971              $C$DW$83        .dwtag  DW_TAG_TI_loop_range
     972                      .dwattr $C$DW$83, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$14$B)
     973                      .dwattr $C$DW$83, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$14$E)
     974              $C$DW$84        .dwtag  DW_TAG_TI_loop_range
     975                      .dwattr $C$DW$84, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$15$B)
     976                      .dwattr $C$DW$84, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$15$E)
     977              $C$DW$85        .dwtag  DW_TAG_TI_loop_range
     978                      .dwattr $C$DW$85, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$16$B)
     979                      .dwattr $C$DW$85, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$16$E)
     980              $C$DW$86        .dwtag  DW_TAG_TI_loop_range
     981                      .dwattr $C$DW$86, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$17$B)
     982                      .dwattr $C$DW$86, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$17$E)
     983              $C$DW$87        .dwtag  DW_TAG_TI_loop_range
     984                      .dwattr $C$DW$87, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$18$B)
     985                      .dwattr $C$DW$87, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$18$E)
     986              $C$DW$88        .dwtag  DW_TAG_TI_loop_range
     987                      .dwattr $C$DW$88, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$19$B)
     988                      .dwattr $C$DW$88, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$19$E)
     989              $C$DW$89        .dwtag  DW_TAG_TI_loop_range
     990                      .dwattr $C$DW$89, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$21$B)
     991                      .dwattr $C$DW$89, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$21$E)
     992              $C$DW$90        .dwtag  DW_TAG_TI_loop_range
     993                      .dwattr $C$DW$90, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$24$B)
     994                      .dwattr $C$DW$90, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$24$E)
     995              $C$DW$91        .dwtag  DW_TAG_TI_loop_range
     996                      .dwattr $C$DW$91, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$23$B)
     997                      .dwattr $C$DW$91, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$23$E)
     998              $C$DW$92        .dwtag  DW_TAG_TI_loop_range
     999                      .dwattr $C$DW$92, DW_AT_low_pc($C$DW$L$_xQueueGenericSend$22$B)
    1000                      .dwattr $C$DW$92, DW_AT_high_pc($C$DW$L$_xQueueGenericSend$22$E)
    1001                      .dwendtag $C$DW$73
    1002              
    1003                      .dwattr $C$DW$46, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    1004                      .dwattr $C$DW$46, DW_AT_TI_end_line(0x235)
    1005                      .dwattr $C$DW$46, DW_AT_TI_end_column(0x01)
    1006                      .dwendentry
    1007                      .dwendtag $C$DW$46
    1008              
    1009 000211               .sect   ".text"
    1010                      .global _xQueueGenericSendFromISR
    1011              
    1012              $C$DW$93        .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueGenericSendFromISR")
    1013                      .dwattr $C$DW$93, DW_AT_low_pc(_xQueueGenericSendFromISR)
    1014                      .dwattr $C$DW$93, DW_AT_high_pc(0x00)
    1015                      .dwattr $C$DW$93, DW_AT_TI_symbol_name("_xQueueGenericSendFromISR")
    1016                      .dwattr $C$DW$93, DW_AT_external
    1017                      .dwattr $C$DW$93, DW_AT_type(*$C$DW$T$10)
    1018                      .dwattr $C$DW$93, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    1019                      .dwattr $C$DW$93, DW_AT_TI_begin_line(0x300)
    1020                      .dwattr $C$DW$93, DW_AT_TI_begin_column(0x16)
    1021                      .dwattr $C$DW$93, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    1022                      .dwattr $C$DW$93, DW_AT_decl_line(0x300)
    1023                      .dwattr $C$DW$93, DW_AT_decl_column(0x16)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   22

    1024                      .dwattr $C$DW$93, DW_AT_TI_max_frame_size(0x04)
    1025                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 769,column 1,is_stmt,address _xQueueGenericSendFromISR
    1026              
    1027                      .dwfde $C$DW$CIE, _xQueueGenericSendFromISR
    1028              $C$DW$94        .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    1029                      .dwattr $C$DW$94, DW_AT_TI_symbol_name("_pxQueue")
    1030                      .dwattr $C$DW$94, DW_AT_type(*$C$DW$T$82)
    1031                      .dwattr $C$DW$94, DW_AT_location[DW_OP_reg17]
    1032              $C$DW$95        .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvItemToQueue")
    1033                      .dwattr $C$DW$95, DW_AT_TI_symbol_name("_pvItemToQueue")
    1034                      .dwattr $C$DW$95, DW_AT_type(*$C$DW$T$62)
    1035                      .dwattr $C$DW$95, DW_AT_location[DW_OP_reg19]
    1036              $C$DW$96        .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxHigherPriorityTaskWoken")
    1037                      .dwattr $C$DW$96, DW_AT_TI_symbol_name("_pxHigherPriorityTaskWoken")
    1038                      .dwattr $C$DW$96, DW_AT_type(*$C$DW$T$90)
    1039                      .dwattr $C$DW$96, DW_AT_location[DW_OP_reg21]
    1040              $C$DW$97        .dwtag  DW_TAG_formal_parameter, DW_AT_name("xCopyPosition")
    1041                      .dwattr $C$DW$97, DW_AT_TI_symbol_name("_xCopyPosition")
    1042                      .dwattr $C$DW$97, DW_AT_type(*$C$DW$T$10)
    1043                      .dwattr $C$DW$97, DW_AT_location[DW_OP_reg12]
    1044              ;*******************************************************************************
    1045              ;* FUNCTION NAME: xQueueGenericSendFromISR                                     *
    1046              ;*                                                                             *
    1047              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,AR2,XAR2,AR3,AR5,XAR5,AR7,XAR7,SP,   *
    1048              ;*                        CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL                *
    1049              ;*   Save On Entry Regs : AR5,AR7                                              *
    1050              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    1051              ;*   Total Frame Size   : 4 words                                              *
    1052              ;*                        (2 return address/alignment)                         *
    1053              ;*                        (2 register save area)                               *
    1054              ;*   Min System Stack   : 3 words                                              *
    1055              ;*******************************************************************************
    1056              
    1057              ;*******************************************************************************
    1058              ;*                                                                             *
    1059              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    1060              ;*                                                                             *
    1061              ;*******************************************************************************
    1062 000211       _xQueueGenericSendFromISR:
    1063              ;** 780 -----------------------    if ( (*pxQueue).uxMessagesWaiting >= (*pxQueue).uxLength ) goto g8;
    1064                      .dwcfi  cfa_offset, 1
    1065                      .dwcfi  save_reg_to_mem, 91, -1
    1066 000211 50D5          pshboth(XAR5)
    1067                      .dwcfi  cfa_offset, 2
    1068                      .dwcfi  save_reg_to_mem, 26, -2
    1069 000213 50F5          pshboth(XAR7)
    1070                      .dwcfi  cfa_offset, 3
    1071                      .dwcfi  save_reg_to_mem, 30, -3
    1072 000215 4EFF          SP = SP + #-1
    1073                      .dwcfi  cfa_offset, 4
    1074              ;* T0    assigned to _xReturn
    1075              $C$DW$98        .dwtag  DW_TAG_variable, DW_AT_name("xReturn")
    1076                      .dwattr $C$DW$98, DW_AT_TI_symbol_name("_xReturn")
    1077                      .dwattr $C$DW$98, DW_AT_type(*$C$DW$T$10)
    1078                      .dwattr $C$DW$98, DW_AT_location[DW_OP_reg12]
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   23

    1079              ;* AR7   assigned to _pxHigherPriorityTaskWoken
    1080              $C$DW$99        .dwtag  DW_TAG_variable, DW_AT_name("pxHigherPriorityTaskWoken")
    1081                      .dwattr $C$DW$99, DW_AT_TI_symbol_name("_pxHigherPriorityTaskWoken")
    1082                      .dwattr $C$DW$99, DW_AT_type(*$C$DW$T$90)
    1083                      .dwattr $C$DW$99, DW_AT_location[DW_OP_reg31]
    1084              ;* AR5   assigned to _pxQueue
    1085              $C$DW$100       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    1086                      .dwattr $C$DW$100, DW_AT_TI_symbol_name("_pxQueue")
    1087                      .dwattr $C$DW$100, DW_AT_type(*$C$DW$T$82)
    1088                      .dwattr $C$DW$100, DW_AT_location[DW_OP_reg27]
    1089 000217 EC01          XAR5 = mar(*AR0)
         000219 DE   
    1090 00021a EC41          XAR7 = mar(*AR2)
         00021c FE   
    1091                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 780,column 3,is_stmt
    1092 00021d ABAD          AR3 = *AR5(#28) ; |780| 
         00021f 001C 
    1093 000221 AAAD          AR2 = *AR5(#29) ; |780| 
         000223 001D 
    1094 000225 12B8          TC1 = uns(AR3 >= AR2) ; |780| 
         000227 A4   
    1095 000228 0464          if (TC1) goto $C$L20 ; |780| 
         00022a 2E   
    1096                                                      ; branchcc occurs ; |780| 
    1097              ;** 784 -----------------------    prvCopyDataToQueue(pxQueue, pvItemToQueue, xCopyPosition);
    1098              ;** 788 -----------------------    if ( (*pxQueue).xTxLock != (-1) ) goto g6;
    1099                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 784,column 4,is_stmt
    1100              $C$DW$101       .dwtag  DW_TAG_TI_branch
    1101                      .dwattr $C$DW$101, DW_AT_low_pc(0x00)
    1102                      .dwattr $C$DW$101, DW_AT_name("_prvCopyDataToQueue")
    1103                      .dwattr $C$DW$101, DW_AT_TI_call
    1104 00022b 0802          call #_prvCopyDataToQueue ; |784| 
         00022d 58   
    1105                                                      ; call occurs [#_prvCopyDataToQueue] ; |784| 
    1106                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 788,column 4,is_stmt
    1107 00022e F0AD          TC1 = (*AR5(#32) == #-1) ; |788| 
         000230 FFFF 
         000232 0020 
    1108 000234 0474          if (!TC1) goto $C$L18 ; |788| 
         000236 18   
    1109                                                      ; branchcc occurs ; |788| 
    1110              ;** 790 -----------------------    if ( !(*pxQueue).xTasksWaitingToReceive.uxNumberOfItems ) goto g7;
    1111                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 790,column 5,is_stmt
    1112 000237 A9AD          AR1 = *AR5(#18) ; |790| 
         000239 0012 
    1113 00023b 0409          if (AR1 == #0) goto $C$L19 ; |790| 
         00023d 17   
    1114                                                      ; branchcc occurs ; |790| 
    1115              ;** 792 -----------------------    if ( !xTaskRemoveFromEventList((struct _xLIST *)pxQueue+18L) ) goto g7;
    1116                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 792,column 6,is_stmt
    1117 00023e ECA1          XAR0 = mar(*AR5)
         000240 8E   
    1118 000241 1412          mar(AR0 + #18) ; |792| 
         000243 84   
    1119              $C$DW$102       .dwtag  DW_TAG_TI_branch
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   24

    1120                      .dwattr $C$DW$102, DW_AT_low_pc(0x00)
    1121                      .dwattr $C$DW$102, DW_AT_name("_xTaskRemoveFromEventList")
    1122                      .dwattr $C$DW$102, DW_AT_TI_call
    1123 000244 6C00          call #_xTaskRemoveFromEventList ; |792| 
         000246 0000!
    1124                                                      ; call occurs [#_xTaskRemoveFromEventList] ; |792| 
    1125 000248 6584          if (T0 == #0) goto $C$L19 ; |792| 
    1126                                                      ; branchcc occurs ; |792| 
    1127              ;** 796 -----------------------    *pxHigherPriorityTaskWoken = 1;
    1128              ;** 796 -----------------------    goto g7;
    1129                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 796,column 7,is_stmt
    1130 00024a E6E1          *AR7 = #1 ; |796| 
         00024c 01   
    1131 00024d 4A06          goto $C$L19 ; |796| 
    1132                                                      ; branch occurs ; |796| 
    1133 00024f       $C$L18:    
    1134              ;**     -----------------------g6:
    1135              ;** 804 -----------------------    (*pxQueue).xTxLock = (*pxQueue).xTxLock+1;
    1136                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 804,column 5,is_stmt
    1137 00024f F7AD          *AR5(#32) = *AR5(#32) + #1 ; |804| 
         000251 0001 
         000253 0020 
    1138 000255       $C$L19:    
    1139              ;**     -----------------------g7:
    1140              ;** 807 -----------------------    xReturn = 1;
    1141              ;** 808 -----------------------    goto g9;
    1142                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 807,column 4,is_stmt
    1143 000255 3C14          T0 = #1
    1144                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 808,column 3,is_stmt
    1145 000257 4A02          goto $C$L21 ; |808| 
    1146                                                      ; branch occurs ; |808| 
    1147 000259       $C$L20:    
    1148              ;**     -----------------------g8:
    1149              ;** 812 -----------------------    xReturn = 0;
    1150                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 812,column 4,is_stmt
    1151 000259 3C04          T0 = #0
    1152 00025b       $C$L21:    
    1153              ;**     -----------------------g9:
    1154              ;** 817 -----------------------    return xReturn;
    1155                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 817,column 2,is_stmt
    1156                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 818,column 1,is_stmt
    1157 00025b 4E01          SP = SP + #1
    1158                      .dwcfi  cfa_offset, 3
    1159 00025d 50F4          XAR7 = popboth()
    1160                      .dwcfi  restore_reg, 30
    1161                      .dwcfi  cfa_offset, 2
    1162 00025f 50D4          XAR5 = popboth()
    1163                      .dwcfi  restore_reg, 26
    1164                      .dwcfi  cfa_offset, 1
    1165              $C$DW$103       .dwtag  DW_TAG_TI_branch
    1166                      .dwattr $C$DW$103, DW_AT_low_pc(0x00)
    1167                      .dwattr $C$DW$103, DW_AT_TI_return
    1168 000261 4804          return
    1169                                                      ; return occurs
    1170                      .dwattr $C$DW$93, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   25

    1171                      .dwattr $C$DW$93, DW_AT_TI_end_line(0x332)
    1172                      .dwattr $C$DW$93, DW_AT_TI_end_column(0x01)
    1173                      .dwendentry
    1174                      .dwendtag $C$DW$93
    1175              
    1176 000263               .sect   ".text"
    1177                      .global _xQueueGenericReceive
    1178              
    1179              $C$DW$104       .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueGenericReceive")
    1180                      .dwattr $C$DW$104, DW_AT_low_pc(_xQueueGenericReceive)
    1181                      .dwattr $C$DW$104, DW_AT_high_pc(0x00)
    1182                      .dwattr $C$DW$104, DW_AT_TI_symbol_name("_xQueueGenericReceive")
    1183                      .dwattr $C$DW$104, DW_AT_external
    1184                      .dwattr $C$DW$104, DW_AT_type(*$C$DW$T$10)
    1185                      .dwattr $C$DW$104, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    1186                      .dwattr $C$DW$104, DW_AT_TI_begin_line(0x335)
    1187                      .dwattr $C$DW$104, DW_AT_TI_begin_column(0x16)
    1188                      .dwattr $C$DW$104, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    1189                      .dwattr $C$DW$104, DW_AT_decl_line(0x335)
    1190                      .dwattr $C$DW$104, DW_AT_decl_column(0x16)
    1191                      .dwattr $C$DW$104, DW_AT_TI_max_frame_size(0x0c)
    1192                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 822,column 1,is_stmt,address _xQueueGenericReceive
    1193              
    1194                      .dwfde $C$DW$CIE, _xQueueGenericReceive
    1195              $C$DW$105       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    1196                      .dwattr $C$DW$105, DW_AT_TI_symbol_name("_pxQueue")
    1197                      .dwattr $C$DW$105, DW_AT_type(*$C$DW$T$82)
    1198                      .dwattr $C$DW$105, DW_AT_location[DW_OP_reg17]
    1199              $C$DW$106       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvBuffer")
    1200                      .dwattr $C$DW$106, DW_AT_TI_symbol_name("_pvBuffer")
    1201                      .dwattr $C$DW$106, DW_AT_type(*$C$DW$T$60)
    1202                      .dwattr $C$DW$106, DW_AT_location[DW_OP_reg19]
    1203              $C$DW$107       .dwtag  DW_TAG_formal_parameter, DW_AT_name("xTicksToWait")
    1204                      .dwattr $C$DW$107, DW_AT_TI_symbol_name("_xTicksToWait")
    1205                      .dwattr $C$DW$107, DW_AT_type(*$C$DW$T$19)
    1206                      .dwattr $C$DW$107, DW_AT_location[DW_OP_reg0]
    1207              $C$DW$108       .dwtag  DW_TAG_formal_parameter, DW_AT_name("xJustPeeking")
    1208                      .dwattr $C$DW$108, DW_AT_TI_symbol_name("_xJustPeeking")
    1209                      .dwattr $C$DW$108, DW_AT_type(*$C$DW$T$10)
    1210                      .dwattr $C$DW$108, DW_AT_location[DW_OP_reg12]
    1211              ;*******************************************************************************
    1212              ;* FUNCTION NAME: xQueueGenericReceive                                         *
    1213              ;*                                                                             *
    1214              ;*   Function Uses Regs : AC0,AC0,T0,T2,T3,AR0,XAR0,AR1,XAR1,AR5,XAR5,AR6,XAR6,*
    1215              ;*                        AR7,XAR7,SP,CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL,   *
    1216              ;*                        INTM                                                 *
    1217              ;*   Save On Entry Regs : T2,T3,AR5,AR6,AR7                                    *
    1218              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    1219              ;*   Total Frame Size   : 12 words                                             *
    1220              ;*                        (1 return address/alignment)                         *
    1221              ;*                        (6 local values)                                     *
    1222              ;*                        (5 register save area)                               *
    1223              ;*   Min System Stack   : 4 words                                              *
    1224              ;*******************************************************************************
    1225              
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   26

    1226              ;*******************************************************************************
    1227              ;*                                                                             *
    1228              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    1229              ;*                                                                             *
    1230              ;*******************************************************************************
    1231 000263       _xQueueGenericReceive:
    1232              ;** 823 -----------------------    xEntryTimeSet = 0;
    1233              ;**     -----------------------    goto g25;
    1234                      .dwcfi  cfa_offset, 1
    1235                      .dwcfi  save_reg_to_mem, 91, -1
    1236 000263 5066          push(T2)
    1237                      .dwcfi  cfa_offset, 2
    1238                      .dwcfi  save_reg_to_mem, 14, -2
    1239 000265 5076          push(T3)
    1240                      .dwcfi  cfa_offset, 3
    1241                      .dwcfi  save_reg_to_mem, 15, -3
    1242 000267 50D5          pshboth(XAR5)
    1243                      .dwcfi  cfa_offset, 4
    1244                      .dwcfi  save_reg_to_mem, 26, -4
    1245 000269 50E5          pshboth(XAR6)
    1246                      .dwcfi  cfa_offset, 5
    1247                      .dwcfi  save_reg_to_mem, 28, -5
    1248 00026b 50F5          pshboth(XAR7)
    1249                      .dwcfi  cfa_offset, 6
    1250                      .dwcfi  save_reg_to_mem, 30, -6
    1251 00026d 4EFA          SP = SP + #-6
    1252                      .dwcfi  cfa_offset, 12
    1253              ;* AR6   assigned to _pcOriginalReadPosition
    1254              $C$DW$109       .dwtag  DW_TAG_variable, DW_AT_name("pcOriginalReadPosition")
    1255                      .dwattr $C$DW$109, DW_AT_TI_symbol_name("_pcOriginalReadPosition")
    1256                      .dwattr $C$DW$109, DW_AT_type(*$C$DW$T$32)
    1257                      .dwattr $C$DW$109, DW_AT_location[DW_OP_reg29]
    1258              ;* T3    assigned to _xEntryTimeSet
    1259              $C$DW$110       .dwtag  DW_TAG_variable, DW_AT_name("xEntryTimeSet")
    1260                      .dwattr $C$DW$110, DW_AT_TI_symbol_name("_xEntryTimeSet")
    1261                      .dwattr $C$DW$110, DW_AT_type(*$C$DW$T$10)
    1262                      .dwattr $C$DW$110, DW_AT_location[DW_OP_reg15]
    1263              ;* T2    assigned to _xJustPeeking
    1264              $C$DW$111       .dwtag  DW_TAG_variable, DW_AT_name("xJustPeeking")
    1265                      .dwattr $C$DW$111, DW_AT_TI_symbol_name("_xJustPeeking")
    1266                      .dwattr $C$DW$111, DW_AT_type(*$C$DW$T$10)
    1267                      .dwattr $C$DW$111, DW_AT_location[DW_OP_reg14]
    1268              $C$DW$112       .dwtag  DW_TAG_variable, DW_AT_name("xTicksToWait")
    1269                      .dwattr $C$DW$112, DW_AT_TI_symbol_name("_xTicksToWait")
    1270                      .dwattr $C$DW$112, DW_AT_type(*$C$DW$T$19)
    1271                      .dwattr $C$DW$112, DW_AT_location[DW_OP_bregx 0x24 0]
    1272              ;* AR7   assigned to _pvBuffer
    1273              $C$DW$113       .dwtag  DW_TAG_variable, DW_AT_name("pvBuffer")
    1274                      .dwattr $C$DW$113, DW_AT_TI_symbol_name("_pvBuffer")
    1275                      .dwattr $C$DW$113, DW_AT_type(*$C$DW$T$60)
    1276                      .dwattr $C$DW$113, DW_AT_location[DW_OP_reg31]
    1277              ;* AR5   assigned to _pxQueue
    1278              $C$DW$114       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    1279                      .dwattr $C$DW$114, DW_AT_TI_symbol_name("_pxQueue")
    1280                      .dwattr $C$DW$114, DW_AT_type(*$C$DW$T$82)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   27

    1281                      .dwattr $C$DW$114, DW_AT_location[DW_OP_reg27]
    1282              $C$DW$115       .dwtag  DW_TAG_variable, DW_AT_name("xTimeOut")
    1283                      .dwattr $C$DW$115, DW_AT_TI_symbol_name("_xTimeOut")
    1284                      .dwattr $C$DW$115, DW_AT_type(*$C$DW$T$73)
    1285                      .dwattr $C$DW$115, DW_AT_location[DW_OP_bregx 0x24 2]
    1286 00026f EC01          XAR5 = mar(*AR0)
         000271 DE   
    1287 000272 EC21          XAR7 = mar(*AR1)
         000274 FE   
    1288              
    1289 000275 EB00          dbl(*SP(#0)) = AC0 ; |822| 
         000277 08   
    1290 000278 2346  ||      T2 = T0   ; |822| 
    1291              
    1292                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 823,column 22,is_stmt
    1293              
    1294 00027a 0600          goto $C$L32
         00027c DC   
    1295 00027d 3D07  ||      T3 = #0
    1296              
    1297                                                      ; branch occurs
    1298 00027f       $C$L22:    
    1299 00027f       $C$DW$L$_xQueueGenericReceive$2$B:
    1300              ;**     -----------------------g2:
    1301              ;** 898 -----------------------    if ( xTicksToWait ) goto g7;
    1302                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 898,column 5,is_stmt
    1303 00027f ED00          AC0 = dbl(*SP(#0)) ; |898| 
         000281 08   
    1304 000282 0410          if (AC0 != #0) goto $C$L24 ; |898| 
         000284 20   
    1305                                                      ; branchcc occurs ; |898| 
    1306 000285       $C$DW$L$_xQueueGenericReceive$2$E:
    1307              ;** 902 -----------------------    if ( !usCriticalNesting ) goto g6;
    1308                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 902,column 6,is_stmt
    1309 000285 A931          AR1 = *(#_usCriticalNesting) ; |902| 
         000287 0000 
         000289 00!  
    1310 00028a 0409          if (AR1 == #0) goto $C$L23 ; |902| 
         00028c 13   
    1311                                                      ; branchcc occurs ; |902| 
    1312              ;** 902 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    1313              ;** 902 -----------------------    if ( usCriticalNesting ) goto g6;
    1314 00028d F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |902| 
         00028f FFFF 
         000291 0000 
         000293 00!  
    1315 000294 20            nop
    1316 000295 20            nop
    1317 000296 20            nop
    1318 000297 A931          AR1 = *(#_usCriticalNesting) ; |902| 
         000299 0000 
         00029b 00!  
    1319 00029c 6119          if (AR1 != #0) goto $C$L23 ; |902| 
    1320                                                      ; branchcc occurs ; |902| 
    1321              ;** 902 -----------------------    _enable_interrupts();
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   28

    1322 00029e 46B2          bit(ST1, #ST1_INTM) = #0 ; |902| 
    1323 0002a0       $C$L23:    
    1324              ;**     -----------------------g6:
    1325              ;** 904 -----------------------    return 0;
    1326                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 904,column 6,is_stmt
    1327              
    1328 0002a0 0601          goto $C$L36 ; |904| 
         0002a2 38   
    1329 0002a3 3D04  ||      T0 = #0
    1330              
    1331                                                      ; branch occurs ; |904| 
    1332 0002a5       $C$L24:    
    1333 0002a5       $C$DW$L$_xQueueGenericReceive$7$B:
    1334              ;**     -----------------------g7:
    1335              ;** 906 -----------------------    if ( xEntryTimeSet ) goto g9;
    1336                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 906,column 10,is_stmt
    1337 0002a5 6497          if (T3 != #0) goto $C$L25 ; |906| 
    1338                                                      ; branchcc occurs ; |906| 
    1339 0002a7       $C$DW$L$_xQueueGenericReceive$7$E:
    1340 0002a7       $C$DW$L$_xQueueGenericReceive$8$B:
    1341              ;** 910 -----------------------    vTaskSetTimeOutState(&xTimeOut);
    1342              ;** 911 -----------------------    xEntryTimeSet = 1;
    1343                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 910,column 6,is_stmt
    1344 0002a7 EC04          XAR0 = mar(*SP(#2))
         0002a9 8E   
    1345              $C$DW$116       .dwtag  DW_TAG_TI_branch
    1346                      .dwattr $C$DW$116, DW_AT_low_pc(0x00)
    1347                      .dwattr $C$DW$116, DW_AT_name("_vTaskSetTimeOutState")
    1348                      .dwattr $C$DW$116, DW_AT_TI_call
    1349 0002aa 6C00          call #_vTaskSetTimeOutState ; |910| 
         0002ac 0000!
    1350                                                      ; call occurs [#_vTaskSetTimeOutState] ; |910| 
    1351                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 911,column 6,is_stmt
    1352 0002ae 3C17          T3 = #1
    1353 0002b0       $C$DW$L$_xQueueGenericReceive$8$E:
    1354 0002b0       $C$L25:    
    1355 0002b0       $C$DW$L$_xQueueGenericReceive$9$B:
    1356              ;**     -----------------------g9:
    1357              ;** 915 -----------------------    if ( !usCriticalNesting ) goto g12;
    1358                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 915,column 3,is_stmt
    1359 0002b0 A931          AR1 = *(#_usCriticalNesting) ; |915| 
         0002b2 0000 
         0002b4 00!  
    1360 0002b5 0409          if (AR1 == #0) goto $C$L26 ; |915| 
         0002b7 13   
    1361                                                      ; branchcc occurs ; |915| 
    1362 0002b8       $C$DW$L$_xQueueGenericReceive$9$E:
    1363 0002b8       $C$DW$L$_xQueueGenericReceive$10$B:
    1364              ;** 915 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    1365              ;** 915 -----------------------    if ( usCriticalNesting ) goto g12;
    1366 0002b8 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |915| 
         0002ba FFFF 
         0002bc 0000 
         0002be 00!  
    1367 0002bf 20            nop
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   29

    1368 0002c0 20            nop
    1369 0002c1 20            nop
    1370 0002c2 A931          AR1 = *(#_usCriticalNesting) ; |915| 
         0002c4 0000 
         0002c6 00!  
    1371 0002c7 6119          if (AR1 != #0) goto $C$L26 ; |915| 
    1372                                                      ; branchcc occurs ; |915| 
    1373 0002c9       $C$DW$L$_xQueueGenericReceive$10$E:
    1374 0002c9       $C$DW$L$_xQueueGenericReceive$11$B:
    1375              ;** 915 -----------------------    _enable_interrupts();
    1376 0002c9 46B2          bit(ST1, #ST1_INTM) = #0 ; |915| 
    1377 0002cb       $C$DW$L$_xQueueGenericReceive$11$E:
    1378 0002cb       $C$L26:    
    1379 0002cb       $C$DW$L$_xQueueGenericReceive$12$B:
    1380              ;**     -----------------------g12:
    1381              ;** 920 -----------------------    vTaskSuspendAll();
    1382              ;** 921 -----------------------    _disable_interrupts();
    1383              ;** 921 -----------------------    usCriticalNesting = usCriticalNesting+1u;
    1384              ;** 921 -----------------------    if ( (*pxQueue).xRxLock != (-1) ) goto g14;
    1385                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 920,column 3,is_stmt
    1386              $C$DW$117       .dwtag  DW_TAG_TI_branch
    1387                      .dwattr $C$DW$117, DW_AT_low_pc(0x00)
    1388                      .dwattr $C$DW$117, DW_AT_name("_vTaskSuspendAll")
    1389                      .dwattr $C$DW$117, DW_AT_TI_call
    1390 0002cb 6C00          call #_vTaskSuspendAll ; |920| 
         0002cd 0000!
    1391                                                      ; call occurs [#_vTaskSuspendAll] ; |920| 
    1392                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 921,column 3,is_stmt
    1393 0002cf 46B3          bit(ST1, #ST1_INTM) = #1 ; |921| 
    1394                                                      ; interrupts disabled ; |921| 
    1395 0002d1 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |921| 
         0002d3 0001 
         0002d5 0000 
         0002d7 00!  
    1396 0002d8 F0AD          TC1 = (*AR5(#31) == #-1) ; |921| 
         0002da FFFF 
         0002dc 001F 
    1397 0002de 62F4          if (!TC1) goto $C$L27 ; |921| 
    1398                                                      ; branchcc occurs ; |921| 
    1399 0002e0       $C$DW$L$_xQueueGenericReceive$12$E:
    1400 0002e0       $C$DW$L$_xQueueGenericReceive$13$B:
    1401              ;** 921 -----------------------    (*pxQueue).xRxLock = 0;
    1402 0002e0 E6AD          *AR5(#31) = #0 ; |921| 
         0002e2 0000 
         0002e4 1F   
    1403 0002e5       $C$DW$L$_xQueueGenericReceive$13$E:
    1404 0002e5       $C$L27:    
    1405 0002e5       $C$DW$L$_xQueueGenericReceive$14$B:
    1406              ;**     -----------------------g14:
    1407              ;** 921 -----------------------    if ( (*pxQueue).xTxLock != (-1) ) goto g16;
    1408 0002e5 F0AD          TC1 = (*AR5(#32) == #-1) ; |921| 
         0002e7 FFFF 
         0002e9 0020 
    1409 0002eb 62F4          if (!TC1) goto $C$L28 ; |921| 
    1410                                                      ; branchcc occurs ; |921| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   30

    1411 0002ed       $C$DW$L$_xQueueGenericReceive$14$E:
    1412 0002ed       $C$DW$L$_xQueueGenericReceive$15$B:
    1413              ;** 921 -----------------------    (*pxQueue).xTxLock = 0;
    1414 0002ed E6AD          *AR5(#32) = #0 ; |921| 
         0002ef 0000 
         0002f1 20   
    1415 0002f2       $C$DW$L$_xQueueGenericReceive$15$E:
    1416 0002f2       $C$L28:    
    1417 0002f2       $C$DW$L$_xQueueGenericReceive$16$B:
    1418              ;**     -----------------------g16:
    1419              ;** 921 -----------------------    if ( !usCriticalNesting ) goto g19;
    1420 0002f2 A931          AR1 = *(#_usCriticalNesting) ; |921| 
         0002f4 0000 
         0002f6 00!  
    1421 0002f7 0409          if (AR1 == #0) goto $C$L29 ; |921| 
         0002f9 13   
    1422                                                      ; branchcc occurs ; |921| 
    1423 0002fa       $C$DW$L$_xQueueGenericReceive$16$E:
    1424 0002fa       $C$DW$L$_xQueueGenericReceive$17$B:
    1425              ;** 921 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    1426              ;** 921 -----------------------    if ( usCriticalNesting ) goto g19;
    1427 0002fa F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |921| 
         0002fc FFFF 
         0002fe 0000 
         000300 00!  
    1428 000301 20            nop
    1429 000302 20            nop
    1430 000303 20            nop
    1431 000304 A931          AR1 = *(#_usCriticalNesting) ; |921| 
         000306 0000 
         000308 00!  
    1432 000309 6119          if (AR1 != #0) goto $C$L29 ; |921| 
    1433                                                      ; branchcc occurs ; |921| 
    1434 00030b       $C$DW$L$_xQueueGenericReceive$17$E:
    1435 00030b       $C$DW$L$_xQueueGenericReceive$18$B:
    1436              ;** 921 -----------------------    _enable_interrupts();
    1437 00030b 46B2          bit(ST1, #ST1_INTM) = #0 ; |921| 
    1438 00030d       $C$DW$L$_xQueueGenericReceive$18$E:
    1439 00030d       $C$L29:    
    1440 00030d       $C$DW$L$_xQueueGenericReceive$19$B:
    1441              ;**     -----------------------g19:
    1442              ;** 924 -----------------------    if ( !xTaskCheckForTimeOut(&xTimeOut, &xTicksToWait) ) goto g21;
    1443                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 924,column 3,is_stmt
    1444 00030d EC04          XAR0 = mar(*SP(#2))
         00030f 8E   
    1445 000310 EC00          XAR1 = mar(*SP(#0))
         000312 9E   
    1446              $C$DW$118       .dwtag  DW_TAG_TI_branch
    1447                      .dwattr $C$DW$118, DW_AT_low_pc(0x00)
    1448                      .dwattr $C$DW$118, DW_AT_name("_xTaskCheckForTimeOut")
    1449                      .dwattr $C$DW$118, DW_AT_TI_call
    1450 000313 6C00          call #_xTaskCheckForTimeOut ; |924| 
         000315 0000!
    1451                                                      ; call occurs [#_xTaskCheckForTimeOut] ; |924| 
    1452 000317 6784          if (T0 == #0) goto $C$L30 ; |924| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   31

    1453                                                      ; branchcc occurs ; |924| 
    1454 000319       $C$DW$L$_xQueueGenericReceive$19$E:
    1455              ;** 959 -----------------------    prvUnlockQueue(pxQueue);
    1456              ;** 960 -----------------------    xTaskResumeAll();
    1457              ;** 962 -----------------------    return 0;
    1458                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 959,column 4,is_stmt
    1459 000319 ECA1          XAR0 = mar(*AR5)
         00031b 8E   
    1460              $C$DW$119       .dwtag  DW_TAG_TI_branch
    1461                      .dwattr $C$DW$119, DW_AT_low_pc(0x00)
    1462                      .dwattr $C$DW$119, DW_AT_name("_prvUnlockQueue")
    1463                      .dwattr $C$DW$119, DW_AT_TI_call
    1464 00031c 0802          call #_prvUnlockQueue ; |959| 
         00031e 35   
    1465                                                      ; call occurs [#_prvUnlockQueue] ; |959| 
    1466                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 960,column 4,is_stmt
    1467              $C$DW$120       .dwtag  DW_TAG_TI_branch
    1468                      .dwattr $C$DW$120, DW_AT_low_pc(0x00)
    1469                      .dwattr $C$DW$120, DW_AT_name("_xTaskResumeAll")
    1470                      .dwattr $C$DW$120, DW_AT_TI_call
    1471 00031f 6C00          call #_xTaskResumeAll ; |960| 
         000321 0000!
    1472                                                      ; call occurs [#_xTaskResumeAll] ; |960| 
    1473                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 962,column 4,is_stmt
    1474              
    1475 000323 0600          goto $C$L36 ; |962| 
         000325 B5   
    1476 000326 3D04  ||      T0 = #0
    1477              
    1478                                                      ; branch occurs ; |962| 
    1479 000328       $C$L30:    
    1480 000328       $C$DW$L$_xQueueGenericReceive$21$B:
    1481              ;**     -----------------------g21:
    1482              ;** 926 -----------------------    if ( !prvIsQueueEmpty(pxQueue) ) goto g24;
    1483                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 926,column 4,is_stmt
    1484 000328 ECA1          XAR0 = mar(*AR5)
         00032a 8E   
    1485              $C$DW$121       .dwtag  DW_TAG_TI_branch
    1486                      .dwattr $C$DW$121, DW_AT_low_pc(0x00)
    1487                      .dwattr $C$DW$121, DW_AT_name("_prvIsQueueEmpty")
    1488                      .dwattr $C$DW$121, DW_AT_TI_call
    1489 00032b 0802          call #_prvIsQueueEmpty ; |926| 
         00032d D7   
    1490                                                      ; call occurs [#_prvIsQueueEmpty] ; |926| 
    1491 00032e 0404          if (T0 == #0) goto $C$L31 ; |926| 
         000330 20   
    1492                                                      ; branchcc occurs ; |926| 
    1493 000331       $C$DW$L$_xQueueGenericReceive$21$E:
    1494 000331       $C$DW$L$_xQueueGenericReceive$22$B:
    1495              ;** 943 -----------------------    vTaskPlaceOnEventList((struct _xLIST *)pxQueue+18L, xTicksToWait);
    1496              ;** 944 -----------------------    prvUnlockQueue(pxQueue);
    1497              ;** 945 -----------------------    if ( xTaskResumeAll() ) goto g25;
    1498                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 943,column 5,is_stmt
    1499 000331 ECA1          XAR0 = mar(*AR5)
         000333 8E   
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   32

    1500              
    1501                      mar(AR0 + #18) ; |943| 
    1502 000334 8E00  ||      AC0 = dbl(*SP(#0)) ; |943| 
         000336 8D1C 
         000338 0812 
    1503              
    1504              $C$DW$122       .dwtag  DW_TAG_TI_branch
    1505                      .dwattr $C$DW$122, DW_AT_low_pc(0x00)
    1506                      .dwattr $C$DW$122, DW_AT_name("_vTaskPlaceOnEventList")
    1507                      .dwattr $C$DW$122, DW_AT_TI_call
    1508 00033a 6C00          call #_vTaskPlaceOnEventList ; |943| 
         00033c 0000!
    1509                                                      ; call occurs [#_vTaskPlaceOnEventList] ; |943| 
    1510                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 944,column 5,is_stmt
    1511 00033e ECA1          XAR0 = mar(*AR5)
         000340 8E   
    1512              $C$DW$123       .dwtag  DW_TAG_TI_branch
    1513                      .dwattr $C$DW$123, DW_AT_low_pc(0x00)
    1514                      .dwattr $C$DW$123, DW_AT_name("_prvUnlockQueue")
    1515                      .dwattr $C$DW$123, DW_AT_TI_call
    1516 000341 0802          call #_prvUnlockQueue ; |944| 
         000343 10   
    1517                                                      ; call occurs [#_prvUnlockQueue] ; |944| 
    1518                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 945,column 5,is_stmt
    1519              $C$DW$124       .dwtag  DW_TAG_TI_branch
    1520                      .dwattr $C$DW$124, DW_AT_low_pc(0x00)
    1521                      .dwattr $C$DW$124, DW_AT_name("_xTaskResumeAll")
    1522                      .dwattr $C$DW$124, DW_AT_TI_call
    1523 000344 6C00          call #_xTaskResumeAll ; |945| 
         000346 0000!
    1524                                                      ; call occurs [#_xTaskResumeAll] ; |945| 
    1525 000348 0414          if (T0 != #0) goto $C$L32 ; |945| 
         00034a 10   
    1526                                                      ; branchcc occurs ; |945| 
    1527 00034b       $C$DW$L$_xQueueGenericReceive$22$E:
    1528 00034b       $C$DW$L$_xQueueGenericReceive$23$B:
    1529              ;** 947 -----------------------    vPortYield();
    1530              ;** 947 -----------------------    goto g25;
    1531                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 947,column 6,is_stmt
    1532              $C$DW$125       .dwtag  DW_TAG_TI_branch
    1533                      .dwattr $C$DW$125, DW_AT_low_pc(0x00)
    1534                      .dwattr $C$DW$125, DW_AT_name("_vPortYield")
    1535                      .dwattr $C$DW$125, DW_AT_TI_call
    1536 00034b 6C00          call #_vPortYield ; |947| 
         00034d 0000!
    1537                                                      ; call occurs [#_vPortYield] ; |947| 
    1538 00034f 4A0A          goto $C$L32 ; |947| 
    1539                                                      ; branch occurs ; |947| 
    1540 000351       $C$DW$L$_xQueueGenericReceive$23$E:
    1541 000351       $C$L31:    
    1542 000351       $C$DW$L$_xQueueGenericReceive$24$B:
    1543              ;**     -----------------------g24:
    1544              ;** 953 -----------------------    prvUnlockQueue(pxQueue);
    1545              ;** 954 -----------------------    xTaskResumeAll();
    1546                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 953,column 5,is_stmt
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   33

    1547 000351 ECA1          XAR0 = mar(*AR5)
         000353 8E   
    1548              $C$DW$126       .dwtag  DW_TAG_TI_branch
    1549                      .dwattr $C$DW$126, DW_AT_low_pc(0x00)
    1550                      .dwattr $C$DW$126, DW_AT_name("_prvUnlockQueue")
    1551                      .dwattr $C$DW$126, DW_AT_TI_call
    1552 000354 0801          call #_prvUnlockQueue ; |953| 
         000356 FD   
    1553                                                      ; call occurs [#_prvUnlockQueue] ; |953| 
    1554                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 954,column 5,is_stmt
    1555              $C$DW$127       .dwtag  DW_TAG_TI_branch
    1556                      .dwattr $C$DW$127, DW_AT_low_pc(0x00)
    1557                      .dwattr $C$DW$127, DW_AT_name("_xTaskResumeAll")
    1558                      .dwattr $C$DW$127, DW_AT_TI_call
    1559 000357 6C00          call #_xTaskResumeAll ; |954| 
         000359 0000!
    1560                                                      ; call occurs [#_xTaskResumeAll] ; |954| 
    1561 00035b       $C$DW$L$_xQueueGenericReceive$24$E:
    1562 00035b       $C$L32:    
    1563 00035b       $C$DW$L$_xQueueGenericReceive$25$B:
    1564              ;**     -----------------------g25:
    1565              ;** 833 -----------------------    _disable_interrupts();
    1566              ;** 833 -----------------------    usCriticalNesting = usCriticalNesting+1u;
    1567              ;** 837 -----------------------    if ( !(*pxQueue).uxMessagesWaiting ) goto g2;
    1568                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 833,column 3,is_stmt
    1569 00035b 46B3          bit(ST1, #ST1_INTM) = #1 ; |833| 
    1570                                                      ; interrupts disabled ; |833| 
    1571 00035d F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |833| 
         00035f 0001 
         000361 0000 
         000363 00!  
    1572 000364 20            nop
    1573 000365 20            nop
    1574 000366 20            nop
    1575                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 837,column 4,is_stmt
    1576 000367 A9AD          AR1 = *AR5(#28) ; |837| 
         000369 001C 
    1577 00036b 6D09          if (AR1 == #0) goto $C$L22 ; |837| 
         00036d FF10 
    1578                                                      ; branchcc occurs ; |837| 
    1579 00036f       $C$DW$L$_xQueueGenericReceive$25$E:
    1580              ;** 840 -----------------------    pcOriginalReadPosition = (*pxQueue).pcReadFrom;
    1581              ;** 842 -----------------------    prvCopyDataFromQueue(pxQueue, pvBuffer);
    1582              ;** 844 -----------------------    if ( xJustPeeking ) goto g30;
    1583                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 840,column 5,is_stmt
    1584 00036f EDBD          XAR6 = dbl(*AR5(short(#6)))
         000371 EF   
    1585                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 842,column 5,is_stmt
    1586 000372 ECE1          XAR1 = mar(*AR7)
         000374 9E   
    1587 000375 ECA1          XAR0 = mar(*AR5)
         000377 8E   
    1588              $C$DW$128       .dwtag  DW_TAG_TI_branch
    1589                      .dwattr $C$DW$128, DW_AT_low_pc(0x00)
    1590                      .dwattr $C$DW$128, DW_AT_name("_prvCopyDataFromQueue")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   34

    1591                      .dwattr $C$DW$128, DW_AT_TI_call
    1592 000378 0801          call #_prvCopyDataFromQueue ; |842| 
         00037a 94   
    1593                                                      ; call occurs [#_prvCopyDataFromQueue] ; |842| 
    1594                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 844,column 5,is_stmt
    1595 00037b 0416          if (T2 != #0) goto $C$L33 ; |844| 
         00037d 28   
    1596                                                      ; branchcc occurs ; |844| 
    1597              ;** 849 -----------------------    --(*pxQueue).uxMessagesWaiting;
    1598              ;** 862 -----------------------    if ( !(*pxQueue).xTasksWaitingToSend.uxNumberOfItems ) goto g33;
    1599                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 849,column 6,is_stmt
    1600 00037e F7AD          *AR5(#28) = *AR5(#28) - #1 ; |849| 
         000380 FFFF 
         000382 001C 
    1601 000384 20            nop
    1602 000385 20            nop
    1603 000386 20            nop
    1604                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 862,column 6,is_stmt
    1605 000387 A9AD          AR1 = *AR5(#8) ; |862| 
         000389 0008 
    1606 00038b 0409          if (AR1 == #0) goto $C$L34 ; |862| 
         00038d 32   
    1607                                                      ; branchcc occurs ; |862| 
    1608              ;** 864 -----------------------    if ( xTaskRemoveFromEventList((struct _xLIST *)pxQueue+8L) != 1 ) goto g33
    1609                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 864,column 7,is_stmt
    1610 00038e ECA1          XAR0 = mar(*AR5)
         000390 8E   
    1611 000391 1408          mar(AR0 + #8) ; |864| 
         000393 84   
    1612              $C$DW$129       .dwtag  DW_TAG_TI_branch
    1613                      .dwattr $C$DW$129, DW_AT_low_pc(0x00)
    1614                      .dwattr $C$DW$129, DW_AT_name("_xTaskRemoveFromEventList")
    1615                      .dwattr $C$DW$129, DW_AT_TI_call
    1616 000394 6C00          call #_xTaskRemoveFromEventList ; |864| 
         000396 0000!
    1617                                                      ; call occurs [#_xTaskRemoveFromEventList] ; |864| 
    1618 000398 3C19          AR1 = #1
    1619 00039a 124C          TC1 = (T0 != AR1) ; |864| 
         00039c 90   
    1620 00039d 0464          if (TC1) goto $C$L34 ; |864| 
         00039f 20   
    1621                                                      ; branchcc occurs ; |864| 
    1622              ;** 866 -----------------------    vPortYield();
    1623              ;** 866 -----------------------    goto g33;
    1624                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 866,column 8,is_stmt
    1625              $C$DW$130       .dwtag  DW_TAG_TI_branch
    1626                      .dwattr $C$DW$130, DW_AT_low_pc(0x00)
    1627                      .dwattr $C$DW$130, DW_AT_name("_vPortYield")
    1628                      .dwattr $C$DW$130, DW_AT_TI_call
    1629 0003a0 6C00          call #_vPortYield ; |866| 
         0003a2 0000!
    1630                                                      ; call occurs [#_vPortYield] ; |866| 
    1631 0003a4 4A1A          goto $C$L34 ; |866| 
    1632                                                      ; branch occurs ; |866| 
    1633 0003a6       $C$L33:    
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   35

    1634              ;**     -----------------------g30:
    1635              ;** 876 -----------------------    (*pxQueue).pcReadFrom = pcOriginalReadPosition;
    1636              ;** 880 -----------------------    if ( !(*pxQueue).xTasksWaitingToReceive.uxNumberOfItems ) goto g33;
    1637                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 876,column 6,is_stmt
    1638 0003a6 EBBD          dbl(*AR5(short(#6))) = XAR6
         0003a8 E5   
    1639                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 880,column 6,is_stmt
    1640 0003a9 A9AD          AR1 = *AR5(#18) ; |880| 
         0003ab 0012 
    1641 0003ad 0409          if (AR1 == #0) goto $C$L34 ; |880| 
         0003af 10   
    1642                                                      ; branchcc occurs ; |880| 
    1643              ;** 884 -----------------------    if ( !xTaskRemoveFromEventList((struct _xLIST *)pxQueue+18L) ) goto g33;
    1644                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 884,column 7,is_stmt
    1645 0003b0 ECA1          XAR0 = mar(*AR5)
         0003b2 8E   
    1646 0003b3 1412          mar(AR0 + #18) ; |884| 
         0003b5 84   
    1647              $C$DW$131       .dwtag  DW_TAG_TI_branch
    1648                      .dwattr $C$DW$131, DW_AT_low_pc(0x00)
    1649                      .dwattr $C$DW$131, DW_AT_name("_xTaskRemoveFromEventList")
    1650                      .dwattr $C$DW$131, DW_AT_TI_call
    1651 0003b6 6C00          call #_xTaskRemoveFromEventList ; |884| 
         0003b8 0000!
    1652                                                      ; call occurs [#_xTaskRemoveFromEventList] ; |884| 
    1653 0003ba 6204          if (T0 == #0) goto $C$L34 ; |884| 
    1654                                                      ; branchcc occurs ; |884| 
    1655              ;** 887 -----------------------    vPortYield();
    1656                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 887,column 8,is_stmt
    1657              $C$DW$132       .dwtag  DW_TAG_TI_branch
    1658                      .dwattr $C$DW$132, DW_AT_low_pc(0x00)
    1659                      .dwattr $C$DW$132, DW_AT_name("_vPortYield")
    1660                      .dwattr $C$DW$132, DW_AT_TI_call
    1661 0003bc 6C00          call #_vPortYield ; |887| 
         0003be 0000!
    1662                                                      ; call occurs [#_vPortYield] ; |887| 
    1663 0003c0       $C$L34:    
    1664              ;**     -----------------------g33:
    1665              ;** 893 -----------------------    if ( !usCriticalNesting ) goto g36;
    1666                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 893,column 5,is_stmt
    1667 0003c0 A931          AR1 = *(#_usCriticalNesting) ; |893| 
         0003c2 0000 
         0003c4 00!  
    1668 0003c5 0409          if (AR1 == #0) goto $C$L35 ; |893| 
         0003c7 13   
    1669                                                      ; branchcc occurs ; |893| 
    1670              ;** 893 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    1671              ;** 893 -----------------------    if ( usCriticalNesting ) goto g36;
    1672 0003c8 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |893| 
         0003ca FFFF 
         0003cc 0000 
         0003ce 00!  
    1673 0003cf 20            nop
    1674 0003d0 20            nop
    1675 0003d1 20            nop
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   36

    1676 0003d2 A931          AR1 = *(#_usCriticalNesting) ; |893| 
         0003d4 0000 
         0003d6 00!  
    1677 0003d7 6119          if (AR1 != #0) goto $C$L35 ; |893| 
    1678                                                      ; branchcc occurs ; |893| 
    1679              ;** 893 -----------------------    _enable_interrupts();
    1680 0003d9 46B2          bit(ST1, #ST1_INTM) = #0 ; |893| 
    1681 0003db       $C$L35:    
    1682              ;**     -----------------------g36:
    1683              ;** 894 -----------------------    return 1;
    1684                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 894,column 5,is_stmt
    1685 0003db 3C14          T0 = #1
    1686 0003dd       $C$L36:    
    1687                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 965,column 1,is_stmt
    1688 0003dd 4E06          SP = SP + #6
    1689                      .dwcfi  cfa_offset, 6
    1690 0003df 50F4          XAR7 = popboth()
    1691                      .dwcfi  restore_reg, 30
    1692                      .dwcfi  cfa_offset, 5
    1693 0003e1 50E4          XAR6 = popboth()
    1694                      .dwcfi  restore_reg, 28
    1695                      .dwcfi  cfa_offset, 4
    1696 0003e3 50D4          XAR5 = popboth()
    1697                      .dwcfi  restore_reg, 26
    1698                      .dwcfi  cfa_offset, 3
    1699 0003e5 5072          T3 = pop()
    1700                      .dwcfi  restore_reg, 15
    1701                      .dwcfi  cfa_offset, 2
    1702 0003e7 5062          T2 = pop()
    1703                      .dwcfi  restore_reg, 14
    1704                      .dwcfi  cfa_offset, 1
    1705              $C$DW$133       .dwtag  DW_TAG_TI_branch
    1706                      .dwattr $C$DW$133, DW_AT_low_pc(0x00)
    1707                      .dwattr $C$DW$133, DW_AT_TI_return
    1708 0003e9 4804          return
    1709                                                      ; return occurs
    1710              
    1711              $C$DW$134       .dwtag  DW_TAG_TI_loop
    1712                      .dwattr $C$DW$134, DW_AT_name("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\Debug\queue.asm:$C$L32:
    1713                      .dwattr $C$DW$134, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    1714                      .dwattr $C$DW$134, DW_AT_TI_begin_line(0x341)
    1715                      .dwattr $C$DW$134, DW_AT_TI_end_line(0x3ba)
    1716              $C$DW$135       .dwtag  DW_TAG_TI_loop_range
    1717                      .dwattr $C$DW$135, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$25$B)
    1718                      .dwattr $C$DW$135, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$25$E)
    1719              $C$DW$136       .dwtag  DW_TAG_TI_loop_range
    1720                      .dwattr $C$DW$136, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$2$B)
    1721                      .dwattr $C$DW$136, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$2$E)
    1722              $C$DW$137       .dwtag  DW_TAG_TI_loop_range
    1723                      .dwattr $C$DW$137, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$7$B)
    1724                      .dwattr $C$DW$137, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$7$E)
    1725              $C$DW$138       .dwtag  DW_TAG_TI_loop_range
    1726                      .dwattr $C$DW$138, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$8$B)
    1727                      .dwattr $C$DW$138, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$8$E)
    1728              $C$DW$139       .dwtag  DW_TAG_TI_loop_range
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   37

    1729                      .dwattr $C$DW$139, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$9$B)
    1730                      .dwattr $C$DW$139, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$9$E)
    1731              $C$DW$140       .dwtag  DW_TAG_TI_loop_range
    1732                      .dwattr $C$DW$140, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$10$B)
    1733                      .dwattr $C$DW$140, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$10$E)
    1734              $C$DW$141       .dwtag  DW_TAG_TI_loop_range
    1735                      .dwattr $C$DW$141, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$11$B)
    1736                      .dwattr $C$DW$141, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$11$E)
    1737              $C$DW$142       .dwtag  DW_TAG_TI_loop_range
    1738                      .dwattr $C$DW$142, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$12$B)
    1739                      .dwattr $C$DW$142, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$12$E)
    1740              $C$DW$143       .dwtag  DW_TAG_TI_loop_range
    1741                      .dwattr $C$DW$143, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$13$B)
    1742                      .dwattr $C$DW$143, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$13$E)
    1743              $C$DW$144       .dwtag  DW_TAG_TI_loop_range
    1744                      .dwattr $C$DW$144, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$14$B)
    1745                      .dwattr $C$DW$144, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$14$E)
    1746              $C$DW$145       .dwtag  DW_TAG_TI_loop_range
    1747                      .dwattr $C$DW$145, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$15$B)
    1748                      .dwattr $C$DW$145, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$15$E)
    1749              $C$DW$146       .dwtag  DW_TAG_TI_loop_range
    1750                      .dwattr $C$DW$146, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$16$B)
    1751                      .dwattr $C$DW$146, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$16$E)
    1752              $C$DW$147       .dwtag  DW_TAG_TI_loop_range
    1753                      .dwattr $C$DW$147, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$17$B)
    1754                      .dwattr $C$DW$147, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$17$E)
    1755              $C$DW$148       .dwtag  DW_TAG_TI_loop_range
    1756                      .dwattr $C$DW$148, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$18$B)
    1757                      .dwattr $C$DW$148, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$18$E)
    1758              $C$DW$149       .dwtag  DW_TAG_TI_loop_range
    1759                      .dwattr $C$DW$149, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$19$B)
    1760                      .dwattr $C$DW$149, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$19$E)
    1761              $C$DW$150       .dwtag  DW_TAG_TI_loop_range
    1762                      .dwattr $C$DW$150, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$21$B)
    1763                      .dwattr $C$DW$150, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$21$E)
    1764              $C$DW$151       .dwtag  DW_TAG_TI_loop_range
    1765                      .dwattr $C$DW$151, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$24$B)
    1766                      .dwattr $C$DW$151, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$24$E)
    1767              $C$DW$152       .dwtag  DW_TAG_TI_loop_range
    1768                      .dwattr $C$DW$152, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$23$B)
    1769                      .dwattr $C$DW$152, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$23$E)
    1770              $C$DW$153       .dwtag  DW_TAG_TI_loop_range
    1771                      .dwattr $C$DW$153, DW_AT_low_pc($C$DW$L$_xQueueGenericReceive$22$B)
    1772                      .dwattr $C$DW$153, DW_AT_high_pc($C$DW$L$_xQueueGenericReceive$22$E)
    1773                      .dwendtag $C$DW$134
    1774              
    1775                      .dwattr $C$DW$104, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    1776                      .dwattr $C$DW$104, DW_AT_TI_end_line(0x3c5)
    1777                      .dwattr $C$DW$104, DW_AT_TI_end_column(0x01)
    1778                      .dwendentry
    1779                      .dwendtag $C$DW$104
    1780              
    1781 0003eb               .sect   ".text"
    1782                      .global _xQueueReceiveFromISR
    1783              
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   38

    1784              $C$DW$154       .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueReceiveFromISR")
    1785                      .dwattr $C$DW$154, DW_AT_low_pc(_xQueueReceiveFromISR)
    1786                      .dwattr $C$DW$154, DW_AT_high_pc(0x00)
    1787                      .dwattr $C$DW$154, DW_AT_TI_symbol_name("_xQueueReceiveFromISR")
    1788                      .dwattr $C$DW$154, DW_AT_external
    1789                      .dwattr $C$DW$154, DW_AT_type(*$C$DW$T$10)
    1790                      .dwattr $C$DW$154, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    1791                      .dwattr $C$DW$154, DW_AT_TI_begin_line(0x3c8)
    1792                      .dwattr $C$DW$154, DW_AT_TI_begin_column(0x16)
    1793                      .dwattr $C$DW$154, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    1794                      .dwattr $C$DW$154, DW_AT_decl_line(0x3c8)
    1795                      .dwattr $C$DW$154, DW_AT_decl_column(0x16)
    1796                      .dwattr $C$DW$154, DW_AT_TI_max_frame_size(0x04)
    1797                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 969,column 1,is_stmt,address _xQueueReceiveFromISR
    1798              
    1799                      .dwfde $C$DW$CIE, _xQueueReceiveFromISR
    1800              $C$DW$155       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    1801                      .dwattr $C$DW$155, DW_AT_TI_symbol_name("_pxQueue")
    1802                      .dwattr $C$DW$155, DW_AT_type(*$C$DW$T$82)
    1803                      .dwattr $C$DW$155, DW_AT_location[DW_OP_reg17]
    1804              $C$DW$156       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvBuffer")
    1805                      .dwattr $C$DW$156, DW_AT_TI_symbol_name("_pvBuffer")
    1806                      .dwattr $C$DW$156, DW_AT_type(*$C$DW$T$60)
    1807                      .dwattr $C$DW$156, DW_AT_location[DW_OP_reg19]
    1808              $C$DW$157       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxTaskWoken")
    1809                      .dwattr $C$DW$157, DW_AT_TI_symbol_name("_pxTaskWoken")
    1810                      .dwattr $C$DW$157, DW_AT_type(*$C$DW$T$90)
    1811                      .dwattr $C$DW$157, DW_AT_location[DW_OP_reg21]
    1812              ;*******************************************************************************
    1813              ;* FUNCTION NAME: xQueueReceiveFromISR                                         *
    1814              ;*                                                                             *
    1815              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,AR2,XAR2,AR5,XAR5,AR7,XAR7,SP,CARRY, *
    1816              ;*                        TC1,M40,SATA,SATD,RDM,FRCT,SMUL                      *
    1817              ;*   Save On Entry Regs : AR5,AR7                                              *
    1818              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    1819              ;*   Total Frame Size   : 4 words                                              *
    1820              ;*                        (2 return address/alignment)                         *
    1821              ;*                        (2 register save area)                               *
    1822              ;*   Min System Stack   : 3 words                                              *
    1823              ;*******************************************************************************
    1824              
    1825              ;*******************************************************************************
    1826              ;*                                                                             *
    1827              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    1828              ;*                                                                             *
    1829              ;*******************************************************************************
    1830 0003eb       _xQueueReceiveFromISR:
    1831              ;** 976 -----------------------    if ( !(*pxQueue).uxMessagesWaiting ) goto g8;
    1832                      .dwcfi  cfa_offset, 1
    1833                      .dwcfi  save_reg_to_mem, 91, -1
    1834 0003eb 50D5          pshboth(XAR5)
    1835                      .dwcfi  cfa_offset, 2
    1836                      .dwcfi  save_reg_to_mem, 26, -2
    1837 0003ed 50F5          pshboth(XAR7)
    1838                      .dwcfi  cfa_offset, 3
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   39

    1839                      .dwcfi  save_reg_to_mem, 30, -3
    1840 0003ef 4EFF          SP = SP + #-1
    1841                      .dwcfi  cfa_offset, 4
    1842              ;* T0    assigned to _xReturn
    1843              $C$DW$158       .dwtag  DW_TAG_variable, DW_AT_name("xReturn")
    1844                      .dwattr $C$DW$158, DW_AT_TI_symbol_name("_xReturn")
    1845                      .dwattr $C$DW$158, DW_AT_type(*$C$DW$T$10)
    1846                      .dwattr $C$DW$158, DW_AT_location[DW_OP_reg12]
    1847              ;* AR7   assigned to _pxTaskWoken
    1848              $C$DW$159       .dwtag  DW_TAG_variable, DW_AT_name("pxTaskWoken")
    1849                      .dwattr $C$DW$159, DW_AT_TI_symbol_name("_pxTaskWoken")
    1850                      .dwattr $C$DW$159, DW_AT_type(*$C$DW$T$90)
    1851                      .dwattr $C$DW$159, DW_AT_location[DW_OP_reg31]
    1852              ;* AR5   assigned to _pxQueue
    1853              $C$DW$160       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    1854                      .dwattr $C$DW$160, DW_AT_TI_symbol_name("_pxQueue")
    1855                      .dwattr $C$DW$160, DW_AT_type(*$C$DW$T$82)
    1856                      .dwattr $C$DW$160, DW_AT_location[DW_OP_reg27]
    1857 0003f1 EC01          XAR5 = mar(*AR0)
         0003f3 DE   
    1858 0003f4 EC41          XAR7 = mar(*AR2)
         0003f6 FE   
    1859                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 976,column 3,is_stmt
    1860 0003f7 AAAD          AR2 = *AR5(#28) ; |976| 
         0003f9 001C 
    1861 0003fb 040A          if (AR2 == #0) goto $C$L39 ; |976| 
         0003fd 34   
    1862                                                      ; branchcc occurs ; |976| 
    1863              ;** 980 -----------------------    prvCopyDataFromQueue(pxQueue, pvBuffer);
    1864              ;** 981 -----------------------    --(*pxQueue).uxMessagesWaiting;
    1865              ;** 986 -----------------------    if ( (*pxQueue).xRxLock != (-1) ) goto g6;
    1866                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 980,column 4,is_stmt
    1867              $C$DW$161       .dwtag  DW_TAG_TI_branch
    1868                      .dwattr $C$DW$161, DW_AT_low_pc(0x00)
    1869                      .dwattr $C$DW$161, DW_AT_name("_prvCopyDataFromQueue")
    1870                      .dwattr $C$DW$161, DW_AT_TI_call
    1871 0003fe 0801          call #_prvCopyDataFromQueue ; |980| 
         000400 0E   
    1872                                                      ; call occurs [#_prvCopyDataFromQueue] ; |980| 
    1873                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 981,column 4,is_stmt
    1874 000401 F7AD          *AR5(#28) = *AR5(#28) - #1 ; |981| 
         000403 FFFF 
         000405 001C 
    1875                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 986,column 4,is_stmt
    1876 000407 F0AD          TC1 = (*AR5(#31) == #-1) ; |986| 
         000409 FFFF 
         00040b 001F 
    1877 00040d 0474          if (!TC1) goto $C$L37 ; |986| 
         00040f 18   
    1878                                                      ; branchcc occurs ; |986| 
    1879              ;** 988 -----------------------    if ( !(*pxQueue).xTasksWaitingToSend.uxNumberOfItems ) goto g7;
    1880                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 988,column 5,is_stmt
    1881 000410 A9AD          AR1 = *AR5(#8) ; |988| 
         000412 0008 
    1882 000414 0409          if (AR1 == #0) goto $C$L38 ; |988| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   40

         000416 17   
    1883                                                      ; branchcc occurs ; |988| 
    1884              ;** 990 -----------------------    if ( !xTaskRemoveFromEventList((struct _xLIST *)pxQueue+8L) ) goto g7;
    1885                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 990,column 6,is_stmt
    1886 000417 ECA1          XAR0 = mar(*AR5)
         000419 8E   
    1887 00041a 1408          mar(AR0 + #8) ; |990| 
         00041c 84   
    1888              $C$DW$162       .dwtag  DW_TAG_TI_branch
    1889                      .dwattr $C$DW$162, DW_AT_low_pc(0x00)
    1890                      .dwattr $C$DW$162, DW_AT_name("_xTaskRemoveFromEventList")
    1891                      .dwattr $C$DW$162, DW_AT_TI_call
    1892 00041d 6C00          call #_xTaskRemoveFromEventList ; |990| 
         00041f 0000!
    1893                                                      ; call occurs [#_xTaskRemoveFromEventList] ; |990| 
    1894 000421 6584          if (T0 == #0) goto $C$L38 ; |990| 
    1895                                                      ; branchcc occurs ; |990| 
    1896              ;** 994 -----------------------    *pxTaskWoken = 1;
    1897              ;** 994 -----------------------    goto g7;
    1898                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 994,column 7,is_stmt
    1899 000423 E6E1          *AR7 = #1 ; |994| 
         000425 01   
    1900 000426 4A06          goto $C$L38 ; |994| 
    1901                                                      ; branch occurs ; |994| 
    1902 000428       $C$L37:    
    1903              ;**     -----------------------g6:
    1904              ;* 1002 -----------------------    (*pxQueue).xRxLock = (*pxQueue).xRxLock+1;
    1905                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1002,column 5,is_stmt
    1906 000428 F7AD          *AR5(#31) = *AR5(#31) + #1 ; |1002| 
         00042a 0001 
         00042c 001F 
    1907 00042e       $C$L38:    
    1908              ;**     -----------------------g7:
    1909              ;* 1005 -----------------------    xReturn = 1;
    1910              ;* 1006 -----------------------    goto g9;
    1911                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1005,column 4,is_stmt
    1912 00042e 3C14          T0 = #1
    1913                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1006,column 3,is_stmt
    1914 000430 4A02          goto $C$L40 ; |1006| 
    1915                                                      ; branch occurs ; |1006| 
    1916 000432       $C$L39:    
    1917              ;**     -----------------------g8:
    1918              ;* 1009 -----------------------    xReturn = 0;
    1919                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1009,column 4,is_stmt
    1920 000432 3C04          T0 = #0
    1921 000434       $C$L40:    
    1922              ;**     -----------------------g9:
    1923              ;* 1015 -----------------------    return xReturn;
    1924                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1015,column 2,is_stmt
    1925                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1016,column 1,is_stmt
    1926 000434 4E01          SP = SP + #1
    1927                      .dwcfi  cfa_offset, 3
    1928 000436 50F4          XAR7 = popboth()
    1929                      .dwcfi  restore_reg, 30
    1930                      .dwcfi  cfa_offset, 2
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   41

    1931 000438 50D4          XAR5 = popboth()
    1932                      .dwcfi  restore_reg, 26
    1933                      .dwcfi  cfa_offset, 1
    1934              $C$DW$163       .dwtag  DW_TAG_TI_branch
    1935                      .dwattr $C$DW$163, DW_AT_low_pc(0x00)
    1936                      .dwattr $C$DW$163, DW_AT_TI_return
    1937 00043a 4804          return
    1938                                                      ; return occurs
    1939                      .dwattr $C$DW$154, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    1940                      .dwattr $C$DW$154, DW_AT_TI_end_line(0x3f8)
    1941                      .dwattr $C$DW$154, DW_AT_TI_end_column(0x01)
    1942                      .dwendentry
    1943                      .dwendtag $C$DW$154
    1944              
    1945 00043c               .sect   ".text"
    1946                      .global _uxQueueMessagesWaiting
    1947              
    1948              $C$DW$164       .dwtag  DW_TAG_subprogram, DW_AT_name("uxQueueMessagesWaiting")
    1949                      .dwattr $C$DW$164, DW_AT_low_pc(_uxQueueMessagesWaiting)
    1950                      .dwattr $C$DW$164, DW_AT_high_pc(0x00)
    1951                      .dwattr $C$DW$164, DW_AT_TI_symbol_name("_uxQueueMessagesWaiting")
    1952                      .dwattr $C$DW$164, DW_AT_external
    1953                      .dwattr $C$DW$164, DW_AT_type(*$C$DW$T$11)
    1954                      .dwattr $C$DW$164, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    1955                      .dwattr $C$DW$164, DW_AT_TI_begin_line(0x3fb)
    1956                      .dwattr $C$DW$164, DW_AT_TI_begin_column(0x18)
    1957                      .dwattr $C$DW$164, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    1958                      .dwattr $C$DW$164, DW_AT_decl_line(0x3fb)
    1959                      .dwattr $C$DW$164, DW_AT_decl_column(0x18)
    1960                      .dwattr $C$DW$164, DW_AT_TI_max_frame_size(0x01)
    1961                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1020,column 1,is_stmt,address _uxQueueMessagesWaiting
    1962              
    1963                      .dwfde $C$DW$CIE, _uxQueueMessagesWaiting
    1964              $C$DW$165       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    1965                      .dwattr $C$DW$165, DW_AT_TI_symbol_name("_pxQueue")
    1966                      .dwattr $C$DW$165, DW_AT_type(*$C$DW$T$105)
    1967                      .dwattr $C$DW$165, DW_AT_location[DW_OP_reg17]
    1968              ;*******************************************************************************
    1969              ;* FUNCTION NAME: uxQueueMessagesWaiting                                       *
    1970              ;*                                                                             *
    1971              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,SP,CARRY,M40,SATA,SATD,RDM,FRCT,SMUL,*
    1972              ;*                        INTM                                                 *
    1973              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    1974              ;*   Total Frame Size   : 1 word                                               *
    1975              ;*                        (1 return address/alignment)                         *
    1976              ;*   Min System Stack   : 1 word                                               *
    1977              ;*******************************************************************************
    1978              
    1979              ;*******************************************************************************
    1980              ;*                                                                             *
    1981              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    1982              ;*                                                                             *
    1983              ;*******************************************************************************
    1984 00043c       _uxQueueMessagesWaiting:
    1985              ;* 1023 -----------------------    _disable_interrupts();
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   42

    1986              ;* 1023 -----------------------    usCriticalNesting = usCriticalNesting+1u;
    1987              ;* 1024 -----------------------    uxReturn = (*pxQueue).uxMessagesWaiting;
    1988              ;* 1025 -----------------------    if ( !usCriticalNesting ) goto g4;
    1989                      .dwcfi  cfa_offset, 1
    1990                      .dwcfi  save_reg_to_mem, 91, -1
    1991              ;* T0    assigned to _uxReturn
    1992              $C$DW$166       .dwtag  DW_TAG_variable, DW_AT_name("uxReturn")
    1993                      .dwattr $C$DW$166, DW_AT_TI_symbol_name("_uxReturn")
    1994                      .dwattr $C$DW$166, DW_AT_type(*$C$DW$T$11)
    1995                      .dwattr $C$DW$166, DW_AT_location[DW_OP_reg12]
    1996              ;* AR0   assigned to _pxQueue
    1997              $C$DW$167       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    1998                      .dwattr $C$DW$167, DW_AT_TI_symbol_name("_pxQueue")
    1999                      .dwattr $C$DW$167, DW_AT_type(*$C$DW$T$105)
    2000                      .dwattr $C$DW$167, DW_AT_location[DW_OP_reg17]
    2001                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1023,column 2,is_stmt
    2002 00043c 46B3          bit(ST1, #ST1_INTM) = #1 ; |1023| 
    2003                                                      ; interrupts disabled ; |1023| 
    2004 00043e F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |1023| 
         000440 0001 
         000442 0000 
         000444 00!  
    2005 000445 20            nop
    2006 000446 20            nop
    2007 000447 20            nop
    2008                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1024,column 3,is_stmt
    2009 000448 A40D          T0 = *AR0(#28) ; |1024| 
         00044a 001C 
    2010                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1025,column 2,is_stmt
    2011 00044c A931          AR1 = *(#_usCriticalNesting) ; |1025| 
         00044e 0000 
         000450 00!  
    2012 000451 0409          if (AR1 == #0) goto $C$L41 ; |1025| 
         000453 13   
    2013                                                      ; branchcc occurs ; |1025| 
    2014              ;* 1025 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    2015              ;* 1025 -----------------------    if ( usCriticalNesting ) goto g4;
    2016 000454 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |1025| 
         000456 FFFF 
         000458 0000 
         00045a 00!  
    2017 00045b 20            nop
    2018 00045c 20            nop
    2019 00045d 20            nop
    2020 00045e A931          AR1 = *(#_usCriticalNesting) ; |1025| 
         000460 0000 
         000462 00!  
    2021 000463 6119          if (AR1 != #0) goto $C$L41 ; |1025| 
    2022                                                      ; branchcc occurs ; |1025| 
    2023              ;* 1025 -----------------------    _enable_interrupts();
    2024 000465 46B2          bit(ST1, #ST1_INTM) = #0 ; |1025| 
    2025 000467       $C$L41:    
    2026              ;**     -----------------------g4:
    2027              ;* 1027 -----------------------    return uxReturn;
    2028                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1027,column 2,is_stmt
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   43

    2029                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1028,column 1,is_stmt
    2030              $C$DW$168       .dwtag  DW_TAG_TI_branch
    2031                      .dwattr $C$DW$168, DW_AT_low_pc(0x00)
    2032                      .dwattr $C$DW$168, DW_AT_TI_return
    2033 000467 4804          return
    2034                                                      ; return occurs
    2035                      .dwattr $C$DW$164, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    2036                      .dwattr $C$DW$164, DW_AT_TI_end_line(0x404)
    2037                      .dwattr $C$DW$164, DW_AT_TI_end_column(0x01)
    2038                      .dwendentry
    2039                      .dwendtag $C$DW$164
    2040              
    2041 000469               .sect   ".text"
    2042                      .global _uxQueueMessagesWaitingFromISR
    2043              
    2044              $C$DW$169       .dwtag  DW_TAG_subprogram, DW_AT_name("uxQueueMessagesWaitingFromISR")
    2045                      .dwattr $C$DW$169, DW_AT_low_pc(_uxQueueMessagesWaitingFromISR)
    2046                      .dwattr $C$DW$169, DW_AT_high_pc(0x00)
    2047                      .dwattr $C$DW$169, DW_AT_TI_symbol_name("_uxQueueMessagesWaitingFromISR")
    2048                      .dwattr $C$DW$169, DW_AT_external
    2049                      .dwattr $C$DW$169, DW_AT_type(*$C$DW$T$11)
    2050                      .dwattr $C$DW$169, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2051                      .dwattr $C$DW$169, DW_AT_TI_begin_line(0x407)
    2052                      .dwattr $C$DW$169, DW_AT_TI_begin_column(0x18)
    2053                      .dwattr $C$DW$169, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    2054                      .dwattr $C$DW$169, DW_AT_decl_line(0x407)
    2055                      .dwattr $C$DW$169, DW_AT_decl_column(0x18)
    2056                      .dwattr $C$DW$169, DW_AT_TI_max_frame_size(0x01)
    2057                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1032,column 1,is_stmt,address _uxQueueMessagesWaitingF
    2058              
    2059                      .dwfde $C$DW$CIE, _uxQueueMessagesWaitingFromISR
    2060              $C$DW$170       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    2061                      .dwattr $C$DW$170, DW_AT_TI_symbol_name("_pxQueue")
    2062                      .dwattr $C$DW$170, DW_AT_type(*$C$DW$T$105)
    2063                      .dwattr $C$DW$170, DW_AT_location[DW_OP_reg17]
    2064              ;*******************************************************************************
    2065              ;* FUNCTION NAME: uxQueueMessagesWaitingFromISR                                *
    2066              ;*                                                                             *
    2067              ;*   Function Uses Regs : T0,AR0,XAR0,SP,M40,SATA,SATD,RDM,FRCT,SMUL           *
    2068              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    2069              ;*   Total Frame Size   : 1 word                                               *
    2070              ;*                        (1 return address/alignment)                         *
    2071              ;*   Min System Stack   : 1 word                                               *
    2072              ;*******************************************************************************
    2073              
    2074              ;*******************************************************************************
    2075              ;*                                                                             *
    2076              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    2077              ;*                                                                             *
    2078              ;*******************************************************************************
    2079 000469       _uxQueueMessagesWaitingFromISR:
    2080              ;* 1035 -----------------------    uxReturn = (*pxQueue).uxMessagesWaiting;
    2081              ;* 1037 -----------------------    return uxReturn;
    2082                      .dwcfi  cfa_offset, 1
    2083                      .dwcfi  save_reg_to_mem, 91, -1
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   44

    2084              ;* T0    assigned to _uxReturn
    2085              $C$DW$171       .dwtag  DW_TAG_variable, DW_AT_name("uxReturn")
    2086                      .dwattr $C$DW$171, DW_AT_TI_symbol_name("_uxReturn")
    2087                      .dwattr $C$DW$171, DW_AT_type(*$C$DW$T$11)
    2088                      .dwattr $C$DW$171, DW_AT_location[DW_OP_reg12]
    2089              ;* AR0   assigned to _pxQueue
    2090              $C$DW$172       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    2091                      .dwattr $C$DW$172, DW_AT_TI_symbol_name("_pxQueue")
    2092                      .dwattr $C$DW$172, DW_AT_type(*$C$DW$T$105)
    2093                      .dwattr $C$DW$172, DW_AT_location[DW_OP_reg17]
    2094                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1035,column 2,is_stmt
    2095 000469 A40D          T0 = *AR0(#28) ; |1035| 
         00046b 001C 
    2096                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1037,column 2,is_stmt
    2097                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1038,column 1,is_stmt
    2098              $C$DW$173       .dwtag  DW_TAG_TI_branch
    2099                      .dwattr $C$DW$173, DW_AT_low_pc(0x00)
    2100                      .dwattr $C$DW$173, DW_AT_TI_return
    2101 00046d 4804          return
    2102                                                      ; return occurs
    2103                      .dwattr $C$DW$169, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    2104                      .dwattr $C$DW$169, DW_AT_TI_end_line(0x40e)
    2105                      .dwattr $C$DW$169, DW_AT_TI_end_column(0x01)
    2106                      .dwendentry
    2107                      .dwendtag $C$DW$169
    2108              
    2109 00046f               .sect   ".text"
    2110                      .global _vQueueDelete
    2111              
    2112              $C$DW$174       .dwtag  DW_TAG_subprogram, DW_AT_name("vQueueDelete")
    2113                      .dwattr $C$DW$174, DW_AT_low_pc(_vQueueDelete)
    2114                      .dwattr $C$DW$174, DW_AT_high_pc(0x00)
    2115                      .dwattr $C$DW$174, DW_AT_TI_symbol_name("_vQueueDelete")
    2116                      .dwattr $C$DW$174, DW_AT_external
    2117                      .dwattr $C$DW$174, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2118                      .dwattr $C$DW$174, DW_AT_TI_begin_line(0x411)
    2119                      .dwattr $C$DW$174, DW_AT_TI_begin_column(0x06)
    2120                      .dwattr $C$DW$174, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    2121                      .dwattr $C$DW$174, DW_AT_decl_line(0x411)
    2122                      .dwattr $C$DW$174, DW_AT_decl_column(0x06)
    2123                      .dwattr $C$DW$174, DW_AT_TI_max_frame_size(0x02)
    2124                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1042,column 1,is_stmt,address _vQueueDelete
    2125              
    2126                      .dwfde $C$DW$CIE, _vQueueDelete
    2127              $C$DW$175       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    2128                      .dwattr $C$DW$175, DW_AT_TI_symbol_name("_pxQueue")
    2129                      .dwattr $C$DW$175, DW_AT_type(*$C$DW$T$82)
    2130                      .dwattr $C$DW$175, DW_AT_location[DW_OP_reg17]
    2131              ;*******************************************************************************
    2132              ;* FUNCTION NAME: vQueueDelete                                                 *
    2133              ;*                                                                             *
    2134              ;*   Function Uses Regs : AR0,XAR0,AR5,XAR5,SP,M40,SATA,SATD,RDM,FRCT,SMUL     *
    2135              ;*   Save On Entry Regs : AR5                                                  *
    2136              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    2137              ;*   Total Frame Size   : 2 words                                              *
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   45

    2138              ;*                        (1 return address/alignment)                         *
    2139              ;*                        (1 register save area)                               *
    2140              ;*   Min System Stack   : 2 words                                              *
    2141              ;*******************************************************************************
    2142              
    2143              ;*******************************************************************************
    2144              ;*                                                                             *
    2145              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    2146              ;*                                                                             *
    2147              ;*******************************************************************************
    2148 00046f       _vQueueDelete:
    2149              ;* 1045 -----------------------    vPortFree((void *)(*pxQueue).pcHead);
    2150              ;* 1046 -----------------------    vPortFree((void *)pxQueue);
    2151              ;**     -----------------------    return;
    2152                      .dwcfi  cfa_offset, 1
    2153                      .dwcfi  save_reg_to_mem, 91, -1
    2154 00046f 50D5          pshboth(XAR5)
    2155                      .dwcfi  cfa_offset, 2
    2156                      .dwcfi  save_reg_to_mem, 26, -2
    2157                      .dwcfi  cfa_offset, 2
    2158              ;* AR5   assigned to _pxQueue
    2159              $C$DW$176       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    2160                      .dwattr $C$DW$176, DW_AT_TI_symbol_name("_pxQueue")
    2161                      .dwattr $C$DW$176, DW_AT_type(*$C$DW$T$82)
    2162                      .dwattr $C$DW$176, DW_AT_location[DW_OP_reg27]
    2163 000471 EC01          XAR5 = mar(*AR0)
         000473 DE   
    2164                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1045,column 2,is_stmt
    2165 000474 EDA1          XAR0 = dbl(*AR5)
         000476 8F   
    2166              $C$DW$177       .dwtag  DW_TAG_TI_branch
    2167                      .dwattr $C$DW$177, DW_AT_low_pc(0x00)
    2168                      .dwattr $C$DW$177, DW_AT_name("_vPortFree")
    2169                      .dwattr $C$DW$177, DW_AT_TI_call
    2170 000477 6C00          call #_vPortFree ; |1045| 
         000479 0000!
    2171                                                      ; call occurs [#_vPortFree] ; |1045| 
    2172                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1046,column 2,is_stmt
    2173 00047b ECA1          XAR0 = mar(*AR5)
         00047d 8E   
    2174              $C$DW$178       .dwtag  DW_TAG_TI_branch
    2175                      .dwattr $C$DW$178, DW_AT_low_pc(0x00)
    2176                      .dwattr $C$DW$178, DW_AT_name("_vPortFree")
    2177                      .dwattr $C$DW$178, DW_AT_TI_call
    2178 00047e 6C00          call #_vPortFree ; |1046| 
         000480 0000!
    2179                                                      ; call occurs [#_vPortFree] ; |1046| 
    2180                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1047,column 1,is_stmt
    2181                      .dwcfi  cfa_offset, 2
    2182 000482 50D4          XAR5 = popboth()
    2183                      .dwcfi  restore_reg, 26
    2184                      .dwcfi  cfa_offset, 1
    2185              $C$DW$179       .dwtag  DW_TAG_TI_branch
    2186                      .dwattr $C$DW$179, DW_AT_low_pc(0x00)
    2187                      .dwattr $C$DW$179, DW_AT_TI_return
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   46

    2188 000484 4804          return
    2189                                                      ; return occurs
    2190                      .dwattr $C$DW$174, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    2191                      .dwattr $C$DW$174, DW_AT_TI_end_line(0x417)
    2192                      .dwattr $C$DW$174, DW_AT_TI_end_column(0x01)
    2193                      .dwendentry
    2194                      .dwendtag $C$DW$174
    2195              
    2196 000486               .sect   ".text"
    2197              
    2198              $C$DW$180       .dwtag  DW_TAG_subprogram, DW_AT_name("prvCopyDataToQueue")
    2199                      .dwattr $C$DW$180, DW_AT_low_pc(_prvCopyDataToQueue)
    2200                      .dwattr $C$DW$180, DW_AT_high_pc(0x00)
    2201                      .dwattr $C$DW$180, DW_AT_TI_symbol_name("_prvCopyDataToQueue")
    2202                      .dwattr $C$DW$180, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2203                      .dwattr $C$DW$180, DW_AT_TI_begin_line(0x41a)
    2204                      .dwattr $C$DW$180, DW_AT_TI_begin_column(0x0d)
    2205                      .dwattr $C$DW$180, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    2206                      .dwattr $C$DW$180, DW_AT_decl_line(0x41a)
    2207                      .dwattr $C$DW$180, DW_AT_decl_column(0x0d)
    2208                      .dwattr $C$DW$180, DW_AT_TI_max_frame_size(0x02)
    2209                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1051,column 1,is_stmt,address _prvCopyDataToQueue
    2210              
    2211                      .dwfde $C$DW$CIE, _prvCopyDataToQueue
    2212              $C$DW$181       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    2213                      .dwattr $C$DW$181, DW_AT_TI_symbol_name("_pxQueue")
    2214                      .dwattr $C$DW$181, DW_AT_type(*$C$DW$T$81)
    2215                      .dwattr $C$DW$181, DW_AT_location[DW_OP_reg17]
    2216              $C$DW$182       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvItemToQueue")
    2217                      .dwattr $C$DW$182, DW_AT_TI_symbol_name("_pvItemToQueue")
    2218                      .dwattr $C$DW$182, DW_AT_type(*$C$DW$T$55)
    2219                      .dwattr $C$DW$182, DW_AT_location[DW_OP_reg19]
    2220              $C$DW$183       .dwtag  DW_TAG_formal_parameter, DW_AT_name("xPosition")
    2221                      .dwattr $C$DW$183, DW_AT_TI_symbol_name("_xPosition")
    2222                      .dwattr $C$DW$183, DW_AT_type(*$C$DW$T$10)
    2223                      .dwattr $C$DW$183, DW_AT_location[DW_OP_reg12]
    2224              ;*******************************************************************************
    2225              ;* FUNCTION NAME: prvCopyDataToQueue                                           *
    2226              ;*                                                                             *
    2227              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,AR0,XAR0,AR1,AR2,XAR2,AR3,XAR3,   *
    2228              ;*                        AR5,XAR5,SP,CARRY,TC1,M40,SATA,SATD,RDM,FRCT,SMUL    *
    2229              ;*   Save On Entry Regs : AR5                                                  *
    2230              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    2231              ;*   Total Frame Size   : 2 words                                              *
    2232              ;*                        (1 return address/alignment)                         *
    2233              ;*                        (1 register save area)                               *
    2234              ;*   Min System Stack   : 2 words                                              *
    2235              ;*******************************************************************************
    2236              
    2237              ;*******************************************************************************
    2238              ;*                                                                             *
    2239              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    2240              ;*                                                                             *
    2241              ;*******************************************************************************
    2242 000486       _prvCopyDataToQueue:
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   47

    2243              ;* 1064 -----------------------    if ( !(*pxQueue).uxItemSize ) goto g7;
    2244                      .dwcfi  cfa_offset, 1
    2245                      .dwcfi  save_reg_to_mem, 91, -1
    2246 000486 50D5          pshboth(XAR5)
    2247                      .dwcfi  cfa_offset, 2
    2248                      .dwcfi  save_reg_to_mem, 26, -2
    2249                      .dwcfi  cfa_offset, 2
    2250              ;* T0    assigned to _xPosition
    2251              $C$DW$184       .dwtag  DW_TAG_variable, DW_AT_name("xPosition")
    2252                      .dwattr $C$DW$184, DW_AT_TI_symbol_name("_xPosition")
    2253                      .dwattr $C$DW$184, DW_AT_type(*$C$DW$T$10)
    2254                      .dwattr $C$DW$184, DW_AT_location[DW_OP_reg12]
    2255              ;* AR5   assigned to _pxQueue
    2256              $C$DW$185       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    2257                      .dwattr $C$DW$185, DW_AT_TI_symbol_name("_pxQueue")
    2258                      .dwattr $C$DW$185, DW_AT_type(*$C$DW$T$81)
    2259                      .dwattr $C$DW$185, DW_AT_location[DW_OP_reg27]
    2260 000488 EC01          XAR5 = mar(*AR0)
         00048a DE   
    2261                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1064,column 2,is_stmt
    2262 00048b AAAD          AR2 = *AR5(#30) ; |1064| 
         00048d 001E 
    2263 00048f 040A          if (AR2 == #0) goto $C$L43 ; |1064| 
         000491 73   
    2264                                                      ; branchcc occurs ; |1064| 
    2265              ;* 1065 -----------------------    if ( xPosition ) goto g5;
    2266                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1065,column 7,is_stmt
    2267 000492 0414          if (T0 != #0) goto $C$L42 ; |1065| 
         000494 34   
    2268                                                      ; branchcc occurs ; |1065| 
    2269              ;* 1067 -----------------------    memcpy((void *)(*pxQueue).pcWriteTo, pvItemToQueue, (unsigned long)(*pxQue
    2270              ;* 1068 -----------------------    (*pxQueue).pcWriteTo = (*pxQueue).pcWriteTo+(*pxQueue).uxItemSize;
    2271              ;* 1069 -----------------------    if ( (*pxQueue).pcWriteTo < (*pxQueue).pcTail ) goto g7;
    2272                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1067,column 3,is_stmt
    2273 000495 EDB9          XAR0 = dbl(*AR5(short(#4)))
         000497 8F   
    2274 000498 DFAD          AC0 = uns(*AR5(#30)) ; |1067| 
         00049a 0500 
         00049c 1E   
    2275              $C$DW$186       .dwtag  DW_TAG_TI_branch
    2276                      .dwattr $C$DW$186, DW_AT_low_pc(0x00)
    2277                      .dwattr $C$DW$186, DW_AT_name("_memcpy")
    2278                      .dwattr $C$DW$186, DW_AT_TI_call
    2279 00049d 6C00          call #_memcpy ; |1067| 
         00049f 0000!
    2280                                                      ; call occurs [#_memcpy] ; |1067| 
    2281                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1068,column 3,is_stmt
    2282 0004a1 EDB9          XAR3 = dbl(*AR5(short(#4)))
         0004a3 BF   
    2283 0004a4 DFAD          AC0 = uns(*AR5(#30)) ; |1068| 
         0004a6 0500 
         0004a8 1E   
    2284 0004a9 900A          XAR2 = AC0
    2285              
    2286 0004ab 8EB9          dbl(*AR5(short(#4))) = XAR3
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   48

         0004ad BB10 
         0004af B5A1 
    2287              ||      mar(XAR3 + XAR2) ; |1068| 
    2288              
    2289                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1069,column 3,is_stmt
    2290 0004b1 EDB5          XAR3 = dbl(*AR5(short(#2)))
         0004b3 BF   
    2291 0004b4 90B0          AC0 = XAR3
    2292 0004b6 EDB9          XAR3 = dbl(*AR5(short(#4)))
         0004b8 BF   
    2293 0004b9 90B1          AC1 = XAR3
    2294 0004bb 1214          TC1 = uns(AC1 < AC0) ; |1069| 
         0004bd 04   
    2295 0004be 0464          if (TC1) goto $C$L43 ; |1069| 
         0004c0 44   
    2296                                                      ; branchcc occurs ; |1069| 
    2297              ;* 1071 -----------------------    (*pxQueue).pcWriteTo = (*pxQueue).pcHead;
    2298              ;* 1071 -----------------------    goto g7;
    2299                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1071,column 4,is_stmt
    2300 0004c1 EDA1          XAR3 = dbl(*AR5)
         0004c3 BF   
    2301 0004c4 EBB9          dbl(*AR5(short(#4))) = XAR3
         0004c6 B5   
    2302 0004c7 4A3C          goto $C$L43 ; |1071| 
    2303                                                      ; branch occurs ; |1071| 
    2304 0004c9       $C$L42:    
    2305              ;**     -----------------------g5:
    2306              ;* 1076 -----------------------    memcpy((void *)(*pxQueue).pcReadFrom, pvItemToQueue, (unsigned long)(*pxQu
    2307              ;* 1077 -----------------------    (*pxQueue).pcReadFrom = (*pxQueue).pcReadFrom-(long)(*pxQueue).uxItemSize;
    2308              ;* 1078 -----------------------    if ( (*pxQueue).pcReadFrom >= (*pxQueue).pcHead ) goto g7;
    2309                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1076,column 3,is_stmt
    2310 0004c9 EDBD          XAR0 = dbl(*AR5(short(#6)))
         0004cb 8F   
    2311 0004cc DFAD          AC0 = uns(*AR5(#30)) ; |1076| 
         0004ce 0500 
         0004d0 1E   
    2312              $C$DW$187       .dwtag  DW_TAG_TI_branch
    2313                      .dwattr $C$DW$187, DW_AT_low_pc(0x00)
    2314                      .dwattr $C$DW$187, DW_AT_name("_memcpy")
    2315                      .dwattr $C$DW$187, DW_AT_TI_call
    2316 0004d1 6C00          call #_memcpy ; |1076| 
         0004d3 0000!
    2317                                                      ; call occurs [#_memcpy] ; |1076| 
    2318                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1077,column 3,is_stmt
    2319 0004d5 EDBD          XAR3 = dbl(*AR5(short(#6)))
         0004d7 BF   
    2320 0004d8 DFAD          AC0 = uns(*AR5(#30)) ; |1077| 
         0004da 0500 
         0004dc 1E   
    2321 0004dd 900A          XAR2 = AC0
    2322              
    2323 0004df 8EBD          dbl(*AR5(short(#6))) = XAR3
         0004e1 BB12 
         0004e3 B5A1 
    2324              ||      mar(XAR3 - XAR2) ; |1077| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   49

    2325              
    2326                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1078,column 3,is_stmt
    2327 0004e5 EDA1          XAR3 = dbl(*AR5)
         0004e7 BF   
    2328 0004e8 90B0          AC0 = XAR3
    2329 0004ea EDBD          XAR3 = dbl(*AR5(short(#6)))
         0004ec BF   
    2330 0004ed 90B1          AC1 = XAR3
    2331 0004ef 1218          TC1 = uns(AC1 >= AC0) ; |1078| 
         0004f1 04   
    2332 0004f2 0464          if (TC1) goto $C$L43 ; |1078| 
         0004f4 10   
    2333                                                      ; branchcc occurs ; |1078| 
    2334              ;* 1080 -----------------------    (*pxQueue).pcReadFrom = (*pxQueue).pcTail-(long)(*pxQueue).uxItemSize;
    2335                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1080,column 4,is_stmt
    2336 0004f5 EDB5          XAR3 = dbl(*AR5(short(#2)))
         0004f7 BF   
    2337 0004f8 DFAD          AC0 = uns(*AR5(#30)) ; |1080| 
         0004fa 0500 
         0004fc 1E   
    2338 0004fd 900A          XAR2 = AC0
    2339              
    2340 0004ff 8EBD          dbl(*AR5(short(#6))) = XAR3
         000501 BB12 
         000503 B5A1 
    2341              ||      mar(XAR3 - XAR2) ; |1080| 
    2342              
    2343 000505       $C$L43:    
    2344              ;**     -----------------------g7:
    2345              ;* 1084 -----------------------    ++(*pxQueue).uxMessagesWaiting;
    2346              ;**     -----------------------    return;
    2347                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1084,column 2,is_stmt
    2348 000505 F7AD          *AR5(#28) = *AR5(#28) + #1 ; |1084| 
         000507 0001 
         000509 001C 
    2349                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1085,column 1,is_stmt
    2350                      .dwcfi  cfa_offset, 2
    2351 00050b 50D4          XAR5 = popboth()
    2352                      .dwcfi  restore_reg, 26
    2353                      .dwcfi  cfa_offset, 1
    2354              $C$DW$188       .dwtag  DW_TAG_TI_branch
    2355                      .dwattr $C$DW$188, DW_AT_low_pc(0x00)
    2356                      .dwattr $C$DW$188, DW_AT_TI_return
    2357 00050d 4804          return
    2358                                                      ; return occurs
    2359                      .dwattr $C$DW$180, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    2360                      .dwattr $C$DW$180, DW_AT_TI_end_line(0x43d)
    2361                      .dwattr $C$DW$180, DW_AT_TI_end_column(0x01)
    2362                      .dwendentry
    2363                      .dwendtag $C$DW$180
    2364              
    2365 00050f               .sect   ".text"
    2366              
    2367              $C$DW$189       .dwtag  DW_TAG_subprogram, DW_AT_name("prvCopyDataFromQueue")
    2368                      .dwattr $C$DW$189, DW_AT_low_pc(_prvCopyDataFromQueue)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   50

    2369                      .dwattr $C$DW$189, DW_AT_high_pc(0x00)
    2370                      .dwattr $C$DW$189, DW_AT_TI_symbol_name("_prvCopyDataFromQueue")
    2371                      .dwattr $C$DW$189, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2372                      .dwattr $C$DW$189, DW_AT_TI_begin_line(0x440)
    2373                      .dwattr $C$DW$189, DW_AT_TI_begin_column(0x0d)
    2374                      .dwattr $C$DW$189, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    2375                      .dwattr $C$DW$189, DW_AT_decl_line(0x440)
    2376                      .dwattr $C$DW$189, DW_AT_decl_column(0x0d)
    2377                      .dwattr $C$DW$189, DW_AT_TI_max_frame_size(0x02)
    2378                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1089,column 1,is_stmt,address _prvCopyDataFromQueue
    2379              
    2380                      .dwfde $C$DW$CIE, _prvCopyDataFromQueue
    2381              $C$DW$190       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    2382                      .dwattr $C$DW$190, DW_AT_TI_symbol_name("_pxQueue")
    2383                      .dwattr $C$DW$190, DW_AT_type(*$C$DW$T$87)
    2384                      .dwattr $C$DW$190, DW_AT_location[DW_OP_reg17]
    2385              $C$DW$191       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvBuffer")
    2386                      .dwattr $C$DW$191, DW_AT_TI_symbol_name("_pvBuffer")
    2387                      .dwattr $C$DW$191, DW_AT_type(*$C$DW$T$55)
    2388                      .dwattr $C$DW$191, DW_AT_location[DW_OP_reg19]
    2389              ;*******************************************************************************
    2390              ;* FUNCTION NAME: prvCopyDataFromQueue                                         *
    2391              ;*                                                                             *
    2392              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,AR0,XAR0,AR1,XAR1,AR2,XAR2,AR3,XAR3, *
    2393              ;*                        AR4,XAR4,SP,TC1,M40,SATA,SATD,RDM,FRCT,SMUL          *
    2394              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    2395              ;*   Total Frame Size   : 2 words                                              *
    2396              ;*                        (2 return address/alignment)                         *
    2397              ;*   Min System Stack   : 1 word                                               *
    2398              ;*******************************************************************************
    2399              
    2400              ;*******************************************************************************
    2401              ;*                                                                             *
    2402              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    2403              ;*                                                                             *
    2404              ;*******************************************************************************
    2405 00050f       _prvCopyDataFromQueue:
    2406              ;* 1090 -----------------------    if ( (*pxQueue).pcHead == NULL ) goto g5;
    2407                      .dwcfi  cfa_offset, 1
    2408                      .dwcfi  save_reg_to_mem, 91, -1
    2409 00050f 4EFF          SP = SP + #-1
    2410                      .dwcfi  cfa_offset, 2
    2411              ;* AR4   assigned to _pvBuffer
    2412              $C$DW$192       .dwtag  DW_TAG_variable, DW_AT_name("pvBuffer")
    2413                      .dwattr $C$DW$192, DW_AT_TI_symbol_name("_pvBuffer")
    2414                      .dwattr $C$DW$192, DW_AT_type(*$C$DW$T$55)
    2415                      .dwattr $C$DW$192, DW_AT_location[DW_OP_reg25]
    2416              ;* AR0   assigned to _pxQueue
    2417              $C$DW$193       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    2418                      .dwattr $C$DW$193, DW_AT_TI_symbol_name("_pxQueue")
    2419                      .dwattr $C$DW$193, DW_AT_type(*$C$DW$T$87)
    2420                      .dwattr $C$DW$193, DW_AT_location[DW_OP_reg17]
    2421 000511 EC21          XAR4 = mar(*AR1)
         000513 CE   
    2422                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1090,column 2,is_stmt
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   51

    2423 000514 ED01          XAR3 = dbl(*AR0)
         000516 BF   
    2424 000517 90B0          AC0 = XAR3
    2425 000519 0400          if (AC0 == #0) goto $C$L45 ; |1090| 
         00051b 34   
    2426                                                      ; branchcc occurs ; |1090| 
    2427              ;* 1092 -----------------------    (*pxQueue).pcReadFrom = (*pxQueue).pcReadFrom+(*pxQueue).uxItemSize;
    2428              ;* 1093 -----------------------    if ( (*pxQueue).pcReadFrom < (*pxQueue).pcTail ) goto g4;
    2429                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1092,column 3,is_stmt
    2430 00051c ED1D          XAR3 = dbl(*AR0(short(#6)))
         00051e BF   
    2431 00051f DF0D          AC0 = uns(*AR0(#30)) ; |1092| 
         000521 0500 
         000523 1E   
    2432 000524 900A          XAR2 = AC0
    2433              
    2434 000526 8E1D          dbl(*AR0(short(#6))) = XAR3
         000528 BB10 
         00052a B5A1 
    2435              ||      mar(XAR3 + XAR2) ; |1092| 
    2436              
    2437                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1093,column 3,is_stmt
    2438 00052c ED15          XAR3 = dbl(*AR0(short(#2)))
         00052e BF   
    2439 00052f 90B0          AC0 = XAR3
    2440 000531 ED1D          XAR3 = dbl(*AR0(short(#6)))
         000533 BF   
    2441 000534 90B1          AC1 = XAR3
    2442 000536 1214          TC1 = uns(AC1 < AC0) ; |1093| 
         000538 04   
    2443 000539 6364          if (TC1) goto $C$L44 ; |1093| 
    2444                                                      ; branchcc occurs ; |1093| 
    2445              ;* 1095 -----------------------    (*pxQueue).pcReadFrom = (*pxQueue).pcHead;
    2446                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1095,column 4,is_stmt
    2447 00053b ED01          XAR3 = dbl(*AR0)
         00053d BF   
    2448 00053e EB1D          dbl(*AR0(short(#6))) = XAR3
         000540 B5   
    2449 000541       $C$L44:    
    2450              ;**     -----------------------g4:
    2451              ;* 1097 -----------------------    memcpy(pvBuffer, (const void *)(*pxQueue).pcReadFrom, (unsigned long)(*pxQ
    2452              ;**     -----------------------g5:
    2453              ;**     -----------------------    return;
    2454                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1097,column 3,is_stmt
    2455 000541 ED1D          XAR1 = dbl(*AR0(short(#6)))
         000543 9F   
    2456 000544 DF0D          AC0 = uns(*AR0(#30)) ; |1097| 
         000546 0500 
         000548 1E   
    2457 000549 EC81          XAR0 = mar(*AR4)
         00054b 8E   
    2458              $C$DW$194       .dwtag  DW_TAG_TI_branch
    2459                      .dwattr $C$DW$194, DW_AT_low_pc(0x00)
    2460                      .dwattr $C$DW$194, DW_AT_name("_memcpy")
    2461                      .dwattr $C$DW$194, DW_AT_TI_call
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   52

    2462 00054c 6C00          call #_memcpy ; |1097| 
         00054e 0000!
    2463                                                      ; call occurs [#_memcpy] ; |1097| 
    2464 000550       $C$L45:    
    2465                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1099,column 1,is_stmt
    2466 000550 4E01          SP = SP + #1
    2467                      .dwcfi  cfa_offset, 1
    2468              $C$DW$195       .dwtag  DW_TAG_TI_branch
    2469                      .dwattr $C$DW$195, DW_AT_low_pc(0x00)
    2470                      .dwattr $C$DW$195, DW_AT_TI_return
    2471 000552 4804          return
    2472                                                      ; return occurs
    2473                      .dwattr $C$DW$189, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    2474                      .dwattr $C$DW$189, DW_AT_TI_end_line(0x44b)
    2475                      .dwattr $C$DW$189, DW_AT_TI_end_column(0x01)
    2476                      .dwendentry
    2477                      .dwendtag $C$DW$189
    2478              
    2479 000554               .sect   ".text"
    2480              
    2481              $C$DW$196       .dwtag  DW_TAG_subprogram, DW_AT_name("prvUnlockQueue")
    2482                      .dwattr $C$DW$196, DW_AT_low_pc(_prvUnlockQueue)
    2483                      .dwattr $C$DW$196, DW_AT_high_pc(0x00)
    2484                      .dwattr $C$DW$196, DW_AT_TI_symbol_name("_prvUnlockQueue")
    2485                      .dwattr $C$DW$196, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2486                      .dwattr $C$DW$196, DW_AT_TI_begin_line(0x44e)
    2487                      .dwattr $C$DW$196, DW_AT_TI_begin_column(0x0d)
    2488                      .dwattr $C$DW$196, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    2489                      .dwattr $C$DW$196, DW_AT_decl_line(0x44e)
    2490                      .dwattr $C$DW$196, DW_AT_decl_column(0x0d)
    2491                      .dwattr $C$DW$196, DW_AT_TI_max_frame_size(0x02)
    2492                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1103,column 1,is_stmt,address _prvUnlockQueue
    2493              
    2494                      .dwfde $C$DW$CIE, _prvUnlockQueue
    2495              $C$DW$197       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    2496                      .dwattr $C$DW$197, DW_AT_TI_symbol_name("_pxQueue")
    2497                      .dwattr $C$DW$197, DW_AT_type(*$C$DW$T$82)
    2498                      .dwattr $C$DW$197, DW_AT_location[DW_OP_reg17]
    2499              ;*******************************************************************************
    2500              ;* FUNCTION NAME: prvUnlockQueue                                               *
    2501              ;*                                                                             *
    2502              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,AR5,XAR5,SP,CARRY,M40,SATA,SATD,RDM, *
    2503              ;*                        FRCT,SMUL,INTM                                       *
    2504              ;*   Save On Entry Regs : AR5                                                  *
    2505              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    2506              ;*   Total Frame Size   : 2 words                                              *
    2507              ;*                        (1 return address/alignment)                         *
    2508              ;*                        (1 register save area)                               *
    2509              ;*   Min System Stack   : 2 words                                              *
    2510              ;*******************************************************************************
    2511              
    2512              ;*******************************************************************************
    2513              ;*                                                                             *
    2514              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    2515              ;*                                                                             *
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   53

    2516              ;*******************************************************************************
    2517 000554       _prvUnlockQueue:
    2518              ;* 1110 -----------------------    _disable_interrupts();
    2519              ;* 1110 -----------------------    usCriticalNesting = usCriticalNesting+1u;
    2520              ;* 1113 -----------------------    if ( (*pxQueue).xTxLock <= 0 ) goto g6;
    2521                      .dwcfi  cfa_offset, 1
    2522                      .dwcfi  save_reg_to_mem, 91, -1
    2523 000554 50D5          pshboth(XAR5)
    2524                      .dwcfi  cfa_offset, 2
    2525                      .dwcfi  save_reg_to_mem, 26, -2
    2526                      .dwcfi  cfa_offset, 2
    2527              ;* AR5   assigned to _pxQueue
    2528              $C$DW$198       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    2529                      .dwattr $C$DW$198, DW_AT_TI_symbol_name("_pxQueue")
    2530                      .dwattr $C$DW$198, DW_AT_type(*$C$DW$T$82)
    2531                      .dwattr $C$DW$198, DW_AT_location[DW_OP_reg27]
    2532 000556 EC01          XAR5 = mar(*AR0)
         000558 DE   
    2533                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1110,column 2,is_stmt
    2534 000559 46B3          bit(ST1, #ST1_INTM) = #1 ; |1110| 
    2535                                                      ; interrupts disabled ; |1110| 
    2536 00055b F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |1110| 
         00055d 0001 
         00055f 0000 
         000561 00!  
    2537                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1113,column 10,is_stmt
    2538 000562 A9AD          AR1 = *AR5(#32) ; |1113| 
         000564 0020 
    2539 000566 0439          if (AR1 <= #0) goto $C$L48 ; |1113| 
         000568 24   
    2540                                                      ; branchcc occurs ; |1113| 
    2541 000569       $C$L46:    
    2542 000569       $C$DW$L$_prvUnlockQueue$2$B:
    2543              ;**     -----------------------g2:
    2544              ;* 1117 -----------------------    if ( !(*pxQueue).xTasksWaitingToReceive.uxNumberOfItems ) goto g6;
    2545                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1117,column 4,is_stmt
    2546 000569 A9AD          AR1 = *AR5(#18) ; |1117| 
         00056b 0012 
    2547 00056d 0409          if (AR1 == #0) goto $C$L48 ; |1117| 
         00056f 1D   
    2548                                                      ; branchcc occurs ; |1117| 
    2549 000570       $C$DW$L$_prvUnlockQueue$2$E:
    2550 000570       $C$DW$L$_prvUnlockQueue$3$B:
    2551              ;* 1121 -----------------------    if ( !xTaskRemoveFromEventList((struct _xLIST *)pxQueue+18L) ) goto g5;
    2552                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1121,column 5,is_stmt
    2553 000570 ECA1          XAR0 = mar(*AR5)
         000572 8E   
    2554 000573 1412          mar(AR0 + #18) ; |1121| 
         000575 84   
    2555              $C$DW$199       .dwtag  DW_TAG_TI_branch
    2556                      .dwattr $C$DW$199, DW_AT_low_pc(0x00)
    2557                      .dwattr $C$DW$199, DW_AT_name("_xTaskRemoveFromEventList")
    2558                      .dwattr $C$DW$199, DW_AT_TI_call
    2559 000576 6C00          call #_xTaskRemoveFromEventList ; |1121| 
         000578 0000!
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   54

    2560                                                      ; call occurs [#_xTaskRemoveFromEventList] ; |1121| 
    2561 00057a 6204          if (T0 == #0) goto $C$L47 ; |1121| 
    2562                                                      ; branchcc occurs ; |1121| 
    2563 00057c       $C$DW$L$_prvUnlockQueue$3$E:
    2564 00057c       $C$DW$L$_prvUnlockQueue$4$B:
    2565              ;* 1125 -----------------------    vTaskMissedYield();
    2566                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1125,column 6,is_stmt
    2567              $C$DW$200       .dwtag  DW_TAG_TI_branch
    2568                      .dwattr $C$DW$200, DW_AT_low_pc(0x00)
    2569                      .dwattr $C$DW$200, DW_AT_name("_vTaskMissedYield")
    2570                      .dwattr $C$DW$200, DW_AT_TI_call
    2571 00057c 6C00          call #_vTaskMissedYield ; |1125| 
         00057e 0000!
    2572                                                      ; call occurs [#_vTaskMissedYield] ; |1125| 
    2573 000580       $C$DW$L$_prvUnlockQueue$4$E:
    2574 000580       $C$L47:    
    2575 000580       $C$DW$L$_prvUnlockQueue$5$B:
    2576              ;**     -----------------------g5:
    2577              ;* 1128 -----------------------    (*pxQueue).xTxLock = (*pxQueue).xTxLock-1;
    2578              ;* 1113 -----------------------    if ( (*pxQueue).xTxLock > 0 ) goto g2;
    2579                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1128,column 5,is_stmt
    2580 000580 F7AD          *AR5(#32) = *AR5(#32) - #1 ; |1128| 
         000582 FFFF 
         000584 0020 
    2581                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1113,column 10,is_stmt
    2582 000586 A9AD          AR1 = *AR5(#32) ; |1113| 
         000588 0020 
    2583 00058a 0449          if (AR1 > #0) goto $C$L46 ; |1113| 
         00058c DC   
    2584                                                      ; branchcc occurs ; |1113| 
    2585 00058d       $C$DW$L$_prvUnlockQueue$5$E:
    2586 00058d       $C$L48:    
    2587              ;**     -----------------------g6:
    2588              ;* 1136 -----------------------    (*pxQueue).xTxLock = (-1);
    2589              ;* 1138 -----------------------    if ( !usCriticalNesting ) goto g9;
    2590                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1136,column 3,is_stmt
    2591 00058d E6AD          *AR5(#32) = #-1 ; |1136| 
         00058f FF00 
         000591 20   
    2592                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1138,column 2,is_stmt
    2593 000592 A931          AR1 = *(#_usCriticalNesting) ; |1138| 
         000594 0000 
         000596 00!  
    2594 000597 0409          if (AR1 == #0) goto $C$L49 ; |1138| 
         000599 13   
    2595                                                      ; branchcc occurs ; |1138| 
    2596              ;* 1138 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    2597              ;* 1138 -----------------------    if ( usCriticalNesting ) goto g9;
    2598 00059a F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |1138| 
         00059c FFFF 
         00059e 0000 
         0005a0 00!  
    2599 0005a1 20            nop
    2600 0005a2 20            nop
    2601 0005a3 20            nop
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   55

    2602 0005a4 A931          AR1 = *(#_usCriticalNesting) ; |1138| 
         0005a6 0000 
         0005a8 00!  
    2603 0005a9 6119          if (AR1 != #0) goto $C$L49 ; |1138| 
    2604                                                      ; branchcc occurs ; |1138| 
    2605              ;* 1138 -----------------------    _enable_interrupts();
    2606 0005ab 46B2          bit(ST1, #ST1_INTM) = #0 ; |1138| 
    2607 0005ad       $C$L49:    
    2608              ;**     -----------------------g9:
    2609              ;* 1141 -----------------------    _disable_interrupts();
    2610              ;* 1141 -----------------------    usCriticalNesting = usCriticalNesting+1u;
    2611              ;* 1143 -----------------------    if ( (*pxQueue).xRxLock <= 0 ) goto g14;
    2612                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1141,column 2,is_stmt
    2613 0005ad 46B3          bit(ST1, #ST1_INTM) = #1 ; |1141| 
    2614                                                      ; interrupts disabled ; |1141| 
    2615 0005af F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |1141| 
         0005b1 0001 
         0005b3 0000 
         0005b5 00!  
    2616                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1143,column 10,is_stmt
    2617 0005b6 A9AD          AR1 = *AR5(#31) ; |1143| 
         0005b8 001F 
    2618 0005ba 0439          if (AR1 <= #0) goto $C$L52 ; |1143| 
         0005bc 24   
    2619                                                      ; branchcc occurs ; |1143| 
    2620 0005bd       $C$L50:    
    2621 0005bd       $C$DW$L$_prvUnlockQueue$10$B:
    2622              ;**     -----------------------g10:
    2623              ;* 1145 -----------------------    if ( !(*pxQueue).xTasksWaitingToSend.uxNumberOfItems ) goto g14;
    2624                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1145,column 4,is_stmt
    2625 0005bd A9AD          AR1 = *AR5(#8) ; |1145| 
         0005bf 0008 
    2626 0005c1 0409          if (AR1 == #0) goto $C$L52 ; |1145| 
         0005c3 1D   
    2627                                                      ; branchcc occurs ; |1145| 
    2628 0005c4       $C$DW$L$_prvUnlockQueue$10$E:
    2629 0005c4       $C$DW$L$_prvUnlockQueue$11$B:
    2630              ;* 1147 -----------------------    if ( !xTaskRemoveFromEventList((struct _xLIST *)pxQueue+8L) ) goto g13;
    2631                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1147,column 5,is_stmt
    2632 0005c4 ECA1          XAR0 = mar(*AR5)
         0005c6 8E   
    2633 0005c7 1408          mar(AR0 + #8) ; |1147| 
         0005c9 84   
    2634              $C$DW$201       .dwtag  DW_TAG_TI_branch
    2635                      .dwattr $C$DW$201, DW_AT_low_pc(0x00)
    2636                      .dwattr $C$DW$201, DW_AT_name("_xTaskRemoveFromEventList")
    2637                      .dwattr $C$DW$201, DW_AT_TI_call
    2638 0005ca 6C00          call #_xTaskRemoveFromEventList ; |1147| 
         0005cc 0000!
    2639                                                      ; call occurs [#_xTaskRemoveFromEventList] ; |1147| 
    2640 0005ce 6204          if (T0 == #0) goto $C$L51 ; |1147| 
    2641                                                      ; branchcc occurs ; |1147| 
    2642 0005d0       $C$DW$L$_prvUnlockQueue$11$E:
    2643 0005d0       $C$DW$L$_prvUnlockQueue$12$B:
    2644              ;* 1149 -----------------------    vTaskMissedYield();
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   56

    2645                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1149,column 6,is_stmt
    2646              $C$DW$202       .dwtag  DW_TAG_TI_branch
    2647                      .dwattr $C$DW$202, DW_AT_low_pc(0x00)
    2648                      .dwattr $C$DW$202, DW_AT_name("_vTaskMissedYield")
    2649                      .dwattr $C$DW$202, DW_AT_TI_call
    2650 0005d0 6C00          call #_vTaskMissedYield ; |1149| 
         0005d2 0000!
    2651                                                      ; call occurs [#_vTaskMissedYield] ; |1149| 
    2652 0005d4       $C$DW$L$_prvUnlockQueue$12$E:
    2653 0005d4       $C$L51:    
    2654 0005d4       $C$DW$L$_prvUnlockQueue$13$B:
    2655              ;**     -----------------------g13:
    2656              ;* 1152 -----------------------    (*pxQueue).xRxLock = (*pxQueue).xRxLock-1;
    2657              ;* 1143 -----------------------    if ( (*pxQueue).xRxLock > 0 ) goto g10;
    2658                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1152,column 5,is_stmt
    2659 0005d4 F7AD          *AR5(#31) = *AR5(#31) - #1 ; |1152| 
         0005d6 FFFF 
         0005d8 001F 
    2660                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1143,column 10,is_stmt
    2661 0005da A9AD          AR1 = *AR5(#31) ; |1143| 
         0005dc 001F 
    2662 0005de 0449          if (AR1 > #0) goto $C$L50 ; |1143| 
         0005e0 DC   
    2663                                                      ; branchcc occurs ; |1143| 
    2664 0005e1       $C$DW$L$_prvUnlockQueue$13$E:
    2665 0005e1       $C$L52:    
    2666              ;**     -----------------------g14:
    2667              ;* 1160 -----------------------    (*pxQueue).xRxLock = (-1);
    2668              ;* 1162 -----------------------    if ( !usCriticalNesting ) goto g17;
    2669                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1160,column 3,is_stmt
    2670 0005e1 E6AD          *AR5(#31) = #-1 ; |1160| 
         0005e3 FF00 
         0005e5 1F   
    2671                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1162,column 2,is_stmt
    2672 0005e6 A931          AR1 = *(#_usCriticalNesting) ; |1162| 
         0005e8 0000 
         0005ea 00!  
    2673 0005eb 0409          if (AR1 == #0) goto $C$L53 ; |1162| 
         0005ed 13   
    2674                                                      ; branchcc occurs ; |1162| 
    2675              ;* 1162 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    2676              ;* 1162 -----------------------    if ( usCriticalNesting ) goto g17;
    2677 0005ee F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |1162| 
         0005f0 FFFF 
         0005f2 0000 
         0005f4 00!  
    2678 0005f5 20            nop
    2679 0005f6 20            nop
    2680 0005f7 20            nop
    2681 0005f8 A931          AR1 = *(#_usCriticalNesting) ; |1162| 
         0005fa 0000 
         0005fc 00!  
    2682 0005fd 6119          if (AR1 != #0) goto $C$L53 ; |1162| 
    2683                                                      ; branchcc occurs ; |1162| 
    2684              ;* 1162 -----------------------    _enable_interrupts();
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   57

    2685              ;**     -----------------------g17:
    2686              ;**     -----------------------    return;
    2687 0005ff 46B2          bit(ST1, #ST1_INTM) = #0 ; |1162| 
    2688 000601       $C$L53:    
    2689                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1163,column 1,is_stmt
    2690                      .dwcfi  cfa_offset, 2
    2691 000601 50D4          XAR5 = popboth()
    2692                      .dwcfi  restore_reg, 26
    2693                      .dwcfi  cfa_offset, 1
    2694              $C$DW$203       .dwtag  DW_TAG_TI_branch
    2695                      .dwattr $C$DW$203, DW_AT_low_pc(0x00)
    2696                      .dwattr $C$DW$203, DW_AT_TI_return
    2697 000603 4804          return
    2698                                                      ; return occurs
    2699              
    2700              $C$DW$204       .dwtag  DW_TAG_TI_loop
    2701                      .dwattr $C$DW$204, DW_AT_name("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\Debug\queue.asm:$C$L50:
    2702                      .dwattr $C$DW$204, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2703                      .dwattr $C$DW$204, DW_AT_TI_begin_line(0x477)
    2704                      .dwattr $C$DW$204, DW_AT_TI_end_line(0x486)
    2705              $C$DW$205       .dwtag  DW_TAG_TI_loop_range
    2706                      .dwattr $C$DW$205, DW_AT_low_pc($C$DW$L$_prvUnlockQueue$10$B)
    2707                      .dwattr $C$DW$205, DW_AT_high_pc($C$DW$L$_prvUnlockQueue$10$E)
    2708              $C$DW$206       .dwtag  DW_TAG_TI_loop_range
    2709                      .dwattr $C$DW$206, DW_AT_low_pc($C$DW$L$_prvUnlockQueue$11$B)
    2710                      .dwattr $C$DW$206, DW_AT_high_pc($C$DW$L$_prvUnlockQueue$11$E)
    2711              $C$DW$207       .dwtag  DW_TAG_TI_loop_range
    2712                      .dwattr $C$DW$207, DW_AT_low_pc($C$DW$L$_prvUnlockQueue$12$B)
    2713                      .dwattr $C$DW$207, DW_AT_high_pc($C$DW$L$_prvUnlockQueue$12$E)
    2714              $C$DW$208       .dwtag  DW_TAG_TI_loop_range
    2715                      .dwattr $C$DW$208, DW_AT_low_pc($C$DW$L$_prvUnlockQueue$13$B)
    2716                      .dwattr $C$DW$208, DW_AT_high_pc($C$DW$L$_prvUnlockQueue$13$E)
    2717                      .dwendtag $C$DW$204
    2718              
    2719              
    2720              $C$DW$209       .dwtag  DW_TAG_TI_loop
    2721                      .dwattr $C$DW$209, DW_AT_name("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\Debug\queue.asm:$C$L46:
    2722                      .dwattr $C$DW$209, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2723                      .dwattr $C$DW$209, DW_AT_TI_begin_line(0x459)
    2724                      .dwattr $C$DW$209, DW_AT_TI_end_line(0x46e)
    2725              $C$DW$210       .dwtag  DW_TAG_TI_loop_range
    2726                      .dwattr $C$DW$210, DW_AT_low_pc($C$DW$L$_prvUnlockQueue$2$B)
    2727                      .dwattr $C$DW$210, DW_AT_high_pc($C$DW$L$_prvUnlockQueue$2$E)
    2728              $C$DW$211       .dwtag  DW_TAG_TI_loop_range
    2729                      .dwattr $C$DW$211, DW_AT_low_pc($C$DW$L$_prvUnlockQueue$3$B)
    2730                      .dwattr $C$DW$211, DW_AT_high_pc($C$DW$L$_prvUnlockQueue$3$E)
    2731              $C$DW$212       .dwtag  DW_TAG_TI_loop_range
    2732                      .dwattr $C$DW$212, DW_AT_low_pc($C$DW$L$_prvUnlockQueue$4$B)
    2733                      .dwattr $C$DW$212, DW_AT_high_pc($C$DW$L$_prvUnlockQueue$4$E)
    2734              $C$DW$213       .dwtag  DW_TAG_TI_loop_range
    2735                      .dwattr $C$DW$213, DW_AT_low_pc($C$DW$L$_prvUnlockQueue$5$B)
    2736                      .dwattr $C$DW$213, DW_AT_high_pc($C$DW$L$_prvUnlockQueue$5$E)
    2737                      .dwendtag $C$DW$209
    2738              
    2739                      .dwattr $C$DW$196, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   58

    2740                      .dwattr $C$DW$196, DW_AT_TI_end_line(0x48b)
    2741                      .dwattr $C$DW$196, DW_AT_TI_end_column(0x01)
    2742                      .dwendentry
    2743                      .dwendtag $C$DW$196
    2744              
    2745 000605               .sect   ".text"
    2746              
    2747              $C$DW$214       .dwtag  DW_TAG_subprogram, DW_AT_name("prvIsQueueEmpty")
    2748                      .dwattr $C$DW$214, DW_AT_low_pc(_prvIsQueueEmpty)
    2749                      .dwattr $C$DW$214, DW_AT_high_pc(0x00)
    2750                      .dwattr $C$DW$214, DW_AT_TI_symbol_name("_prvIsQueueEmpty")
    2751                      .dwattr $C$DW$214, DW_AT_type(*$C$DW$T$10)
    2752                      .dwattr $C$DW$214, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2753                      .dwattr $C$DW$214, DW_AT_TI_begin_line(0x48e)
    2754                      .dwattr $C$DW$214, DW_AT_TI_begin_column(0x1d)
    2755                      .dwattr $C$DW$214, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    2756                      .dwattr $C$DW$214, DW_AT_decl_line(0x48e)
    2757                      .dwattr $C$DW$214, DW_AT_decl_column(0x1d)
    2758                      .dwattr $C$DW$214, DW_AT_TI_max_frame_size(0x01)
    2759                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1167,column 1,is_stmt,address _prvIsQueueEmpty
    2760              
    2761                      .dwfde $C$DW$CIE, _prvIsQueueEmpty
    2762              $C$DW$215       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    2763                      .dwattr $C$DW$215, DW_AT_TI_symbol_name("_pxQueue")
    2764                      .dwattr $C$DW$215, DW_AT_type(*$C$DW$T$105)
    2765                      .dwattr $C$DW$215, DW_AT_location[DW_OP_reg17]
    2766              ;*******************************************************************************
    2767              ;* FUNCTION NAME: prvIsQueueEmpty                                              *
    2768              ;*                                                                             *
    2769              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,SP,CARRY,M40,SATA,SATD,RDM,FRCT,SMUL,*
    2770              ;*                        INTM                                                 *
    2771              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    2772              ;*   Total Frame Size   : 1 word                                               *
    2773              ;*                        (1 return address/alignment)                         *
    2774              ;*   Min System Stack   : 1 word                                               *
    2775              ;*******************************************************************************
    2776              
    2777              ;*******************************************************************************
    2778              ;*                                                                             *
    2779              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    2780              ;*                                                                             *
    2781              ;*******************************************************************************
    2782 000605       _prvIsQueueEmpty:
    2783              ;* 1170 -----------------------    _disable_interrupts();
    2784              ;* 1170 -----------------------    usCriticalNesting = usCriticalNesting+1u;
    2785              ;* 1171 -----------------------    xReturn = (*pxQueue).uxMessagesWaiting == 0u;
    2786                      .dwcfi  cfa_offset, 1
    2787                      .dwcfi  save_reg_to_mem, 91, -1
    2788              ;* AR0   assigned to _pxQueue
    2789              $C$DW$216       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    2790                      .dwattr $C$DW$216, DW_AT_TI_symbol_name("_pxQueue")
    2791                      .dwattr $C$DW$216, DW_AT_type(*$C$DW$T$105)
    2792                      .dwattr $C$DW$216, DW_AT_location[DW_OP_reg17]
    2793                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1170,column 2,is_stmt
    2794 000605 46B3          bit(ST1, #ST1_INTM) = #1 ; |1170| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   59

    2795                                                      ; interrupts disabled ; |1170| 
    2796 000607 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |1170| 
         000609 0001 
         00060b 0000 
         00060d 00!  
    2797 00060e 20            nop
    2798 00060f 20            nop
    2799 000610 20            nop
    2800                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1171,column 3,is_stmt
    2801 000611 A90D          AR1 = *AR0(#28) ; |1171| 
         000613 001C 
    2802              
    2803 000615 6119          if (AR1 != #0) goto $C$L54 ; |1171| 
    2804 000617 3D04  ||      T0 = #0
    2805              
    2806                                                      ; branchcc occurs ; |1171| 
    2807 000619 3C14          T0 = #1
    2808 00061b       $C$L54:    
    2809              ;* 1172 -----------------------    if ( !usCriticalNesting ) goto g4;
    2810                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1172,column 2,is_stmt
    2811 00061b A931          AR1 = *(#_usCriticalNesting) ; |1172| 
         00061d 0000 
         00061f 00!  
    2812 000620 0409          if (AR1 == #0) goto $C$L55 ; |1172| 
         000622 13   
    2813                                                      ; branchcc occurs ; |1172| 
    2814              ;* 1172 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    2815              ;* 1172 -----------------------    if ( usCriticalNesting ) goto g4;
    2816 000623 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |1172| 
         000625 FFFF 
         000627 0000 
         000629 00!  
    2817 00062a 20            nop
    2818 00062b 20            nop
    2819 00062c 20            nop
    2820 00062d A931          AR1 = *(#_usCriticalNesting) ; |1172| 
         00062f 0000 
         000631 00!  
    2821 000632 6119          if (AR1 != #0) goto $C$L55 ; |1172| 
    2822                                                      ; branchcc occurs ; |1172| 
    2823              ;* 1172 -----------------------    _enable_interrupts();
    2824 000634 46B2          bit(ST1, #ST1_INTM) = #0 ; |1172| 
    2825 000636       $C$L55:    
    2826              ;**     -----------------------g4:
    2827              ;* 1174 -----------------------    return xReturn;
    2828                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1174,column 2,is_stmt
    2829                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1175,column 1,is_stmt
    2830              $C$DW$217       .dwtag  DW_TAG_TI_branch
    2831                      .dwattr $C$DW$217, DW_AT_low_pc(0x00)
    2832                      .dwattr $C$DW$217, DW_AT_TI_return
    2833 000636 4804          return
    2834                                                      ; return occurs
    2835                      .dwattr $C$DW$214, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    2836                      .dwattr $C$DW$214, DW_AT_TI_end_line(0x497)
    2837                      .dwattr $C$DW$214, DW_AT_TI_end_column(0x01)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   60

    2838                      .dwendentry
    2839                      .dwendtag $C$DW$214
    2840              
    2841 000638               .sect   ".text"
    2842                      .global _xQueueIsQueueEmptyFromISR
    2843              
    2844              $C$DW$218       .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueIsQueueEmptyFromISR")
    2845                      .dwattr $C$DW$218, DW_AT_low_pc(_xQueueIsQueueEmptyFromISR)
    2846                      .dwattr $C$DW$218, DW_AT_high_pc(0x00)
    2847                      .dwattr $C$DW$218, DW_AT_TI_symbol_name("_xQueueIsQueueEmptyFromISR")
    2848                      .dwattr $C$DW$218, DW_AT_external
    2849                      .dwattr $C$DW$218, DW_AT_type(*$C$DW$T$10)
    2850                      .dwattr $C$DW$218, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2851                      .dwattr $C$DW$218, DW_AT_TI_begin_line(0x49a)
    2852                      .dwattr $C$DW$218, DW_AT_TI_begin_column(0x16)
    2853                      .dwattr $C$DW$218, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    2854                      .dwattr $C$DW$218, DW_AT_decl_line(0x49a)
    2855                      .dwattr $C$DW$218, DW_AT_decl_column(0x16)
    2856                      .dwattr $C$DW$218, DW_AT_TI_max_frame_size(0x01)
    2857                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1179,column 1,is_stmt,address _xQueueIsQueueEmptyFromI
    2858              
    2859                      .dwfde $C$DW$CIE, _xQueueIsQueueEmptyFromISR
    2860              $C$DW$219       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    2861                      .dwattr $C$DW$219, DW_AT_TI_symbol_name("_pxQueue")
    2862                      .dwattr $C$DW$219, DW_AT_type(*$C$DW$T$105)
    2863                      .dwattr $C$DW$219, DW_AT_location[DW_OP_reg17]
    2864              ;*******************************************************************************
    2865              ;* FUNCTION NAME: xQueueIsQueueEmptyFromISR                                    *
    2866              ;*                                                                             *
    2867              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,SP,M40,SATA,SATD,RDM,FRCT,SMUL       *
    2868              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    2869              ;*   Total Frame Size   : 1 word                                               *
    2870              ;*                        (1 return address/alignment)                         *
    2871              ;*   Min System Stack   : 1 word                                               *
    2872              ;*******************************************************************************
    2873              
    2874              ;*******************************************************************************
    2875              ;*                                                                             *
    2876              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    2877              ;*                                                                             *
    2878              ;*******************************************************************************
    2879 000638       _xQueueIsQueueEmptyFromISR:
    2880              ;* 1182 -----------------------    xReturn = (*pxQueue).uxMessagesWaiting == 0u;
    2881                      .dwcfi  cfa_offset, 1
    2882                      .dwcfi  save_reg_to_mem, 91, -1
    2883              ;* AR0   assigned to _pxQueue
    2884              $C$DW$220       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    2885                      .dwattr $C$DW$220, DW_AT_TI_symbol_name("_pxQueue")
    2886                      .dwattr $C$DW$220, DW_AT_type(*$C$DW$T$105)
    2887                      .dwattr $C$DW$220, DW_AT_location[DW_OP_reg17]
    2888                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1182,column 2,is_stmt
    2889 000638 A90D          AR1 = *AR0(#28) ; |1182| 
         00063a 001C 
    2890              
    2891 00063c 6119          if (AR1 != #0) goto $C$L56 ; |1182| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   61

    2892 00063e 3D04  ||      T0 = #0
    2893              
    2894                                                      ; branchcc occurs ; |1182| 
    2895 000640 3C14          T0 = #1
    2896 000642       $C$L56:    
    2897              ;* 1184 -----------------------    return xReturn;
    2898                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1184,column 2,is_stmt
    2899                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1185,column 1,is_stmt
    2900              $C$DW$221       .dwtag  DW_TAG_TI_branch
    2901                      .dwattr $C$DW$221, DW_AT_low_pc(0x00)
    2902                      .dwattr $C$DW$221, DW_AT_TI_return
    2903 000642 4804          return
    2904                                                      ; return occurs
    2905                      .dwattr $C$DW$218, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    2906                      .dwattr $C$DW$218, DW_AT_TI_end_line(0x4a1)
    2907                      .dwattr $C$DW$218, DW_AT_TI_end_column(0x01)
    2908                      .dwendentry
    2909                      .dwendtag $C$DW$218
    2910              
    2911 000644               .sect   ".text"
    2912              
    2913              $C$DW$222       .dwtag  DW_TAG_subprogram, DW_AT_name("prvIsQueueFull")
    2914                      .dwattr $C$DW$222, DW_AT_low_pc(_prvIsQueueFull)
    2915                      .dwattr $C$DW$222, DW_AT_high_pc(0x00)
    2916                      .dwattr $C$DW$222, DW_AT_TI_symbol_name("_prvIsQueueFull")
    2917                      .dwattr $C$DW$222, DW_AT_type(*$C$DW$T$10)
    2918                      .dwattr $C$DW$222, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    2919                      .dwattr $C$DW$222, DW_AT_TI_begin_line(0x4a4)
    2920                      .dwattr $C$DW$222, DW_AT_TI_begin_column(0x1d)
    2921                      .dwattr $C$DW$222, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    2922                      .dwattr $C$DW$222, DW_AT_decl_line(0x4a4)
    2923                      .dwattr $C$DW$222, DW_AT_decl_column(0x1d)
    2924                      .dwattr $C$DW$222, DW_AT_TI_max_frame_size(0x01)
    2925                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1189,column 1,is_stmt,address _prvIsQueueFull
    2926              
    2927                      .dwfde $C$DW$CIE, _prvIsQueueFull
    2928              $C$DW$223       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    2929                      .dwattr $C$DW$223, DW_AT_TI_symbol_name("_pxQueue")
    2930                      .dwattr $C$DW$223, DW_AT_type(*$C$DW$T$105)
    2931                      .dwattr $C$DW$223, DW_AT_location[DW_OP_reg17]
    2932              ;*******************************************************************************
    2933              ;* FUNCTION NAME: prvIsQueueFull                                               *
    2934              ;*                                                                             *
    2935              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,AR2,SP,CARRY,TC1,M40,SATA,SATD,RDM,  *
    2936              ;*                        FRCT,SMUL,INTM                                       *
    2937              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    2938              ;*   Total Frame Size   : 1 word                                               *
    2939              ;*                        (1 return address/alignment)                         *
    2940              ;*   Min System Stack   : 1 word                                               *
    2941              ;*******************************************************************************
    2942              
    2943              ;*******************************************************************************
    2944              ;*                                                                             *
    2945              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    2946              ;*                                                                             *
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   62

    2947              ;*******************************************************************************
    2948 000644       _prvIsQueueFull:
    2949              ;* 1192 -----------------------    _disable_interrupts();
    2950              ;* 1192 -----------------------    usCriticalNesting = usCriticalNesting+1u;
    2951              ;* 1193 -----------------------    xReturn = (*pxQueue).uxMessagesWaiting == (*pxQueue).uxLength;
    2952                      .dwcfi  cfa_offset, 1
    2953                      .dwcfi  save_reg_to_mem, 91, -1
    2954              ;* AR0   assigned to _pxQueue
    2955              $C$DW$224       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    2956                      .dwattr $C$DW$224, DW_AT_TI_symbol_name("_pxQueue")
    2957                      .dwattr $C$DW$224, DW_AT_type(*$C$DW$T$105)
    2958                      .dwattr $C$DW$224, DW_AT_location[DW_OP_reg17]
    2959                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1192,column 2,is_stmt
    2960 000644 46B3          bit(ST1, #ST1_INTM) = #1 ; |1192| 
    2961                                                      ; interrupts disabled ; |1192| 
    2962 000646 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) + #1 ; |1192| 
         000648 0001 
         00064a 0000 
         00064c 00!  
    2963 00064d 20            nop
    2964 00064e 20            nop
    2965                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1193,column 3,is_stmt
    2966 00064f A90D          AR1 = *AR0(#29) ; |1193| 
         000651 001D 
    2967 000653 AA0D          AR2 = *AR0(#28) ; |1193| 
         000655 001C 
    2968 000657 12AC          TC1 = uns(AR2 != AR1) ; |1193| 
         000659 94   
    2969              
    2970 00065a 6164          if (TC1) goto $C$L57 ; |1193| 
    2971 00065c 3D04  ||      T0 = #0
    2972              
    2973                                                      ; branchcc occurs ; |1193| 
    2974 00065e 3C14          T0 = #1
    2975 000660       $C$L57:    
    2976              ;* 1194 -----------------------    if ( !usCriticalNesting ) goto g4;
    2977                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1194,column 2,is_stmt
    2978 000660 A931          AR1 = *(#_usCriticalNesting) ; |1194| 
         000662 0000 
         000664 00!  
    2979 000665 0409          if (AR1 == #0) goto $C$L58 ; |1194| 
         000667 13   
    2980                                                      ; branchcc occurs ; |1194| 
    2981              ;* 1194 -----------------------    usCriticalNesting = usCriticalNesting-1u;
    2982              ;* 1194 -----------------------    if ( usCriticalNesting ) goto g4;
    2983 000668 F731          *(#_usCriticalNesting) = *(#_usCriticalNesting) - #1 ; |1194| 
         00066a FFFF 
         00066c 0000 
         00066e 00!  
    2984 00066f 20            nop
    2985 000670 20            nop
    2986 000671 20            nop
    2987 000672 A931          AR1 = *(#_usCriticalNesting) ; |1194| 
         000674 0000 
         000676 00!  
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   63

    2988 000677 6119          if (AR1 != #0) goto $C$L58 ; |1194| 
    2989                                                      ; branchcc occurs ; |1194| 
    2990              ;* 1194 -----------------------    _enable_interrupts();
    2991 000679 46B2          bit(ST1, #ST1_INTM) = #0 ; |1194| 
    2992 00067b       $C$L58:    
    2993              ;**     -----------------------g4:
    2994              ;* 1196 -----------------------    return xReturn;
    2995                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1196,column 2,is_stmt
    2996                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1197,column 1,is_stmt
    2997              $C$DW$225       .dwtag  DW_TAG_TI_branch
    2998                      .dwattr $C$DW$225, DW_AT_low_pc(0x00)
    2999                      .dwattr $C$DW$225, DW_AT_TI_return
    3000 00067b 4804          return
    3001                                                      ; return occurs
    3002                      .dwattr $C$DW$222, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    3003                      .dwattr $C$DW$222, DW_AT_TI_end_line(0x4ad)
    3004                      .dwattr $C$DW$222, DW_AT_TI_end_column(0x01)
    3005                      .dwendentry
    3006                      .dwendtag $C$DW$222
    3007              
    3008 00067d               .sect   ".text"
    3009                      .global _xQueueIsQueueFullFromISR
    3010              
    3011              $C$DW$226       .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueIsQueueFullFromISR")
    3012                      .dwattr $C$DW$226, DW_AT_low_pc(_xQueueIsQueueFullFromISR)
    3013                      .dwattr $C$DW$226, DW_AT_high_pc(0x00)
    3014                      .dwattr $C$DW$226, DW_AT_TI_symbol_name("_xQueueIsQueueFullFromISR")
    3015                      .dwattr $C$DW$226, DW_AT_external
    3016                      .dwattr $C$DW$226, DW_AT_type(*$C$DW$T$10)
    3017                      .dwattr $C$DW$226, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    3018                      .dwattr $C$DW$226, DW_AT_TI_begin_line(0x4b0)
    3019                      .dwattr $C$DW$226, DW_AT_TI_begin_column(0x16)
    3020                      .dwattr $C$DW$226, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    3021                      .dwattr $C$DW$226, DW_AT_decl_line(0x4b0)
    3022                      .dwattr $C$DW$226, DW_AT_decl_column(0x16)
    3023                      .dwattr $C$DW$226, DW_AT_TI_max_frame_size(0x01)
    3024                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1201,column 1,is_stmt,address _xQueueIsQueueFullFromIS
    3025              
    3026                      .dwfde $C$DW$CIE, _xQueueIsQueueFullFromISR
    3027              $C$DW$227       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    3028                      .dwattr $C$DW$227, DW_AT_TI_symbol_name("_pxQueue")
    3029                      .dwattr $C$DW$227, DW_AT_type(*$C$DW$T$105)
    3030                      .dwattr $C$DW$227, DW_AT_location[DW_OP_reg17]
    3031              ;*******************************************************************************
    3032              ;* FUNCTION NAME: xQueueIsQueueFullFromISR                                     *
    3033              ;*                                                                             *
    3034              ;*   Function Uses Regs : T0,AR0,XAR0,AR1,AR2,SP,TC1,M40,SATA,SATD,RDM,FRCT,   *
    3035              ;*                        SMUL                                                 *
    3036              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    3037              ;*   Total Frame Size   : 1 word                                               *
    3038              ;*                        (1 return address/alignment)                         *
    3039              ;*   Min System Stack   : 1 word                                               *
    3040              ;*******************************************************************************
    3041              
    3042              ;*******************************************************************************
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   64

    3043              ;*                                                                             *
    3044              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    3045              ;*                                                                             *
    3046              ;*******************************************************************************
    3047 00067d       _xQueueIsQueueFullFromISR:
    3048              ;* 1204 -----------------------    xReturn = (*pxQueue).uxMessagesWaiting == (*pxQueue).uxLength;
    3049                      .dwcfi  cfa_offset, 1
    3050                      .dwcfi  save_reg_to_mem, 91, -1
    3051              ;* AR0   assigned to _pxQueue
    3052              $C$DW$228       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    3053                      .dwattr $C$DW$228, DW_AT_TI_symbol_name("_pxQueue")
    3054                      .dwattr $C$DW$228, DW_AT_type(*$C$DW$T$105)
    3055                      .dwattr $C$DW$228, DW_AT_location[DW_OP_reg17]
    3056                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1204,column 2,is_stmt
    3057 00067d A90D          AR1 = *AR0(#29) ; |1204| 
         00067f 001D 
    3058 000681 AA0D          AR2 = *AR0(#28) ; |1204| 
         000683 001C 
    3059 000685 3C04          T0 = #0
    3060 000687 12AC          TC1 = uns(AR2 != AR1) ; |1204| 
         000689 94   
    3061 00068a 6164          if (TC1) goto $C$L59 ; |1204| 
    3062                                                      ; branchcc occurs ; |1204| 
    3063 00068c 3C14          T0 = #1
    3064 00068e       $C$L59:    
    3065              ;* 1206 -----------------------    return xReturn;
    3066                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1206,column 2,is_stmt
    3067                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1207,column 1,is_stmt
    3068              $C$DW$229       .dwtag  DW_TAG_TI_branch
    3069                      .dwattr $C$DW$229, DW_AT_low_pc(0x00)
    3070                      .dwattr $C$DW$229, DW_AT_TI_return
    3071 00068e 4804          return
    3072                                                      ; return occurs
    3073                      .dwattr $C$DW$226, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    3074                      .dwattr $C$DW$226, DW_AT_TI_end_line(0x4b7)
    3075                      .dwattr $C$DW$226, DW_AT_TI_end_column(0x01)
    3076                      .dwendentry
    3077                      .dwendtag $C$DW$226
    3078              
    3079 000690               .sect   ".text"
    3080                      .global _xQueueCRSend
    3081              
    3082              $C$DW$230       .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueCRSend")
    3083                      .dwattr $C$DW$230, DW_AT_low_pc(_xQueueCRSend)
    3084                      .dwattr $C$DW$230, DW_AT_high_pc(0x00)
    3085                      .dwattr $C$DW$230, DW_AT_TI_symbol_name("_xQueueCRSend")
    3086                      .dwattr $C$DW$230, DW_AT_external
    3087                      .dwattr $C$DW$230, DW_AT_type(*$C$DW$T$10)
    3088                      .dwattr $C$DW$230, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    3089                      .dwattr $C$DW$230, DW_AT_TI_begin_line(0x4bb)
    3090                      .dwattr $C$DW$230, DW_AT_TI_begin_column(0x16)
    3091                      .dwattr $C$DW$230, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    3092                      .dwattr $C$DW$230, DW_AT_decl_line(0x4bb)
    3093                      .dwattr $C$DW$230, DW_AT_decl_column(0x16)
    3094                      .dwattr $C$DW$230, DW_AT_TI_max_frame_size(0x04)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   65

    3095                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1212,column 1,is_stmt,address _xQueueCRSend
    3096              
    3097                      .dwfde $C$DW$CIE, _xQueueCRSend
    3098              $C$DW$231       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    3099                      .dwattr $C$DW$231, DW_AT_TI_symbol_name("_pxQueue")
    3100                      .dwattr $C$DW$231, DW_AT_type(*$C$DW$T$82)
    3101                      .dwattr $C$DW$231, DW_AT_location[DW_OP_reg17]
    3102              $C$DW$232       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvItemToQueue")
    3103                      .dwattr $C$DW$232, DW_AT_TI_symbol_name("_pvItemToQueue")
    3104                      .dwattr $C$DW$232, DW_AT_type(*$C$DW$T$55)
    3105                      .dwattr $C$DW$232, DW_AT_location[DW_OP_reg19]
    3106              $C$DW$233       .dwtag  DW_TAG_formal_parameter, DW_AT_name("xTicksToWait")
    3107                      .dwattr $C$DW$233, DW_AT_TI_symbol_name("_xTicksToWait")
    3108                      .dwattr $C$DW$233, DW_AT_type(*$C$DW$T$19)
    3109                      .dwattr $C$DW$233, DW_AT_location[DW_OP_reg0]
    3110              ;*******************************************************************************
    3111              ;* FUNCTION NAME: xQueueCRSend                                                 *
    3112              ;*                                                                             *
    3113              ;*   Function Uses Regs : AC0,AC0,T0,T2,AR0,XAR0,AR1,XAR1,AR2,AR3,XAR3,AR5,    *
    3114              ;*                        XAR5,SP,TC1,M40,SATA,SATD,RDM,FRCT,SMUL,INTM         *
    3115              ;*   Save On Entry Regs : T2,AR5                                               *
    3116              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    3117              ;*   Total Frame Size   : 4 words                                              *
    3118              ;*                        (2 return address/alignment)                         *
    3119              ;*                        (2 register save area)                               *
    3120              ;*   Min System Stack   : 2 words                                              *
    3121              ;*******************************************************************************
    3122              
    3123              ;*******************************************************************************
    3124              ;*                                                                             *
    3125              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    3126              ;*                                                                             *
    3127              ;*******************************************************************************
    3128 000690       _xQueueCRSend:
    3129              ;* 1218 -----------------------    _disable_interrupts();
    3130              ;* 1220 -----------------------    if ( prvIsQueueFull(pxQueue) ) goto g8;
    3131                      .dwcfi  cfa_offset, 1
    3132                      .dwcfi  save_reg_to_mem, 91, -1
    3133 000690 5066          push(T2)
    3134                      .dwcfi  cfa_offset, 2
    3135                      .dwcfi  save_reg_to_mem, 14, -2
    3136 000692 50D5          pshboth(XAR5)
    3137                      .dwcfi  cfa_offset, 3
    3138                      .dwcfi  save_reg_to_mem, 26, -3
    3139 000694 4EFF          SP = SP + #-1
    3140                      .dwcfi  cfa_offset, 4
    3141              ;* T2    assigned to _xReturn
    3142              $C$DW$234       .dwtag  DW_TAG_variable, DW_AT_name("xReturn")
    3143                      .dwattr $C$DW$234, DW_AT_TI_symbol_name("_xReturn")
    3144                      .dwattr $C$DW$234, DW_AT_type(*$C$DW$T$10)
    3145                      .dwattr $C$DW$234, DW_AT_location[DW_OP_reg14]
    3146              ;* AC0   assigned to _xTicksToWait
    3147              $C$DW$235       .dwtag  DW_TAG_variable, DW_AT_name("xTicksToWait")
    3148                      .dwattr $C$DW$235, DW_AT_TI_symbol_name("_xTicksToWait")
    3149                      .dwattr $C$DW$235, DW_AT_type(*$C$DW$T$19)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   66

    3150                      .dwattr $C$DW$235, DW_AT_location[DW_OP_reg0]
    3151              ;* AR3   assigned to _pvItemToQueue
    3152              $C$DW$236       .dwtag  DW_TAG_variable, DW_AT_name("pvItemToQueue")
    3153                      .dwattr $C$DW$236, DW_AT_TI_symbol_name("_pvItemToQueue")
    3154                      .dwattr $C$DW$236, DW_AT_type(*$C$DW$T$55)
    3155                      .dwattr $C$DW$236, DW_AT_location[DW_OP_reg23]
    3156              ;* AR5   assigned to _pxQueue
    3157              $C$DW$237       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    3158                      .dwattr $C$DW$237, DW_AT_TI_symbol_name("_pxQueue")
    3159                      .dwattr $C$DW$237, DW_AT_type(*$C$DW$T$82)
    3160                      .dwattr $C$DW$237, DW_AT_location[DW_OP_reg27]
    3161 000696 EC21          XAR3 = mar(*AR1)
         000698 BE   
    3162 000699 EC01          XAR5 = mar(*AR0)
         00069b DE   
    3163                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1218,column 2,is_stmt
    3164 00069c 46B3          bit(ST1, #ST1_INTM) = #1 ; |1218| 
    3165                                                      ; interrupts disabled ; |1218| 
    3166                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1220,column 3,is_stmt
    3167              $C$DW$238       .dwtag  DW_TAG_TI_branch
    3168                      .dwattr $C$DW$238, DW_AT_low_pc(0x00)
    3169                      .dwattr $C$DW$238, DW_AT_name("_prvIsQueueFull")
    3170                      .dwattr $C$DW$238, DW_AT_TI_call
    3171 00069e 08FF          call #_prvIsQueueFull ; |1220| 
         0006a0 A3   
    3172                                                      ; call occurs [#_prvIsQueueFull] ; |1220| 
    3173 0006a1 0414          if (T0 != #0) goto $C$L62 ; |1220| 
         0006a3 3B   
    3174                                                      ; branchcc occurs ; |1220| 
    3175              ;* 1239 -----------------------    _enable_interrupts();
    3176              ;* 1243 -----------------------    _disable_interrupts();
    3177              ;* 1245 -----------------------    if ( (*pxQueue).uxMessagesWaiting >= (*pxQueue).uxLength ) goto g6;
    3178                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1239,column 2,is_stmt
    3179 0006a4 46B2          bit(ST1, #ST1_INTM) = #0 ; |1239| 
    3180                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1243,column 2,is_stmt
    3181 0006a6 46B3          bit(ST1, #ST1_INTM) = #1 ; |1243| 
    3182                                                      ; interrupts disabled ; |1243| 
    3183                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1245,column 3,is_stmt
    3184 0006a8 A9AD          AR1 = *AR5(#29) ; |1245| 
         0006aa 001D 
    3185 0006ac AAAD          AR2 = *AR5(#28) ; |1245| 
         0006ae 001C 
    3186 0006b0 12A8          TC1 = uns(AR2 >= AR1) ; |1245| 
         0006b2 94   
    3187 0006b3 0464          if (TC1) goto $C$L60 ; |1245| 
         0006b5 21   
    3188                                                      ; branchcc occurs ; |1245| 
    3189              ;* 1248 -----------------------    prvCopyDataToQueue(pxQueue, pvItemToQueue, 0);
    3190              ;* 1249 -----------------------    xReturn = 1;
    3191              ;* 1252 -----------------------    if ( !(*pxQueue).xTasksWaitingToReceive.uxNumberOfItems ) goto g7;
    3192                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1248,column 4,is_stmt
    3193 0006b6 EC61          XAR1 = mar(*AR3)
         0006b8 9E   
    3194              $C$DW$239       .dwtag  DW_TAG_TI_branch
    3195                      .dwattr $C$DW$239, DW_AT_low_pc(0x00)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   67

    3196                      .dwattr $C$DW$239, DW_AT_name("_prvCopyDataToQueue")
    3197                      .dwattr $C$DW$239, DW_AT_TI_call
    3198              
    3199 0006b9 08FD          call #_prvCopyDataToQueue ; |1248| 
         0006bb C8   
    3200 0006bc 3D04  ||      T0 = #0
    3201              
    3202                                                      ; call occurs [#_prvCopyDataToQueue] ; |1248| 
    3203                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1249,column 4,is_stmt
    3204 0006be 3C16          T2 = #1
    3205                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1252,column 4,is_stmt
    3206 0006c0 A9AD          AR1 = *AR5(#18) ; |1252| 
         0006c2 0012 
    3207 0006c4 0409          if (AR1 == #0) goto $C$L61 ; |1252| 
         0006c6 12   
    3208                                                      ; branchcc occurs ; |1252| 
    3209              ;* 1258 -----------------------    if ( !xCoRoutineRemoveFromEventList((struct _xLIST *)pxQueue+18L) ) goto g
    3210                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1258,column 5,is_stmt
    3211 0006c7 ECA1          XAR0 = mar(*AR5)
         0006c9 8E   
    3212 0006ca 1412          mar(AR0 + #18) ; |1258| 
         0006cc 84   
    3213              $C$DW$240       .dwtag  DW_TAG_TI_branch
    3214                      .dwattr $C$DW$240, DW_AT_low_pc(0x00)
    3215                      .dwattr $C$DW$240, DW_AT_name("_xCoRoutineRemoveFromEventList")
    3216                      .dwattr $C$DW$240, DW_AT_TI_call
    3217 0006cd 6C00          call #_xCoRoutineRemoveFromEventList ; |1258| 
         0006cf 0000!
    3218                                                      ; call occurs [#_xCoRoutineRemoveFromEventList] ; |1258| 
    3219 0006d1 6304          if (T0 == #0) goto $C$L61 ; |1258| 
    3220                                                      ; branchcc occurs ; |1258| 
    3221              ;* 1262 -----------------------    xReturn = (-5);
    3222              ;* 1262 -----------------------    goto g7;
    3223                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1262,column 6,is_stmt
    3224              
    3225 0006d3 4A02          goto $C$L61 ; |1262| 
    3226 0006d5 3F56  ||      T2 = #-5
    3227              
    3228                                                      ; branch occurs ; |1262| 
    3229 0006d7       $C$L60:    
    3230              ;**     -----------------------g6:
    3231              ;* 1268 -----------------------    xReturn = 0;
    3232                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1268,column 4,is_stmt
    3233 0006d7 3C06          T2 = #0
    3234 0006d9       $C$L61:    
    3235              ;**     -----------------------g7:
    3236              ;* 1271 -----------------------    _enable_interrupts();
    3237              ;* 1273 -----------------------    return xReturn;
    3238                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1271,column 2,is_stmt
    3239 0006d9 46B2          bit(ST1, #ST1_INTM) = #0 ; |1271| 
    3240                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1273,column 2,is_stmt
    3241              
    3242 0006db 4A13          goto $C$L64 ; |1273| 
    3243 0006dd 2364  ||      T0 = T2   ; |1273| 
    3244              
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   68

    3245                                                      ; branch occurs ; |1273| 
    3246 0006df       $C$L62:    
    3247              ;**     -----------------------g8:
    3248              ;* 1224 -----------------------    if ( xTicksToWait == 0uL ) goto g10;
    3249                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1224,column 4,is_stmt
    3250 0006df 6680          if (AC0 == #0) goto $C$L63 ; |1224| 
    3251                                                      ; branchcc occurs ; |1224| 
    3252              ;* 1228 -----------------------    vCoRoutineAddToDelayedList(xTicksToWait, (struct _xLIST *)pxQueue+8L);
    3253              ;* 1229 -----------------------    _enable_interrupts();
    3254              ;* 1230 -----------------------    return (-4);
    3255                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1228,column 5,is_stmt
    3256 0006e1 1408          mar(AR0 + #8) ; |1228| 
         0006e3 84   
    3257              $C$DW$241       .dwtag  DW_TAG_TI_branch
    3258                      .dwattr $C$DW$241, DW_AT_low_pc(0x00)
    3259                      .dwattr $C$DW$241, DW_AT_name("_vCoRoutineAddToDelayedList")
    3260                      .dwattr $C$DW$241, DW_AT_TI_call
    3261 0006e4 6C00          call #_vCoRoutineAddToDelayedList ; |1228| 
         0006e6 0000!
    3262                                                      ; call occurs [#_vCoRoutineAddToDelayedList] ; |1228| 
    3263                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1229,column 5,is_stmt
    3264 0006e8 46B2          bit(ST1, #ST1_INTM) = #0 ; |1229| 
    3265                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1230,column 5,is_stmt
    3266              
    3267 0006ea 4A04          goto $C$L64 ; |1230| 
    3268 0006ec 3F44  ||      T0 = #-4
    3269              
    3270                                                      ; branch occurs ; |1230| 
    3271 0006ee       $C$L63:    
    3272              ;**     -----------------------g10:
    3273              ;* 1234 -----------------------    _enable_interrupts();
    3274              ;* 1235 -----------------------    return 0;
    3275                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1234,column 5,is_stmt
    3276 0006ee 46B2          bit(ST1, #ST1_INTM) = #0 ; |1234| 
    3277                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1235,column 5,is_stmt
    3278 0006f0 3C04          T0 = #0
    3279 0006f2       $C$L64:    
    3280                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1274,column 1,is_stmt
    3281 0006f2 4E01          SP = SP + #1
    3282                      .dwcfi  cfa_offset, 3
    3283 0006f4 50D4          XAR5 = popboth()
    3284                      .dwcfi  restore_reg, 26
    3285                      .dwcfi  cfa_offset, 2
    3286 0006f6 5062          T2 = pop()
    3287                      .dwcfi  restore_reg, 14
    3288                      .dwcfi  cfa_offset, 1
    3289              $C$DW$242       .dwtag  DW_TAG_TI_branch
    3290                      .dwattr $C$DW$242, DW_AT_low_pc(0x00)
    3291                      .dwattr $C$DW$242, DW_AT_TI_return
    3292 0006f8 4804          return
    3293                                                      ; return occurs
    3294                      .dwattr $C$DW$230, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    3295                      .dwattr $C$DW$230, DW_AT_TI_end_line(0x4fa)
    3296                      .dwattr $C$DW$230, DW_AT_TI_end_column(0x01)
    3297                      .dwendentry
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   69

    3298                      .dwendtag $C$DW$230
    3299              
    3300 0006fa               .sect   ".text"
    3301                      .global _xQueueCRReceive
    3302              
    3303              $C$DW$243       .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueCRReceive")
    3304                      .dwattr $C$DW$243, DW_AT_low_pc(_xQueueCRReceive)
    3305                      .dwattr $C$DW$243, DW_AT_high_pc(0x00)
    3306                      .dwattr $C$DW$243, DW_AT_TI_symbol_name("_xQueueCRReceive")
    3307                      .dwattr $C$DW$243, DW_AT_external
    3308                      .dwattr $C$DW$243, DW_AT_type(*$C$DW$T$10)
    3309                      .dwattr $C$DW$243, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    3310                      .dwattr $C$DW$243, DW_AT_TI_begin_line(0x4ff)
    3311                      .dwattr $C$DW$243, DW_AT_TI_begin_column(0x16)
    3312                      .dwattr $C$DW$243, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    3313                      .dwattr $C$DW$243, DW_AT_decl_line(0x4ff)
    3314                      .dwattr $C$DW$243, DW_AT_decl_column(0x16)
    3315                      .dwattr $C$DW$243, DW_AT_TI_max_frame_size(0x04)
    3316                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1280,column 1,is_stmt,address _xQueueCRReceive
    3317              
    3318                      .dwfde $C$DW$CIE, _xQueueCRReceive
    3319              $C$DW$244       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    3320                      .dwattr $C$DW$244, DW_AT_TI_symbol_name("_pxQueue")
    3321                      .dwattr $C$DW$244, DW_AT_type(*$C$DW$T$82)
    3322                      .dwattr $C$DW$244, DW_AT_location[DW_OP_reg17]
    3323              $C$DW$245       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvBuffer")
    3324                      .dwattr $C$DW$245, DW_AT_TI_symbol_name("_pvBuffer")
    3325                      .dwattr $C$DW$245, DW_AT_type(*$C$DW$T$3)
    3326                      .dwattr $C$DW$245, DW_AT_location[DW_OP_reg19]
    3327              $C$DW$246       .dwtag  DW_TAG_formal_parameter, DW_AT_name("xTicksToWait")
    3328                      .dwattr $C$DW$246, DW_AT_TI_symbol_name("_xTicksToWait")
    3329                      .dwattr $C$DW$246, DW_AT_type(*$C$DW$T$19)
    3330                      .dwattr $C$DW$246, DW_AT_location[DW_OP_reg0]
    3331              ;*******************************************************************************
    3332              ;* FUNCTION NAME: xQueueCRReceive                                              *
    3333              ;*                                                                             *
    3334              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,T2,AR0,XAR0,AR1,XAR1,AR2,XAR2,AR3,*
    3335              ;*                        XAR3,AR5,XAR5,SP,CARRY,TC1,M40,SATA,SATD,RDM,FRCT,   *
    3336              ;*                        SMUL,INTM                                            *
    3337              ;*   Save On Entry Regs : T2,AR5                                               *
    3338              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    3339              ;*   Total Frame Size   : 4 words                                              *
    3340              ;*                        (2 return address/alignment)                         *
    3341              ;*                        (2 register save area)                               *
    3342              ;*   Min System Stack   : 2 words                                              *
    3343              ;*******************************************************************************
    3344              
    3345              ;*******************************************************************************
    3346              ;*                                                                             *
    3347              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    3348              ;*                                                                             *
    3349              ;*******************************************************************************
    3350 0006fa       _xQueueCRReceive:
    3351              ;* 1286 -----------------------    _disable_interrupts();
    3352              ;* 1288 -----------------------    if ( (*pxQueue).uxMessagesWaiting ) goto g5;
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   70

    3353                      .dwcfi  cfa_offset, 1
    3354                      .dwcfi  save_reg_to_mem, 91, -1
    3355 0006fa 5066          push(T2)
    3356                      .dwcfi  cfa_offset, 2
    3357                      .dwcfi  save_reg_to_mem, 14, -2
    3358 0006fc 50D5          pshboth(XAR5)
    3359                      .dwcfi  cfa_offset, 3
    3360                      .dwcfi  save_reg_to_mem, 26, -3
    3361 0006fe 4EFF          SP = SP + #-1
    3362                      .dwcfi  cfa_offset, 4
    3363              ;* T2    assigned to _xReturn
    3364              $C$DW$247       .dwtag  DW_TAG_variable, DW_AT_name("xReturn")
    3365                      .dwattr $C$DW$247, DW_AT_TI_symbol_name("_xReturn")
    3366                      .dwattr $C$DW$247, DW_AT_type(*$C$DW$T$10)
    3367                      .dwattr $C$DW$247, DW_AT_location[DW_OP_reg14]
    3368              ;* AC0   assigned to _xTicksToWait
    3369              $C$DW$248       .dwtag  DW_TAG_variable, DW_AT_name("xTicksToWait")
    3370                      .dwattr $C$DW$248, DW_AT_TI_symbol_name("_xTicksToWait")
    3371                      .dwattr $C$DW$248, DW_AT_type(*$C$DW$T$19)
    3372                      .dwattr $C$DW$248, DW_AT_location[DW_OP_reg0]
    3373              ;* AR0   assigned to _pvBuffer
    3374              $C$DW$249       .dwtag  DW_TAG_variable, DW_AT_name("pvBuffer")
    3375                      .dwattr $C$DW$249, DW_AT_TI_symbol_name("_pvBuffer")
    3376                      .dwattr $C$DW$249, DW_AT_type(*$C$DW$T$3)
    3377                      .dwattr $C$DW$249, DW_AT_location[DW_OP_reg17]
    3378              ;* AR5   assigned to _pxQueue
    3379              $C$DW$250       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    3380                      .dwattr $C$DW$250, DW_AT_TI_symbol_name("_pxQueue")
    3381                      .dwattr $C$DW$250, DW_AT_type(*$C$DW$T$82)
    3382                      .dwattr $C$DW$250, DW_AT_location[DW_OP_reg27]
    3383 000700 EC01          XAR5 = mar(*AR0)
         000702 DE   
    3384 000703 EC21          XAR0 = mar(*AR1)
         000705 8E   
    3385                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1286,column 2,is_stmt
    3386 000706 46B3          bit(ST1, #ST1_INTM) = #1 ; |1286| 
    3387                                                      ; interrupts disabled ; |1286| 
    3388                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1288,column 3,is_stmt
    3389 000708 A9AD          AR1 = *AR5(#28) ; |1288| 
         00070a 001C 
    3390 00070c 0419          if (AR1 != #0) goto $C$L66 ; |1288| 
         00070e 1B   
    3391                                                      ; branchcc occurs ; |1288| 
    3392              ;* 1292 -----------------------    if ( xTicksToWait == 0uL ) goto g4;
    3393                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1292,column 4,is_stmt
    3394 00070f 0400          if (AC0 == #0) goto $C$L65 ; |1292| 
         000711 11   
    3395                                                      ; branchcc occurs ; |1292| 
    3396              ;* 1296 -----------------------    vCoRoutineAddToDelayedList(xTicksToWait, (struct _xLIST *)pxQueue+18L);
    3397              ;* 1297 -----------------------    _enable_interrupts();
    3398              ;* 1298 -----------------------    return (-4);
    3399                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1296,column 5,is_stmt
    3400 000712 ECA1          XAR0 = mar(*AR5)
         000714 8E   
    3401 000715 1412          mar(AR0 + #18) ; |1296| 
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   71

         000717 84   
    3402              $C$DW$251       .dwtag  DW_TAG_TI_branch
    3403                      .dwattr $C$DW$251, DW_AT_low_pc(0x00)
    3404                      .dwattr $C$DW$251, DW_AT_name("_vCoRoutineAddToDelayedList")
    3405                      .dwattr $C$DW$251, DW_AT_TI_call
    3406 000718 6C00          call #_vCoRoutineAddToDelayedList ; |1296| 
         00071a 0000!
    3407                                                      ; call occurs [#_vCoRoutineAddToDelayedList] ; |1296| 
    3408                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1297,column 5,is_stmt
    3409 00071c 46B2          bit(ST1, #ST1_INTM) = #0 ; |1297| 
    3410                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1298,column 5,is_stmt
    3411              
    3412 00071e 0600          goto $C$L70 ; |1298| 
         000720 68   
    3413 000721 3F44  ||      T0 = #-4
    3414              
    3415                                                      ; branch occurs ; |1298| 
    3416 000723       $C$L65:    
    3417              ;**     -----------------------g4:
    3418              ;* 1302 -----------------------    _enable_interrupts();
    3419              ;* 1303 -----------------------    return 0;
    3420                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1302,column 5,is_stmt
    3421 000723 46B2          bit(ST1, #ST1_INTM) = #0 ; |1302| 
    3422                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1303,column 5,is_stmt
    3423              
    3424 000725 0600          goto $C$L70 ; |1303| 
         000727 61   
    3425 000728 3D04  ||      T0 = #0
    3426              
    3427                                                      ; branch occurs ; |1303| 
    3428 00072a       $C$L66:    
    3429              ;**     -----------------------g5:
    3430              ;* 1307 -----------------------    _enable_interrupts();
    3431              ;* 1311 -----------------------    _disable_interrupts();
    3432              ;* 1313 -----------------------    if ( !(*pxQueue).uxMessagesWaiting ) goto g11;
    3433                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1307,column 2,is_stmt
    3434 00072a 46B2          bit(ST1, #ST1_INTM) = #0 ; |1307| 
    3435                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1311,column 2,is_stmt
    3436 00072c 46B3          bit(ST1, #ST1_INTM) = #1 ; |1311| 
    3437                                                      ; interrupts disabled ; |1311| 
    3438                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1313,column 3,is_stmt
    3439 00072e A9AD          AR1 = *AR5(#28) ; |1313| 
         000730 001C 
    3440 000732 0409          if (AR1 == #0) goto $C$L68 ; |1313| 
         000734 50   
    3441                                                      ; branchcc occurs ; |1313| 
    3442              ;* 1316 -----------------------    (*pxQueue).pcReadFrom = (*pxQueue).pcReadFrom+(*pxQueue).uxItemSize;
    3443              ;* 1317 -----------------------    if ( (*pxQueue).pcReadFrom < (*pxQueue).pcTail ) goto g8;
    3444                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1316,column 4,is_stmt
    3445 000735 EDBD          XAR3 = dbl(*AR5(short(#6)))
         000737 BF   
    3446 000738 DFAD          AC0 = uns(*AR5(#30)) ; |1316| 
         00073a 0500 
         00073c 1E   
    3447 00073d 900A          XAR2 = AC0
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   72

    3448              
    3449 00073f 8EBD          dbl(*AR5(short(#6))) = XAR3
         000741 BB10 
         000743 B5A1 
    3450              ||      mar(XAR3 + XAR2) ; |1316| 
    3451              
    3452                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1317,column 4,is_stmt
    3453 000745 EDB5          XAR3 = dbl(*AR5(short(#2)))
         000747 BF   
    3454 000748 90B0          AC0 = XAR3
    3455 00074a EDBD          XAR3 = dbl(*AR5(short(#6)))
         00074c BF   
    3456 00074d 90B1          AC1 = XAR3
    3457 00074f 1214          TC1 = uns(AC1 < AC0) ; |1317| 
         000751 04   
    3458 000752 6364          if (TC1) goto $C$L67 ; |1317| 
    3459                                                      ; branchcc occurs ; |1317| 
    3460              ;* 1319 -----------------------    (*pxQueue).pcReadFrom = (*pxQueue).pcHead;
    3461                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1319,column 5,is_stmt
    3462 000754 EDA1          XAR3 = dbl(*AR5)
         000756 BF   
    3463 000757 EBBD          dbl(*AR5(short(#6))) = XAR3
         000759 B5   
    3464 00075a       $C$L67:    
    3465              ;**     -----------------------g8:
    3466              ;* 1321 -----------------------    --(*pxQueue).uxMessagesWaiting;
    3467              ;* 1322 -----------------------    memcpy(pvBuffer, (const void *)(*pxQueue).pcReadFrom, (unsigned long)(*pxQ
    3468              ;* 1324 -----------------------    xReturn = 1;
    3469              ;* 1327 -----------------------    if ( !(*pxQueue).xTasksWaitingToSend.uxNumberOfItems ) goto g12;
    3470                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1321,column 4,is_stmt
    3471 00075a F7AD          *AR5(#28) = *AR5(#28) - #1 ; |1321| 
         00075c FFFF 
         00075e 001C 
    3472                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1322,column 4,is_stmt
    3473 000760 EDBD          XAR1 = dbl(*AR5(short(#6)))
         000762 9F   
    3474 000763 DFAD          AC0 = uns(*AR5(#30)) ; |1322| 
         000765 0500 
         000767 1E   
    3475              $C$DW$252       .dwtag  DW_TAG_TI_branch
    3476                      .dwattr $C$DW$252, DW_AT_low_pc(0x00)
    3477                      .dwattr $C$DW$252, DW_AT_name("_memcpy")
    3478                      .dwattr $C$DW$252, DW_AT_TI_call
    3479 000768 6C00          call #_memcpy ; |1322| 
         00076a 0000!
    3480                                                      ; call occurs [#_memcpy] ; |1322| 
    3481                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1324,column 4,is_stmt
    3482 00076c 3C16          T2 = #1
    3483                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1327,column 4,is_stmt
    3484 00076e A9AD          AR1 = *AR5(#8) ; |1327| 
         000770 0008 
    3485 000772 0409          if (AR1 == #0) goto $C$L69 ; |1327| 
         000774 12   
    3486                                                      ; branchcc occurs ; |1327| 
    3487              ;* 1333 -----------------------    if ( !xCoRoutineRemoveFromEventList((struct _xLIST *)pxQueue+8L) ) goto g1
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   73

    3488                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1333,column 5,is_stmt
    3489 000775 ECA1          XAR0 = mar(*AR5)
         000777 8E   
    3490 000778 1408          mar(AR0 + #8) ; |1333| 
         00077a 84   
    3491              $C$DW$253       .dwtag  DW_TAG_TI_branch
    3492                      .dwattr $C$DW$253, DW_AT_low_pc(0x00)
    3493                      .dwattr $C$DW$253, DW_AT_name("_xCoRoutineRemoveFromEventList")
    3494                      .dwattr $C$DW$253, DW_AT_TI_call
    3495 00077b 6C00          call #_xCoRoutineRemoveFromEventList ; |1333| 
         00077d 0000!
    3496                                                      ; call occurs [#_xCoRoutineRemoveFromEventList] ; |1333| 
    3497 00077f 6304          if (T0 == #0) goto $C$L69 ; |1333| 
    3498                                                      ; branchcc occurs ; |1333| 
    3499              ;* 1335 -----------------------    xReturn = (-5);
    3500              ;* 1335 -----------------------    goto g12;
    3501                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1335,column 6,is_stmt
    3502              
    3503 000781 4A02          goto $C$L69 ; |1335| 
    3504 000783 3F56  ||      T2 = #-5
    3505              
    3506                                                      ; branch occurs ; |1335| 
    3507 000785       $C$L68:    
    3508              ;**     -----------------------g11:
    3509              ;* 1341 -----------------------    xReturn = 0;
    3510                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1341,column 4,is_stmt
    3511 000785 3C06          T2 = #0
    3512 000787       $C$L69:    
    3513              ;**     -----------------------g12:
    3514              ;* 1344 -----------------------    _enable_interrupts();
    3515              ;* 1346 -----------------------    return xReturn;
    3516                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1344,column 2,is_stmt
    3517 000787 46B2          bit(ST1, #ST1_INTM) = #0 ; |1344| 
    3518                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1346,column 2,is_stmt
    3519 000789 2264          T0 = T2   ; |1346| 
    3520 00078b       $C$L70:    
    3521                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1347,column 1,is_stmt
    3522 00078b 4E01          SP = SP + #1
    3523                      .dwcfi  cfa_offset, 3
    3524 00078d 50D4          XAR5 = popboth()
    3525                      .dwcfi  restore_reg, 26
    3526                      .dwcfi  cfa_offset, 2
    3527 00078f 5062          T2 = pop()
    3528                      .dwcfi  restore_reg, 14
    3529                      .dwcfi  cfa_offset, 1
    3530              $C$DW$254       .dwtag  DW_TAG_TI_branch
    3531                      .dwattr $C$DW$254, DW_AT_low_pc(0x00)
    3532                      .dwattr $C$DW$254, DW_AT_TI_return
    3533 000791 4804          return
    3534                                                      ; return occurs
    3535                      .dwattr $C$DW$243, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    3536                      .dwattr $C$DW$243, DW_AT_TI_end_line(0x543)
    3537                      .dwattr $C$DW$243, DW_AT_TI_end_column(0x01)
    3538                      .dwendentry
    3539                      .dwendtag $C$DW$243
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   74

    3540              
    3541 000793               .sect   ".text"
    3542                      .global _xQueueCRSendFromISR
    3543              
    3544              $C$DW$255       .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueCRSendFromISR")
    3545                      .dwattr $C$DW$255, DW_AT_low_pc(_xQueueCRSendFromISR)
    3546                      .dwattr $C$DW$255, DW_AT_high_pc(0x00)
    3547                      .dwattr $C$DW$255, DW_AT_TI_symbol_name("_xQueueCRSendFromISR")
    3548                      .dwattr $C$DW$255, DW_AT_external
    3549                      .dwattr $C$DW$255, DW_AT_type(*$C$DW$T$10)
    3550                      .dwattr $C$DW$255, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    3551                      .dwattr $C$DW$255, DW_AT_TI_begin_line(0x54a)
    3552                      .dwattr $C$DW$255, DW_AT_TI_begin_column(0x16)
    3553                      .dwattr $C$DW$255, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    3554                      .dwattr $C$DW$255, DW_AT_decl_line(0x54a)
    3555                      .dwattr $C$DW$255, DW_AT_decl_column(0x16)
    3556                      .dwattr $C$DW$255, DW_AT_TI_max_frame_size(0x04)
    3557                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1355,column 1,is_stmt,address _xQueueCRSendFromISR
    3558              
    3559                      .dwfde $C$DW$CIE, _xQueueCRSendFromISR
    3560              $C$DW$256       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    3561                      .dwattr $C$DW$256, DW_AT_TI_symbol_name("_pxQueue")
    3562                      .dwattr $C$DW$256, DW_AT_type(*$C$DW$T$82)
    3563                      .dwattr $C$DW$256, DW_AT_location[DW_OP_reg17]
    3564              $C$DW$257       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvItemToQueue")
    3565                      .dwattr $C$DW$257, DW_AT_TI_symbol_name("_pvItemToQueue")
    3566                      .dwattr $C$DW$257, DW_AT_type(*$C$DW$T$55)
    3567                      .dwattr $C$DW$257, DW_AT_location[DW_OP_reg19]
    3568              $C$DW$258       .dwtag  DW_TAG_formal_parameter, DW_AT_name("xCoRoutinePreviouslyWoken")
    3569                      .dwattr $C$DW$258, DW_AT_TI_symbol_name("_xCoRoutinePreviouslyWoken")
    3570                      .dwattr $C$DW$258, DW_AT_type(*$C$DW$T$10)
    3571                      .dwattr $C$DW$258, DW_AT_location[DW_OP_reg12]
    3572              ;*******************************************************************************
    3573              ;* FUNCTION NAME: xQueueCRSendFromISR                                          *
    3574              ;*                                                                             *
    3575              ;*   Function Uses Regs : T0,T2,AR0,XAR0,AR1,AR2,AR3,AR5,XAR5,SP,TC1,M40,SATA, *
    3576              ;*                        SATD,RDM,FRCT,SMUL                                   *
    3577              ;*   Save On Entry Regs : T2,AR5                                               *
    3578              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    3579              ;*   Total Frame Size   : 4 words                                              *
    3580              ;*                        (2 return address/alignment)                         *
    3581              ;*                        (2 register save area)                               *
    3582              ;*   Min System Stack   : 2 words                                              *
    3583              ;*******************************************************************************
    3584              
    3585              ;*******************************************************************************
    3586              ;*                                                                             *
    3587              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    3588              ;*                                                                             *
    3589              ;*******************************************************************************
    3590 000793       _xQueueCRSendFromISR:
    3591              ;* 1358 -----------------------    if ( (*pxQueue).uxMessagesWaiting >= (*pxQueue).uxLength ) goto g6;
    3592                      .dwcfi  cfa_offset, 1
    3593                      .dwcfi  save_reg_to_mem, 91, -1
    3594 000793 5066          push(T2)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   75

    3595                      .dwcfi  cfa_offset, 2
    3596                      .dwcfi  save_reg_to_mem, 14, -2
    3597 000795 50D5          pshboth(XAR5)
    3598                      .dwcfi  cfa_offset, 3
    3599                      .dwcfi  save_reg_to_mem, 26, -3
    3600 000797 4EFF          SP = SP + #-1
    3601                      .dwcfi  cfa_offset, 4
    3602              ;* T2    assigned to _xCoRoutinePreviouslyWoken
    3603              $C$DW$259       .dwtag  DW_TAG_variable, DW_AT_name("xCoRoutinePreviouslyWoken")
    3604                      .dwattr $C$DW$259, DW_AT_TI_symbol_name("_xCoRoutinePreviouslyWoken")
    3605                      .dwattr $C$DW$259, DW_AT_type(*$C$DW$T$10)
    3606                      .dwattr $C$DW$259, DW_AT_location[DW_OP_reg14]
    3607              ;* AR5   assigned to _pxQueue
    3608              $C$DW$260       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    3609                      .dwattr $C$DW$260, DW_AT_TI_symbol_name("_pxQueue")
    3610                      .dwattr $C$DW$260, DW_AT_type(*$C$DW$T$82)
    3611                      .dwattr $C$DW$260, DW_AT_location[DW_OP_reg27]
    3612              
    3613 000799 EC01          XAR5 = mar(*AR0)
         00079b DE   
    3614 00079c 2346  ||      T2 = T0   ; |1355| 
    3615              
    3616                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1358,column 2,is_stmt
    3617 00079e AAAD          AR2 = *AR5(#29) ; |1358| 
         0007a0 001D 
    3618 0007a2 ABAD          AR3 = *AR5(#28) ; |1358| 
         0007a4 001C 
    3619 0007a6 12B8          TC1 = uns(AR3 >= AR2) ; |1358| 
         0007a8 A4   
    3620 0007a9 0464          if (TC1) goto $C$L71 ; |1358| 
         0007ab 1F   
    3621                                                      ; branchcc occurs ; |1358| 
    3622              ;* 1360 -----------------------    prvCopyDataToQueue(pxQueue, pvItemToQueue, 0);
    3623              ;* 1364 -----------------------    if ( xCoRoutinePreviouslyWoken ) goto g6;
    3624                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1360,column 3,is_stmt
    3625              $C$DW$261       .dwtag  DW_TAG_TI_branch
    3626                      .dwattr $C$DW$261, DW_AT_low_pc(0x00)
    3627                      .dwattr $C$DW$261, DW_AT_name("_prvCopyDataToQueue")
    3628                      .dwattr $C$DW$261, DW_AT_TI_call
    3629              
    3630 0007ac 08FC          call #_prvCopyDataToQueue ; |1360| 
         0007ae D5   
    3631 0007af 3D04  ||      T0 = #0
    3632              
    3633                                                      ; call occurs [#_prvCopyDataToQueue] ; |1360| 
    3634                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1364,column 3,is_stmt
    3635 0007b1 0416          if (T2 != #0) goto $C$L71 ; |1364| 
         0007b3 17   
    3636                                                      ; branchcc occurs ; |1364| 
    3637              ;* 1366 -----------------------    if ( !(*pxQueue).xTasksWaitingToReceive.uxNumberOfItems ) goto g6;
    3638                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1366,column 4,is_stmt
    3639 0007b4 A9AD          AR1 = *AR5(#18) ; |1366| 
         0007b6 0012 
    3640 0007b8 0409          if (AR1 == #0) goto $C$L71 ; |1366| 
         0007ba 10   
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   76

    3641                                                      ; branchcc occurs ; |1366| 
    3642              ;* 1368 -----------------------    if ( !xCoRoutineRemoveFromEventList((struct _xLIST *)pxQueue+18L) ) goto g
    3643                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1368,column 5,is_stmt
    3644 0007bb ECA1          XAR0 = mar(*AR5)
         0007bd 8E   
    3645 0007be 1412          mar(AR0 + #18) ; |1368| 
         0007c0 84   
    3646              $C$DW$262       .dwtag  DW_TAG_TI_branch
    3647                      .dwattr $C$DW$262, DW_AT_low_pc(0x00)
    3648                      .dwattr $C$DW$262, DW_AT_name("_xCoRoutineRemoveFromEventList")
    3649                      .dwattr $C$DW$262, DW_AT_TI_call
    3650 0007c1 6C00          call #_xCoRoutineRemoveFromEventList ; |1368| 
         0007c3 0000!
    3651                                                      ; call occurs [#_xCoRoutineRemoveFromEventList] ; |1368| 
    3652 0007c5 6204          if (T0 == #0) goto $C$L71 ; |1368| 
    3653                                                      ; branchcc occurs ; |1368| 
    3654              ;* 1370 -----------------------    return 1;
    3655                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1370,column 6,is_stmt
    3656              
    3657 0007c7 4A02          goto $C$L72 ; |1370| 
    3658 0007c9 3D14  ||      T0 = #1
    3659              
    3660                                                      ; branch occurs ; |1370| 
    3661 0007cb       $C$L71:    
    3662              ;**     -----------------------g6:
    3663              ;* 1376 -----------------------    return xCoRoutinePreviouslyWoken;
    3664                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1376,column 2,is_stmt
    3665 0007cb 2264          T0 = T2   ; |1376| 
    3666 0007cd       $C$L72:    
    3667                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1377,column 1,is_stmt
    3668 0007cd 4E01          SP = SP + #1
    3669                      .dwcfi  cfa_offset, 3
    3670 0007cf 50D4          XAR5 = popboth()
    3671                      .dwcfi  restore_reg, 26
    3672                      .dwcfi  cfa_offset, 2
    3673 0007d1 5062          T2 = pop()
    3674                      .dwcfi  restore_reg, 14
    3675                      .dwcfi  cfa_offset, 1
    3676              $C$DW$263       .dwtag  DW_TAG_TI_branch
    3677                      .dwattr $C$DW$263, DW_AT_low_pc(0x00)
    3678                      .dwattr $C$DW$263, DW_AT_TI_return
    3679 0007d3 4804          return
    3680                                                      ; return occurs
    3681                      .dwattr $C$DW$255, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    3682                      .dwattr $C$DW$255, DW_AT_TI_end_line(0x561)
    3683                      .dwattr $C$DW$255, DW_AT_TI_end_column(0x01)
    3684                      .dwendentry
    3685                      .dwendtag $C$DW$255
    3686              
    3687 0007d5               .sect   ".text"
    3688                      .global _xQueueCRReceiveFromISR
    3689              
    3690              $C$DW$264       .dwtag  DW_TAG_subprogram, DW_AT_name("xQueueCRReceiveFromISR")
    3691                      .dwattr $C$DW$264, DW_AT_low_pc(_xQueueCRReceiveFromISR)
    3692                      .dwattr $C$DW$264, DW_AT_high_pc(0x00)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   77

    3693                      .dwattr $C$DW$264, DW_AT_TI_symbol_name("_xQueueCRReceiveFromISR")
    3694                      .dwattr $C$DW$264, DW_AT_external
    3695                      .dwattr $C$DW$264, DW_AT_type(*$C$DW$T$10)
    3696                      .dwattr $C$DW$264, DW_AT_TI_begin_file("../FreeRTOS/Source/queue.c")
    3697                      .dwattr $C$DW$264, DW_AT_TI_begin_line(0x566)
    3698                      .dwattr $C$DW$264, DW_AT_TI_begin_column(0x16)
    3699                      .dwattr $C$DW$264, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    3700                      .dwattr $C$DW$264, DW_AT_decl_line(0x566)
    3701                      .dwattr $C$DW$264, DW_AT_decl_column(0x16)
    3702                      .dwattr $C$DW$264, DW_AT_TI_max_frame_size(0x04)
    3703                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1383,column 1,is_stmt,address _xQueueCRReceiveFromISR
    3704              
    3705                      .dwfde $C$DW$CIE, _xQueueCRReceiveFromISR
    3706              $C$DW$265       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxQueue")
    3707                      .dwattr $C$DW$265, DW_AT_TI_symbol_name("_pxQueue")
    3708                      .dwattr $C$DW$265, DW_AT_type(*$C$DW$T$82)
    3709                      .dwattr $C$DW$265, DW_AT_location[DW_OP_reg17]
    3710              $C$DW$266       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pvBuffer")
    3711                      .dwattr $C$DW$266, DW_AT_TI_symbol_name("_pvBuffer")
    3712                      .dwattr $C$DW$266, DW_AT_type(*$C$DW$T$3)
    3713                      .dwattr $C$DW$266, DW_AT_location[DW_OP_reg19]
    3714              $C$DW$267       .dwtag  DW_TAG_formal_parameter, DW_AT_name("pxCoRoutineWoken")
    3715                      .dwattr $C$DW$267, DW_AT_TI_symbol_name("_pxCoRoutineWoken")
    3716                      .dwattr $C$DW$267, DW_AT_type(*$C$DW$T$90)
    3717                      .dwattr $C$DW$267, DW_AT_location[DW_OP_reg21]
    3718              ;*******************************************************************************
    3719              ;* FUNCTION NAME: xQueueCRReceiveFromISR                                       *
    3720              ;*                                                                             *
    3721              ;*   Function Uses Regs : AC0,AC0,AC1,AC1,T0,AR0,XAR0,AR1,XAR1,AR2,XAR2,AR3,   *
    3722              ;*                        XAR3,AR5,XAR5,AR7,XAR7,SP,CARRY,TC1,M40,SATA,SATD,   *
    3723              ;*                        RDM,FRCT,SMUL                                        *
    3724              ;*   Save On Entry Regs : AR5,AR7                                              *
    3725              ;*   Stack Frame        : Compact (No Frame Pointer, w/ debug)                 *
    3726              ;*   Total Frame Size   : 4 words                                              *
    3727              ;*                        (2 return address/alignment)                         *
    3728              ;*                        (2 register save area)                               *
    3729              ;*   Min System Stack   : 3 words                                              *
    3730              ;*******************************************************************************
    3731              
    3732              ;*******************************************************************************
    3733              ;*                                                                             *
    3734              ;* Using -g (debug) with optimization (-o0) may disable key optimizations!     *
    3735              ;*                                                                             *
    3736              ;*******************************************************************************
    3737 0007d5       _xQueueCRReceiveFromISR:
    3738              ;* 1388 -----------------------    if ( !(*pxQueue).uxMessagesWaiting ) goto g9;
    3739                      .dwcfi  cfa_offset, 1
    3740                      .dwcfi  save_reg_to_mem, 91, -1
    3741 0007d5 50D5          pshboth(XAR5)
    3742                      .dwcfi  cfa_offset, 2
    3743                      .dwcfi  save_reg_to_mem, 26, -2
    3744 0007d7 50F5          pshboth(XAR7)
    3745                      .dwcfi  cfa_offset, 3
    3746                      .dwcfi  save_reg_to_mem, 30, -3
    3747 0007d9 4EFF          SP = SP + #-1
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   78

    3748                      .dwcfi  cfa_offset, 4
    3749              ;* T0    assigned to _xReturn
    3750              $C$DW$268       .dwtag  DW_TAG_variable, DW_AT_name("xReturn")
    3751                      .dwattr $C$DW$268, DW_AT_TI_symbol_name("_xReturn")
    3752                      .dwattr $C$DW$268, DW_AT_type(*$C$DW$T$10)
    3753                      .dwattr $C$DW$268, DW_AT_location[DW_OP_reg12]
    3754              ;* AR7   assigned to _pxCoRoutineWoken
    3755              $C$DW$269       .dwtag  DW_TAG_variable, DW_AT_name("pxCoRoutineWoken")
    3756                      .dwattr $C$DW$269, DW_AT_TI_symbol_name("_pxCoRoutineWoken")
    3757                      .dwattr $C$DW$269, DW_AT_type(*$C$DW$T$90)
    3758                      .dwattr $C$DW$269, DW_AT_location[DW_OP_reg31]
    3759              ;* AR0   assigned to _pvBuffer
    3760              $C$DW$270       .dwtag  DW_TAG_variable, DW_AT_name("pvBuffer")
    3761                      .dwattr $C$DW$270, DW_AT_TI_symbol_name("_pvBuffer")
    3762                      .dwattr $C$DW$270, DW_AT_type(*$C$DW$T$3)
    3763                      .dwattr $C$DW$270, DW_AT_location[DW_OP_reg17]
    3764              ;* AR5   assigned to _pxQueue
    3765              $C$DW$271       .dwtag  DW_TAG_variable, DW_AT_name("pxQueue")
    3766                      .dwattr $C$DW$271, DW_AT_TI_symbol_name("_pxQueue")
    3767                      .dwattr $C$DW$271, DW_AT_type(*$C$DW$T$82)
    3768                      .dwattr $C$DW$271, DW_AT_location[DW_OP_reg27]
    3769 0007db EC41          XAR7 = mar(*AR2)
         0007dd FE   
    3770 0007de EC01          XAR5 = mar(*AR0)
         0007e0 DE   
    3771 0007e1 EC21          XAR0 = mar(*AR1)
         0007e3 8E   
    3772                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1388,column 2,is_stmt
    3773 0007e4 A9AD          AR1 = *AR5(#28) ; |1388| 
         0007e6 001C 
    3774 0007e8 0409          if (AR1 == #0) goto $C$L75 ; |1388| 
         0007ea 55   
    3775                                                      ; branchcc occurs ; |1388| 
    3776              ;* 1391 -----------------------    (*pxQueue).pcReadFrom = (*pxQueue).pcReadFrom+(*pxQueue).uxItemSize;
    3777              ;* 1392 -----------------------    if ( (*pxQueue).pcReadFrom < (*pxQueue).pcTail ) goto g4;
    3778                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1391,column 3,is_stmt
    3779 0007eb EDBD          XAR3 = dbl(*AR5(short(#6)))
         0007ed BF   
    3780 0007ee DFAD          AC0 = uns(*AR5(#30)) ; |1391| 
         0007f0 0500 
         0007f2 1E   
    3781 0007f3 900A          XAR2 = AC0
    3782              
    3783 0007f5 8EBD          dbl(*AR5(short(#6))) = XAR3
         0007f7 BB10 
         0007f9 B5A1 
    3784              ||      mar(XAR3 + XAR2) ; |1391| 
    3785              
    3786                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1392,column 3,is_stmt
    3787 0007fb EDB5          XAR3 = dbl(*AR5(short(#2)))
         0007fd BF   
    3788 0007fe 90B0          AC0 = XAR3
    3789 000800 EDBD          XAR3 = dbl(*AR5(short(#6)))
         000802 BF   
    3790 000803 90B1          AC1 = XAR3
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   79

    3791 000805 1214          TC1 = uns(AC1 < AC0) ; |1392| 
         000807 04   
    3792 000808 6364          if (TC1) goto $C$L73 ; |1392| 
    3793                                                      ; branchcc occurs ; |1392| 
    3794              ;* 1394 -----------------------    (*pxQueue).pcReadFrom = (*pxQueue).pcHead;
    3795                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1394,column 4,is_stmt
    3796 00080a EDA1          XAR3 = dbl(*AR5)
         00080c BF   
    3797 00080d EBBD          dbl(*AR5(short(#6))) = XAR3
         00080f B5   
    3798 000810       $C$L73:    
    3799              ;**     -----------------------g4:
    3800              ;* 1396 -----------------------    --(*pxQueue).uxMessagesWaiting;
    3801              ;* 1397 -----------------------    memcpy(pvBuffer, (const void *)(*pxQueue).pcReadFrom, (unsigned long)(*pxQ
    3802              ;* 1399 -----------------------    if ( *pxCoRoutineWoken ) goto g8;
    3803                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1396,column 3,is_stmt
    3804 000810 F7AD          *AR5(#28) = *AR5(#28) - #1 ; |1396| 
         000812 FFFF 
         000814 001C 
    3805                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1397,column 3,is_stmt
    3806 000816 EDBD          XAR1 = dbl(*AR5(short(#6)))
         000818 9F   
    3807 000819 DFAD          AC0 = uns(*AR5(#30)) ; |1397| 
         00081b 0500 
         00081d 1E   
    3808              $C$DW$272       .dwtag  DW_TAG_TI_branch
    3809                      .dwattr $C$DW$272, DW_AT_low_pc(0x00)
    3810                      .dwattr $C$DW$272, DW_AT_name("_memcpy")
    3811                      .dwattr $C$DW$272, DW_AT_TI_call
    3812 00081e 6C00          call #_memcpy ; |1397| 
         000820 0000!
    3813                                                      ; call occurs [#_memcpy] ; |1397| 
    3814                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1399,column 3,is_stmt
    3815 000822 A9E1          AR1 = *AR7 ; |1399| 
    3816 000824 0419          if (AR1 != #0) goto $C$L74 ; |1399| 
         000826 15   
    3817                                                      ; branchcc occurs ; |1399| 
    3818              ;* 1401 -----------------------    if ( !(*pxQueue).xTasksWaitingToSend.uxNumberOfItems ) goto g8;
    3819                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1401,column 4,is_stmt
    3820 000827 A9AD          AR1 = *AR5(#8) ; |1401| 
         000829 0008 
    3821 00082b 6789          if (AR1 == #0) goto $C$L74 ; |1401| 
    3822                                                      ; branchcc occurs ; |1401| 
    3823              ;* 1403 -----------------------    if ( !xCoRoutineRemoveFromEventList((struct _xLIST *)pxQueue+8L) ) goto g8
    3824                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1403,column 5,is_stmt
    3825 00082d ECA1          XAR0 = mar(*AR5)
         00082f 8E   
    3826 000830 1408          mar(AR0 + #8) ; |1403| 
         000832 84   
    3827              $C$DW$273       .dwtag  DW_TAG_TI_branch
    3828                      .dwattr $C$DW$273, DW_AT_low_pc(0x00)
    3829                      .dwattr $C$DW$273, DW_AT_name("_xCoRoutineRemoveFromEventList")
    3830                      .dwattr $C$DW$273, DW_AT_TI_call
    3831 000833 6C00          call #_xCoRoutineRemoveFromEventList ; |1403| 
         000835 0000!
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   80

    3832                                                      ; call occurs [#_xCoRoutineRemoveFromEventList] ; |1403| 
    3833 000837 6184          if (T0 == #0) goto $C$L74 ; |1403| 
    3834                                                      ; branchcc occurs ; |1403| 
    3835              ;* 1405 -----------------------    *pxCoRoutineWoken = 1;
    3836                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1405,column 6,is_stmt
    3837 000839 E6E1          *AR7 = #1 ; |1405| 
         00083b 01   
    3838 00083c       $C$L74:    
    3839              ;**     -----------------------g8:
    3840              ;* 1410 -----------------------    xReturn = 1;
    3841              ;* 1411 -----------------------    goto g10;
    3842                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1410,column 3,is_stmt
    3843 00083c 3C14          T0 = #1
    3844                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1411,column 2,is_stmt
    3845 00083e 4A02          goto $C$L76 ; |1411| 
    3846                                                      ; branch occurs ; |1411| 
    3847 000840       $C$L75:    
    3848              ;**     -----------------------g9:
    3849              ;* 1414 -----------------------    xReturn = 0;
    3850                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1414,column 3,is_stmt
    3851 000840 3C04          T0 = #0
    3852 000842       $C$L76:    
    3853              ;**     -----------------------g10:
    3854              ;* 1417 -----------------------    return xReturn;
    3855                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1417,column 2,is_stmt
    3856                      .dwpsn  file "../FreeRTOS/Source/queue.c",line 1418,column 1,is_stmt
    3857 000842 4E01          SP = SP + #1
    3858                      .dwcfi  cfa_offset, 3
    3859 000844 50F4          XAR7 = popboth()
    3860                      .dwcfi  restore_reg, 30
    3861                      .dwcfi  cfa_offset, 2
    3862 000846 50D4          XAR5 = popboth()
    3863                      .dwcfi  restore_reg, 26
    3864                      .dwcfi  cfa_offset, 1
    3865              $C$DW$274       .dwtag  DW_TAG_TI_branch
    3866                      .dwattr $C$DW$274, DW_AT_low_pc(0x00)
    3867                      .dwattr $C$DW$274, DW_AT_TI_return
    3868 000848 4804          return
    3869                                                      ; return occurs
    3870                      .dwattr $C$DW$264, DW_AT_TI_end_file("../FreeRTOS/Source/queue.c")
    3871                      .dwattr $C$DW$264, DW_AT_TI_end_line(0x58a)
    3872                      .dwattr $C$DW$264, DW_AT_TI_end_column(0x01)
    3873                      .dwendentry
    3874                      .dwendtag $C$DW$264
    3875              
    3876              ;******************************************************************************
    3877              ;* UNDEFINED EXTERNAL REFERENCES                                              *
    3878              ;******************************************************************************
    3879                      .global _vPortYield
    3880                      .global _pvPortMalloc
    3881                      .global _vPortFree
    3882                      .global _vListInitialise
    3883                      .global _vTaskSuspendAll
    3884                      .global _xTaskResumeAll
    3885                      .global _vTaskPlaceOnEventList
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   81

    3886                      .global _xTaskRemoveFromEventList
    3887                      .global _vTaskSetTimeOutState
    3888                      .global _xTaskCheckForTimeOut
    3889                      .global _vTaskMissedYield
    3890                      .global _vCoRoutineAddToDelayedList
    3891                      .global _xCoRoutineRemoveFromEventList
    3892                      .global _usCriticalNesting
    3893                      .global _memcpy
    3894              
    3895              ;*******************************************************************************
    3896              ;* TYPE INFORMATION                                                            *
    3897              ;*******************************************************************************
    3898              $C$DW$T$3       .dwtag  DW_TAG_pointer_type
    3899                      .dwattr $C$DW$T$3, DW_AT_address_class(0x17)
    3900              $C$DW$T$49      .dwtag  DW_TAG_typedef, DW_AT_name("xCoRoutineHandle")
    3901                      .dwattr $C$DW$T$49, DW_AT_type(*$C$DW$T$3)
    3902                      .dwattr $C$DW$T$49, DW_AT_language(DW_LANG_C)
    3903                      .dwattr $C$DW$T$49, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    3904                      .dwattr $C$DW$T$49, DW_AT_decl_line(0x49)
    3905                      .dwattr $C$DW$T$49, DW_AT_decl_column(0x10)
    3906              $C$DW$275       .dwtag  DW_TAG_TI_far_type
    3907                      .dwattr $C$DW$275, DW_AT_type(*$C$DW$T$3)
    3908              $C$DW$T$60      .dwtag  DW_TAG_const_type
    3909                      .dwattr $C$DW$T$60, DW_AT_type(*$C$DW$275)
    3910              $C$DW$T$61      .dwtag  DW_TAG_typedef, DW_AT_name("xTaskHandle")
    3911                      .dwattr $C$DW$T$61, DW_AT_type(*$C$DW$T$3)
    3912                      .dwattr $C$DW$T$61, DW_AT_language(DW_LANG_C)
    3913                      .dwattr $C$DW$T$61, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    3914                      .dwattr $C$DW$T$61, DW_AT_decl_line(0x57)
    3915                      .dwattr $C$DW$T$61, DW_AT_decl_column(0x10)
    3916              
    3917              $C$DW$T$39      .dwtag  DW_TAG_subroutine_type
    3918                      .dwattr $C$DW$T$39, DW_AT_language(DW_LANG_C)
    3919              $C$DW$276       .dwtag  DW_TAG_formal_parameter
    3920                      .dwattr $C$DW$276, DW_AT_type(*$C$DW$T$3)
    3921                      .dwendtag $C$DW$T$39
    3922              
    3923              $C$DW$T$40      .dwtag  DW_TAG_pointer_type
    3924                      .dwattr $C$DW$T$40, DW_AT_type(*$C$DW$T$39)
    3925                      .dwattr $C$DW$T$40, DW_AT_address_class(0x20)
    3926              $C$DW$T$41      .dwtag  DW_TAG_typedef, DW_AT_name("pdTASK_CODE")
    3927                      .dwattr $C$DW$T$41, DW_AT_type(*$C$DW$T$40)
    3928                      .dwattr $C$DW$T$41, DW_AT_language(DW_LANG_C)
    3929                      .dwattr $C$DW$T$41, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\i
    3930                      .dwattr $C$DW$T$41, DW_AT_decl_line(0x3a)
    3931                      .dwattr $C$DW$T$41, DW_AT_decl_column(0x10)
    3932              
    3933              $C$DW$T$50      .dwtag  DW_TAG_subroutine_type
    3934                      .dwattr $C$DW$T$50, DW_AT_language(DW_LANG_C)
    3935              $C$DW$277       .dwtag  DW_TAG_formal_parameter
    3936                      .dwattr $C$DW$277, DW_AT_type(*$C$DW$T$49)
    3937              $C$DW$278       .dwtag  DW_TAG_formal_parameter
    3938                      .dwattr $C$DW$278, DW_AT_type(*$C$DW$T$11)
    3939                      .dwendtag $C$DW$T$50
    3940              
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   82

    3941              $C$DW$T$51      .dwtag  DW_TAG_pointer_type
    3942                      .dwattr $C$DW$T$51, DW_AT_type(*$C$DW$T$50)
    3943                      .dwattr $C$DW$T$51, DW_AT_address_class(0x20)
    3944              $C$DW$T$52      .dwtag  DW_TAG_typedef, DW_AT_name("crCOROUTINE_CODE")
    3945                      .dwattr $C$DW$T$52, DW_AT_type(*$C$DW$T$51)
    3946                      .dwattr $C$DW$T$52, DW_AT_language(DW_LANG_C)
    3947                      .dwattr $C$DW$T$52, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    3948                      .dwattr $C$DW$T$52, DW_AT_decl_line(0x4c)
    3949                      .dwattr $C$DW$T$52, DW_AT_decl_column(0x10)
    3950              $C$DW$279       .dwtag  DW_TAG_TI_far_type
    3951              $C$DW$T$54      .dwtag  DW_TAG_const_type
    3952                      .dwattr $C$DW$T$54, DW_AT_type(*$C$DW$279)
    3953              $C$DW$T$55      .dwtag  DW_TAG_pointer_type
    3954                      .dwattr $C$DW$T$55, DW_AT_type(*$C$DW$T$54)
    3955                      .dwattr $C$DW$T$55, DW_AT_address_class(0x17)
    3956              $C$DW$280       .dwtag  DW_TAG_TI_far_type
    3957                      .dwattr $C$DW$280, DW_AT_type(*$C$DW$T$55)
    3958              $C$DW$T$62      .dwtag  DW_TAG_const_type
    3959                      .dwattr $C$DW$T$62, DW_AT_type(*$C$DW$280)
    3960              $C$DW$T$4       .dwtag  DW_TAG_base_type
    3961                      .dwattr $C$DW$T$4, DW_AT_encoding(DW_ATE_boolean)
    3962                      .dwattr $C$DW$T$4, DW_AT_name("bool")
    3963                      .dwattr $C$DW$T$4, DW_AT_byte_size(0x01)
    3964              $C$DW$T$5       .dwtag  DW_TAG_base_type
    3965                      .dwattr $C$DW$T$5, DW_AT_encoding(DW_ATE_signed_char)
    3966                      .dwattr $C$DW$T$5, DW_AT_name("signed char")
    3967                      .dwattr $C$DW$T$5, DW_AT_byte_size(0x01)
    3968              $C$DW$T$32      .dwtag  DW_TAG_pointer_type
    3969                      .dwattr $C$DW$T$32, DW_AT_type(*$C$DW$T$5)
    3970                      .dwattr $C$DW$T$32, DW_AT_address_class(0x17)
    3971              $C$DW$281       .dwtag  DW_TAG_TI_far_type
    3972                      .dwattr $C$DW$281, DW_AT_type(*$C$DW$T$5)
    3973              $C$DW$T$42      .dwtag  DW_TAG_const_type
    3974                      .dwattr $C$DW$T$42, DW_AT_type(*$C$DW$281)
    3975              $C$DW$T$43      .dwtag  DW_TAG_pointer_type
    3976                      .dwattr $C$DW$T$43, DW_AT_type(*$C$DW$T$42)
    3977                      .dwattr $C$DW$T$43, DW_AT_address_class(0x17)
    3978              $C$DW$282       .dwtag  DW_TAG_TI_far_type
    3979                      .dwattr $C$DW$282, DW_AT_type(*$C$DW$T$43)
    3980              $C$DW$T$44      .dwtag  DW_TAG_const_type
    3981                      .dwattr $C$DW$T$44, DW_AT_type(*$C$DW$282)
    3982              $C$DW$T$6       .dwtag  DW_TAG_base_type
    3983                      .dwattr $C$DW$T$6, DW_AT_encoding(DW_ATE_unsigned_char)
    3984                      .dwattr $C$DW$T$6, DW_AT_name("unsigned char")
    3985                      .dwattr $C$DW$T$6, DW_AT_byte_size(0x01)
    3986              $C$DW$T$7       .dwtag  DW_TAG_base_type
    3987                      .dwattr $C$DW$T$7, DW_AT_encoding(DW_ATE_signed_char)
    3988                      .dwattr $C$DW$T$7, DW_AT_name("wchar_t")
    3989                      .dwattr $C$DW$T$7, DW_AT_byte_size(0x01)
    3990              $C$DW$T$8       .dwtag  DW_TAG_base_type
    3991                      .dwattr $C$DW$T$8, DW_AT_encoding(DW_ATE_signed)
    3992                      .dwattr $C$DW$T$8, DW_AT_name("short")
    3993                      .dwattr $C$DW$T$8, DW_AT_byte_size(0x01)
    3994              $C$DW$T$9       .dwtag  DW_TAG_base_type
    3995                      .dwattr $C$DW$T$9, DW_AT_encoding(DW_ATE_unsigned)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   83

    3996                      .dwattr $C$DW$T$9, DW_AT_name("unsigned short")
    3997                      .dwattr $C$DW$T$9, DW_AT_byte_size(0x01)
    3998              $C$DW$T$10      .dwtag  DW_TAG_base_type
    3999                      .dwattr $C$DW$T$10, DW_AT_encoding(DW_ATE_signed)
    4000                      .dwattr $C$DW$T$10, DW_AT_name("int")
    4001                      .dwattr $C$DW$T$10, DW_AT_byte_size(0x01)
    4002              $C$DW$T$90      .dwtag  DW_TAG_pointer_type
    4003                      .dwattr $C$DW$T$90, DW_AT_type(*$C$DW$T$10)
    4004                      .dwattr $C$DW$T$90, DW_AT_address_class(0x17)
    4005              
    4006              $C$DW$T$112     .dwtag  DW_TAG_subroutine_type
    4007                      .dwattr $C$DW$T$112, DW_AT_type(*$C$DW$T$10)
    4008                      .dwattr $C$DW$T$112, DW_AT_language(DW_LANG_C)
    4009              $C$DW$283       .dwtag  DW_TAG_formal_parameter
    4010                      .dwattr $C$DW$283, DW_AT_type(*$C$DW$T$3)
    4011                      .dwendtag $C$DW$T$112
    4012              
    4013              $C$DW$T$113     .dwtag  DW_TAG_pointer_type
    4014                      .dwattr $C$DW$T$113, DW_AT_type(*$C$DW$T$112)
    4015                      .dwattr $C$DW$T$113, DW_AT_address_class(0x20)
    4016              $C$DW$T$114     .dwtag  DW_TAG_typedef, DW_AT_name("pdTASK_HOOK_CODE")
    4017                      .dwattr $C$DW$T$114, DW_AT_type(*$C$DW$T$113)
    4018                      .dwattr $C$DW$T$114, DW_AT_language(DW_LANG_C)
    4019                      .dwattr $C$DW$T$114, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/
    4020                      .dwattr $C$DW$T$114, DW_AT_decl_line(0x4b)
    4021                      .dwattr $C$DW$T$114, DW_AT_decl_column(0x19)
    4022              $C$DW$T$11      .dwtag  DW_TAG_base_type
    4023                      .dwattr $C$DW$T$11, DW_AT_encoding(DW_ATE_unsigned)
    4024                      .dwattr $C$DW$T$11, DW_AT_name("unsigned int")
    4025                      .dwattr $C$DW$T$11, DW_AT_byte_size(0x01)
    4026              $C$DW$284       .dwtag  DW_TAG_TI_far_type
    4027                      .dwattr $C$DW$284, DW_AT_type(*$C$DW$T$11)
    4028              $C$DW$T$24      .dwtag  DW_TAG_volatile_type
    4029                      .dwattr $C$DW$T$24, DW_AT_type(*$C$DW$284)
    4030              $C$DW$T$45      .dwtag  DW_TAG_pointer_type
    4031                      .dwattr $C$DW$T$45, DW_AT_type(*$C$DW$T$11)
    4032                      .dwattr $C$DW$T$45, DW_AT_address_class(0x17)
    4033              $C$DW$T$117     .dwtag  DW_TAG_typedef, DW_AT_name("wchar_t")
    4034                      .dwattr $C$DW$T$117, DW_AT_type(*$C$DW$T$11)
    4035                      .dwattr $C$DW$T$117, DW_AT_language(DW_LANG_C)
    4036                      .dwattr $C$DW$T$117, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gene
    4037                      .dwattr $C$DW$T$117, DW_AT_decl_line(0x27)
    4038                      .dwattr $C$DW$T$117, DW_AT_decl_column(0x1a)
    4039              $C$DW$T$12      .dwtag  DW_TAG_base_type
    4040                      .dwattr $C$DW$T$12, DW_AT_encoding(DW_ATE_signed)
    4041                      .dwattr $C$DW$T$12, DW_AT_name("long")
    4042                      .dwattr $C$DW$T$12, DW_AT_byte_size(0x02)
    4043              $C$DW$T$118     .dwtag  DW_TAG_typedef, DW_AT_name("ptrdiff_t")
    4044                      .dwattr $C$DW$T$118, DW_AT_type(*$C$DW$T$12)
    4045                      .dwattr $C$DW$T$118, DW_AT_language(DW_LANG_C)
    4046                      .dwattr $C$DW$T$118, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gene
    4047                      .dwattr $C$DW$T$118, DW_AT_decl_line(0x11)
    4048                      .dwattr $C$DW$T$118, DW_AT_decl_column(0x1c)
    4049              $C$DW$T$13      .dwtag  DW_TAG_base_type
    4050                      .dwattr $C$DW$T$13, DW_AT_encoding(DW_ATE_unsigned)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   84

    4051                      .dwattr $C$DW$T$13, DW_AT_name("unsigned long")
    4052                      .dwattr $C$DW$T$13, DW_AT_byte_size(0x02)
    4053              $C$DW$T$19      .dwtag  DW_TAG_typedef, DW_AT_name("portTickType")
    4054                      .dwattr $C$DW$T$19, DW_AT_type(*$C$DW$T$13)
    4055                      .dwattr $C$DW$T$19, DW_AT_language(DW_LANG_C)
    4056                      .dwattr $C$DW$T$19, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\i
    4057                      .dwattr $C$DW$T$19, DW_AT_decl_line(0x55)
    4058                      .dwattr $C$DW$T$19, DW_AT_decl_column(0x1c)
    4059              $C$DW$T$95      .dwtag  DW_TAG_pointer_type
    4060                      .dwattr $C$DW$T$95, DW_AT_type(*$C$DW$T$19)
    4061                      .dwattr $C$DW$T$95, DW_AT_address_class(0x17)
    4062              $C$DW$285       .dwtag  DW_TAG_TI_far_type
    4063                      .dwattr $C$DW$285, DW_AT_type(*$C$DW$T$95)
    4064              $C$DW$T$96      .dwtag  DW_TAG_const_type
    4065                      .dwattr $C$DW$T$96, DW_AT_type(*$C$DW$285)
    4066              $C$DW$T$56      .dwtag  DW_TAG_typedef, DW_AT_name("size_t")
    4067                      .dwattr $C$DW$T$56, DW_AT_type(*$C$DW$T$13)
    4068                      .dwattr $C$DW$T$56, DW_AT_language(DW_LANG_C)
    4069                      .dwattr $C$DW$T$56, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gener
    4070                      .dwattr $C$DW$T$56, DW_AT_decl_line(0x21)
    4071                      .dwattr $C$DW$T$56, DW_AT_decl_column(0x19)
    4072              $C$DW$T$14      .dwtag  DW_TAG_base_type
    4073                      .dwattr $C$DW$T$14, DW_AT_encoding(DW_ATE_signed)
    4074                      .dwattr $C$DW$T$14, DW_AT_name("long long")
    4075                      .dwattr $C$DW$T$14, DW_AT_byte_size(0x04)
    4076                      .dwattr $C$DW$T$14, DW_AT_bit_size(0x28)
    4077                      .dwattr $C$DW$T$14, DW_AT_bit_offset(0x18)
    4078              $C$DW$T$15      .dwtag  DW_TAG_base_type
    4079                      .dwattr $C$DW$T$15, DW_AT_encoding(DW_ATE_unsigned)
    4080                      .dwattr $C$DW$T$15, DW_AT_name("unsigned long long")
    4081                      .dwattr $C$DW$T$15, DW_AT_byte_size(0x04)
    4082                      .dwattr $C$DW$T$15, DW_AT_bit_size(0x28)
    4083                      .dwattr $C$DW$T$15, DW_AT_bit_offset(0x18)
    4084              $C$DW$T$16      .dwtag  DW_TAG_base_type
    4085                      .dwattr $C$DW$T$16, DW_AT_encoding(DW_ATE_float)
    4086                      .dwattr $C$DW$T$16, DW_AT_name("float")
    4087                      .dwattr $C$DW$T$16, DW_AT_byte_size(0x02)
    4088              $C$DW$T$17      .dwtag  DW_TAG_base_type
    4089                      .dwattr $C$DW$T$17, DW_AT_encoding(DW_ATE_float)
    4090                      .dwattr $C$DW$T$17, DW_AT_name("double")
    4091                      .dwattr $C$DW$T$17, DW_AT_byte_size(0x02)
    4092              $C$DW$T$18      .dwtag  DW_TAG_base_type
    4093                      .dwattr $C$DW$T$18, DW_AT_encoding(DW_ATE_float)
    4094                      .dwattr $C$DW$T$18, DW_AT_name("long double")
    4095                      .dwattr $C$DW$T$18, DW_AT_byte_size(0x02)
    4096              
    4097              $C$DW$T$22      .dwtag  DW_TAG_structure_type
    4098                      .dwattr $C$DW$T$22, DW_AT_name("xLIST_ITEM")
    4099                      .dwattr $C$DW$T$22, DW_AT_byte_size(0x0a)
    4100              $C$DW$286       .dwtag  DW_TAG_member
    4101                      .dwattr $C$DW$286, DW_AT_type(*$C$DW$T$19)
    4102                      .dwattr $C$DW$286, DW_AT_name("xItemValue")
    4103                      .dwattr $C$DW$286, DW_AT_TI_symbol_name("_xItemValue")
    4104                      .dwattr $C$DW$286, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4105                      .dwattr $C$DW$286, DW_AT_accessibility(DW_ACCESS_public)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   85

    4106                      .dwattr $C$DW$286, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4107                      .dwattr $C$DW$286, DW_AT_decl_line(0x64)
    4108                      .dwattr $C$DW$286, DW_AT_decl_column(0x0f)
    4109              $C$DW$287       .dwtag  DW_TAG_member
    4110                      .dwattr $C$DW$287, DW_AT_type(*$C$DW$T$21)
    4111                      .dwattr $C$DW$287, DW_AT_name("pxNext")
    4112                      .dwattr $C$DW$287, DW_AT_TI_symbol_name("_pxNext")
    4113                      .dwattr $C$DW$287, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4114                      .dwattr $C$DW$287, DW_AT_accessibility(DW_ACCESS_public)
    4115                      .dwattr $C$DW$287, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4116                      .dwattr $C$DW$287, DW_AT_decl_line(0x65)
    4117                      .dwattr $C$DW$287, DW_AT_decl_column(0x1f)
    4118              $C$DW$288       .dwtag  DW_TAG_member
    4119                      .dwattr $C$DW$288, DW_AT_type(*$C$DW$T$21)
    4120                      .dwattr $C$DW$288, DW_AT_name("pxPrevious")
    4121                      .dwattr $C$DW$288, DW_AT_TI_symbol_name("_pxPrevious")
    4122                      .dwattr $C$DW$288, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4123                      .dwattr $C$DW$288, DW_AT_accessibility(DW_ACCESS_public)
    4124                      .dwattr $C$DW$288, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4125                      .dwattr $C$DW$288, DW_AT_decl_line(0x66)
    4126                      .dwattr $C$DW$288, DW_AT_decl_column(0x1f)
    4127              $C$DW$289       .dwtag  DW_TAG_member
    4128                      .dwattr $C$DW$289, DW_AT_type(*$C$DW$T$3)
    4129                      .dwattr $C$DW$289, DW_AT_name("pvOwner")
    4130                      .dwattr $C$DW$289, DW_AT_TI_symbol_name("_pvOwner")
    4131                      .dwattr $C$DW$289, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
    4132                      .dwattr $C$DW$289, DW_AT_accessibility(DW_ACCESS_public)
    4133                      .dwattr $C$DW$289, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4134                      .dwattr $C$DW$289, DW_AT_decl_line(0x67)
    4135                      .dwattr $C$DW$289, DW_AT_decl_column(0x09)
    4136              $C$DW$290       .dwtag  DW_TAG_member
    4137                      .dwattr $C$DW$290, DW_AT_type(*$C$DW$T$3)
    4138                      .dwattr $C$DW$290, DW_AT_name("pvContainer")
    4139                      .dwattr $C$DW$290, DW_AT_TI_symbol_name("_pvContainer")
    4140                      .dwattr $C$DW$290, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
    4141                      .dwattr $C$DW$290, DW_AT_accessibility(DW_ACCESS_public)
    4142                      .dwattr $C$DW$290, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4143                      .dwattr $C$DW$290, DW_AT_decl_line(0x68)
    4144                      .dwattr $C$DW$290, DW_AT_decl_column(0x09)
    4145                      .dwendtag $C$DW$T$22
    4146              
    4147                      .dwattr $C$DW$T$22, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\i
    4148                      .dwattr $C$DW$T$22, DW_AT_decl_line(0x62)
    4149                      .dwattr $C$DW$T$22, DW_AT_decl_column(0x08)
    4150              $C$DW$291       .dwtag  DW_TAG_TI_far_type
    4151                      .dwattr $C$DW$291, DW_AT_type(*$C$DW$T$22)
    4152              $C$DW$T$20      .dwtag  DW_TAG_volatile_type
    4153                      .dwattr $C$DW$T$20, DW_AT_type(*$C$DW$291)
    4154              $C$DW$T$21      .dwtag  DW_TAG_pointer_type
    4155                      .dwattr $C$DW$T$21, DW_AT_type(*$C$DW$T$20)
    4156                      .dwattr $C$DW$T$21, DW_AT_address_class(0x17)
    4157              $C$DW$T$25      .dwtag  DW_TAG_typedef, DW_AT_name("xListItem")
    4158                      .dwattr $C$DW$T$25, DW_AT_type(*$C$DW$T$22)
    4159                      .dwattr $C$DW$T$25, DW_AT_language(DW_LANG_C)
    4160                      .dwattr $C$DW$T$25, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\i
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   86

    4161                      .dwattr $C$DW$T$25, DW_AT_decl_line(0x6a)
    4162                      .dwattr $C$DW$T$25, DW_AT_decl_column(0x1b)
    4163              $C$DW$292       .dwtag  DW_TAG_TI_far_type
    4164                      .dwattr $C$DW$292, DW_AT_type(*$C$DW$T$25)
    4165              $C$DW$T$26      .dwtag  DW_TAG_volatile_type
    4166                      .dwattr $C$DW$T$26, DW_AT_type(*$C$DW$292)
    4167              $C$DW$T$27      .dwtag  DW_TAG_pointer_type
    4168                      .dwattr $C$DW$T$27, DW_AT_type(*$C$DW$T$26)
    4169                      .dwattr $C$DW$T$27, DW_AT_address_class(0x17)
    4170              
    4171              $C$DW$T$23      .dwtag  DW_TAG_structure_type
    4172                      .dwattr $C$DW$T$23, DW_AT_name("xMINI_LIST_ITEM")
    4173                      .dwattr $C$DW$T$23, DW_AT_byte_size(0x06)
    4174              $C$DW$293       .dwtag  DW_TAG_member
    4175                      .dwattr $C$DW$293, DW_AT_type(*$C$DW$T$19)
    4176                      .dwattr $C$DW$293, DW_AT_name("xItemValue")
    4177                      .dwattr $C$DW$293, DW_AT_TI_symbol_name("_xItemValue")
    4178                      .dwattr $C$DW$293, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4179                      .dwattr $C$DW$293, DW_AT_accessibility(DW_ACCESS_public)
    4180                      .dwattr $C$DW$293, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4181                      .dwattr $C$DW$293, DW_AT_decl_line(0x6e)
    4182                      .dwattr $C$DW$293, DW_AT_decl_column(0x0f)
    4183              $C$DW$294       .dwtag  DW_TAG_member
    4184                      .dwattr $C$DW$294, DW_AT_type(*$C$DW$T$21)
    4185                      .dwattr $C$DW$294, DW_AT_name("pxNext")
    4186                      .dwattr $C$DW$294, DW_AT_TI_symbol_name("_pxNext")
    4187                      .dwattr $C$DW$294, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4188                      .dwattr $C$DW$294, DW_AT_accessibility(DW_ACCESS_public)
    4189                      .dwattr $C$DW$294, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4190                      .dwattr $C$DW$294, DW_AT_decl_line(0x6f)
    4191                      .dwattr $C$DW$294, DW_AT_decl_column(0x1e)
    4192              $C$DW$295       .dwtag  DW_TAG_member
    4193                      .dwattr $C$DW$295, DW_AT_type(*$C$DW$T$21)
    4194                      .dwattr $C$DW$295, DW_AT_name("pxPrevious")
    4195                      .dwattr $C$DW$295, DW_AT_TI_symbol_name("_pxPrevious")
    4196                      .dwattr $C$DW$295, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4197                      .dwattr $C$DW$295, DW_AT_accessibility(DW_ACCESS_public)
    4198                      .dwattr $C$DW$295, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4199                      .dwattr $C$DW$295, DW_AT_decl_line(0x70)
    4200                      .dwattr $C$DW$295, DW_AT_decl_column(0x1e)
    4201                      .dwendtag $C$DW$T$23
    4202              
    4203                      .dwattr $C$DW$T$23, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\i
    4204                      .dwattr $C$DW$T$23, DW_AT_decl_line(0x6c)
    4205                      .dwattr $C$DW$T$23, DW_AT_decl_column(0x08)
    4206              $C$DW$T$28      .dwtag  DW_TAG_typedef, DW_AT_name("xMiniListItem")
    4207                      .dwattr $C$DW$T$28, DW_AT_type(*$C$DW$T$23)
    4208                      .dwattr $C$DW$T$28, DW_AT_language(DW_LANG_C)
    4209                      .dwattr $C$DW$T$28, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\i
    4210                      .dwattr $C$DW$T$28, DW_AT_decl_line(0x72)
    4211                      .dwattr $C$DW$T$28, DW_AT_decl_column(0x20)
    4212              $C$DW$296       .dwtag  DW_TAG_TI_far_type
    4213                      .dwattr $C$DW$296, DW_AT_type(*$C$DW$T$28)
    4214              $C$DW$T$29      .dwtag  DW_TAG_volatile_type
    4215                      .dwattr $C$DW$T$29, DW_AT_type(*$C$DW$296)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   87

    4216              
    4217              $C$DW$T$30      .dwtag  DW_TAG_structure_type
    4218                      .dwattr $C$DW$T$30, DW_AT_name("xLIST")
    4219                      .dwattr $C$DW$T$30, DW_AT_byte_size(0x0a)
    4220              $C$DW$297       .dwtag  DW_TAG_member
    4221                      .dwattr $C$DW$297, DW_AT_type(*$C$DW$T$24)
    4222                      .dwattr $C$DW$297, DW_AT_name("uxNumberOfItems")
    4223                      .dwattr $C$DW$297, DW_AT_TI_symbol_name("_uxNumberOfItems")
    4224                      .dwattr $C$DW$297, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4225                      .dwattr $C$DW$297, DW_AT_accessibility(DW_ACCESS_public)
    4226                      .dwattr $C$DW$297, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4227                      .dwattr $C$DW$297, DW_AT_decl_line(0x79)
    4228                      .dwattr $C$DW$297, DW_AT_decl_column(0x22)
    4229              $C$DW$298       .dwtag  DW_TAG_member
    4230                      .dwattr $C$DW$298, DW_AT_type(*$C$DW$T$27)
    4231                      .dwattr $C$DW$298, DW_AT_name("pxIndex")
    4232                      .dwattr $C$DW$298, DW_AT_TI_symbol_name("_pxIndex")
    4233                      .dwattr $C$DW$298, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4234                      .dwattr $C$DW$298, DW_AT_accessibility(DW_ACCESS_public)
    4235                      .dwattr $C$DW$298, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4236                      .dwattr $C$DW$298, DW_AT_decl_line(0x7a)
    4237                      .dwattr $C$DW$298, DW_AT_decl_column(0x17)
    4238              $C$DW$299       .dwtag  DW_TAG_member
    4239                      .dwattr $C$DW$299, DW_AT_type(*$C$DW$T$29)
    4240                      .dwattr $C$DW$299, DW_AT_name("xListEnd")
    4241                      .dwattr $C$DW$299, DW_AT_TI_symbol_name("_xListEnd")
    4242                      .dwattr $C$DW$299, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4243                      .dwattr $C$DW$299, DW_AT_accessibility(DW_ACCESS_public)
    4244                      .dwattr $C$DW$299, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\in
    4245                      .dwattr $C$DW$299, DW_AT_decl_line(0x7b)
    4246                      .dwattr $C$DW$299, DW_AT_decl_column(0x19)
    4247                      .dwendtag $C$DW$T$30
    4248              
    4249                      .dwattr $C$DW$T$30, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\i
    4250                      .dwattr $C$DW$T$30, DW_AT_decl_line(0x77)
    4251                      .dwattr $C$DW$T$30, DW_AT_decl_column(0x10)
    4252              $C$DW$T$33      .dwtag  DW_TAG_typedef, DW_AT_name("xList")
    4253                      .dwattr $C$DW$T$33, DW_AT_type(*$C$DW$T$30)
    4254                      .dwattr $C$DW$T$33, DW_AT_language(DW_LANG_C)
    4255                      .dwattr $C$DW$T$33, DW_AT_decl_file("E:\temp\c5515_eZdsp_FreeRTOS_Demo\EZDSP_Sample\FreeRTOS\Source\i
    4256                      .dwattr $C$DW$T$33, DW_AT_decl_line(0x7c)
    4257                      .dwattr $C$DW$T$33, DW_AT_decl_column(0x03)
    4258              $C$DW$T$65      .dwtag  DW_TAG_pointer_type
    4259                      .dwattr $C$DW$T$65, DW_AT_type(*$C$DW$T$33)
    4260                      .dwattr $C$DW$T$65, DW_AT_address_class(0x17)
    4261              $C$DW$300       .dwtag  DW_TAG_TI_far_type
    4262                      .dwattr $C$DW$300, DW_AT_type(*$C$DW$T$33)
    4263              $C$DW$T$68      .dwtag  DW_TAG_const_type
    4264                      .dwattr $C$DW$T$68, DW_AT_type(*$C$DW$300)
    4265              $C$DW$T$69      .dwtag  DW_TAG_pointer_type
    4266                      .dwattr $C$DW$T$69, DW_AT_type(*$C$DW$T$68)
    4267                      .dwattr $C$DW$T$69, DW_AT_address_class(0x17)
    4268              $C$DW$301       .dwtag  DW_TAG_TI_far_type
    4269                      .dwattr $C$DW$301, DW_AT_type(*$C$DW$T$69)
    4270              $C$DW$T$70      .dwtag  DW_TAG_const_type
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   88

    4271                      .dwattr $C$DW$T$70, DW_AT_type(*$C$DW$301)
    4272              
    4273              $C$DW$T$31      .dwtag  DW_TAG_structure_type
    4274                      .dwattr $C$DW$T$31, DW_AT_name("xTIME_OUT")
    4275                      .dwattr $C$DW$T$31, DW_AT_byte_size(0x04)
    4276              $C$DW$302       .dwtag  DW_TAG_member
    4277                      .dwattr $C$DW$302, DW_AT_type(*$C$DW$T$10)
    4278                      .dwattr $C$DW$302, DW_AT_name("xOverflowCount")
    4279                      .dwattr $C$DW$302, DW_AT_TI_symbol_name("_xOverflowCount")
    4280                      .dwattr $C$DW$302, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4281                      .dwattr $C$DW$302, DW_AT_accessibility(DW_ACCESS_public)
    4282                      .dwattr $C$DW$302, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4283                      .dwattr $C$DW$302, DW_AT_decl_line(0x5e)
    4284                      .dwattr $C$DW$302, DW_AT_decl_column(0x10)
    4285              $C$DW$303       .dwtag  DW_TAG_member
    4286                      .dwattr $C$DW$303, DW_AT_type(*$C$DW$T$19)
    4287                      .dwattr $C$DW$303, DW_AT_name("xTimeOnEntering")
    4288                      .dwattr $C$DW$303, DW_AT_TI_symbol_name("_xTimeOnEntering")
    4289                      .dwattr $C$DW$303, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4290                      .dwattr $C$DW$303, DW_AT_accessibility(DW_ACCESS_public)
    4291                      .dwattr $C$DW$303, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4292                      .dwattr $C$DW$303, DW_AT_decl_line(0x5f)
    4293                      .dwattr $C$DW$303, DW_AT_decl_column(0x10)
    4294                      .dwendtag $C$DW$T$31
    4295              
    4296                      .dwattr $C$DW$T$31, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    4297                      .dwattr $C$DW$T$31, DW_AT_decl_line(0x5c)
    4298                      .dwattr $C$DW$T$31, DW_AT_decl_column(0x10)
    4299              $C$DW$T$73      .dwtag  DW_TAG_typedef, DW_AT_name("xTimeOutType")
    4300                      .dwattr $C$DW$T$73, DW_AT_type(*$C$DW$T$31)
    4301                      .dwattr $C$DW$T$73, DW_AT_language(DW_LANG_C)
    4302                      .dwattr $C$DW$T$73, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    4303                      .dwattr $C$DW$T$73, DW_AT_decl_line(0x60)
    4304                      .dwattr $C$DW$T$73, DW_AT_decl_column(0x03)
    4305              $C$DW$T$74      .dwtag  DW_TAG_pointer_type
    4306                      .dwattr $C$DW$T$74, DW_AT_type(*$C$DW$T$73)
    4307                      .dwattr $C$DW$T$74, DW_AT_address_class(0x17)
    4308              $C$DW$304       .dwtag  DW_TAG_TI_far_type
    4309                      .dwattr $C$DW$304, DW_AT_type(*$C$DW$T$74)
    4310              $C$DW$T$75      .dwtag  DW_TAG_const_type
    4311                      .dwattr $C$DW$T$75, DW_AT_type(*$C$DW$304)
    4312              
    4313              $C$DW$T$34      .dwtag  DW_TAG_structure_type
    4314                      .dwattr $C$DW$T$34, DW_AT_name("QueueDefinition")
    4315                      .dwattr $C$DW$T$34, DW_AT_byte_size(0x22)
    4316              $C$DW$305       .dwtag  DW_TAG_member
    4317                      .dwattr $C$DW$305, DW_AT_type(*$C$DW$T$32)
    4318                      .dwattr $C$DW$305, DW_AT_name("pcHead")
    4319                      .dwattr $C$DW$305, DW_AT_TI_symbol_name("_pcHead")
    4320                      .dwattr $C$DW$305, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4321                      .dwattr $C$DW$305, DW_AT_accessibility(DW_ACCESS_public)
    4322                      .dwattr $C$DW$305, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4323                      .dwattr $C$DW$305, DW_AT_decl_line(0x65)
    4324                      .dwattr $C$DW$305, DW_AT_decl_column(0x0f)
    4325              $C$DW$306       .dwtag  DW_TAG_member
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   89

    4326                      .dwattr $C$DW$306, DW_AT_type(*$C$DW$T$32)
    4327                      .dwattr $C$DW$306, DW_AT_name("pcTail")
    4328                      .dwattr $C$DW$306, DW_AT_TI_symbol_name("_pcTail")
    4329                      .dwattr $C$DW$306, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4330                      .dwattr $C$DW$306, DW_AT_accessibility(DW_ACCESS_public)
    4331                      .dwattr $C$DW$306, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4332                      .dwattr $C$DW$306, DW_AT_decl_line(0x66)
    4333                      .dwattr $C$DW$306, DW_AT_decl_column(0x0f)
    4334              $C$DW$307       .dwtag  DW_TAG_member
    4335                      .dwattr $C$DW$307, DW_AT_type(*$C$DW$T$32)
    4336                      .dwattr $C$DW$307, DW_AT_name("pcWriteTo")
    4337                      .dwattr $C$DW$307, DW_AT_TI_symbol_name("_pcWriteTo")
    4338                      .dwattr $C$DW$307, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4339                      .dwattr $C$DW$307, DW_AT_accessibility(DW_ACCESS_public)
    4340                      .dwattr $C$DW$307, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4341                      .dwattr $C$DW$307, DW_AT_decl_line(0x68)
    4342                      .dwattr $C$DW$307, DW_AT_decl_column(0x0f)
    4343              $C$DW$308       .dwtag  DW_TAG_member
    4344                      .dwattr $C$DW$308, DW_AT_type(*$C$DW$T$32)
    4345                      .dwattr $C$DW$308, DW_AT_name("pcReadFrom")
    4346                      .dwattr $C$DW$308, DW_AT_TI_symbol_name("_pcReadFrom")
    4347                      .dwattr $C$DW$308, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
    4348                      .dwattr $C$DW$308, DW_AT_accessibility(DW_ACCESS_public)
    4349                      .dwattr $C$DW$308, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4350                      .dwattr $C$DW$308, DW_AT_decl_line(0x69)
    4351                      .dwattr $C$DW$308, DW_AT_decl_column(0x0f)
    4352              $C$DW$309       .dwtag  DW_TAG_member
    4353                      .dwattr $C$DW$309, DW_AT_type(*$C$DW$T$33)
    4354                      .dwattr $C$DW$309, DW_AT_name("xTasksWaitingToSend")
    4355                      .dwattr $C$DW$309, DW_AT_TI_symbol_name("_xTasksWaitingToSend")
    4356                      .dwattr $C$DW$309, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
    4357                      .dwattr $C$DW$309, DW_AT_accessibility(DW_ACCESS_public)
    4358                      .dwattr $C$DW$309, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4359                      .dwattr $C$DW$309, DW_AT_decl_line(0x6b)
    4360                      .dwattr $C$DW$309, DW_AT_decl_column(0x08)
    4361              $C$DW$310       .dwtag  DW_TAG_member
    4362                      .dwattr $C$DW$310, DW_AT_type(*$C$DW$T$33)
    4363                      .dwattr $C$DW$310, DW_AT_name("xTasksWaitingToReceive")
    4364                      .dwattr $C$DW$310, DW_AT_TI_symbol_name("_xTasksWaitingToReceive")
    4365                      .dwattr $C$DW$310, DW_AT_data_member_location[DW_OP_plus_uconst 0x12]
    4366                      .dwattr $C$DW$310, DW_AT_accessibility(DW_ACCESS_public)
    4367                      .dwattr $C$DW$310, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4368                      .dwattr $C$DW$310, DW_AT_decl_line(0x6c)
    4369                      .dwattr $C$DW$310, DW_AT_decl_column(0x08)
    4370              $C$DW$311       .dwtag  DW_TAG_member
    4371                      .dwattr $C$DW$311, DW_AT_type(*$C$DW$T$24)
    4372                      .dwattr $C$DW$311, DW_AT_name("uxMessagesWaiting")
    4373                      .dwattr $C$DW$311, DW_AT_TI_symbol_name("_uxMessagesWaiting")
    4374                      .dwattr $C$DW$311, DW_AT_data_member_location[DW_OP_plus_uconst 0x1c]
    4375                      .dwattr $C$DW$311, DW_AT_accessibility(DW_ACCESS_public)
    4376                      .dwattr $C$DW$311, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4377                      .dwattr $C$DW$311, DW_AT_decl_line(0x6e)
    4378                      .dwattr $C$DW$311, DW_AT_decl_column(0x22)
    4379              $C$DW$312       .dwtag  DW_TAG_member
    4380                      .dwattr $C$DW$312, DW_AT_type(*$C$DW$T$11)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   90

    4381                      .dwattr $C$DW$312, DW_AT_name("uxLength")
    4382                      .dwattr $C$DW$312, DW_AT_TI_symbol_name("_uxLength")
    4383                      .dwattr $C$DW$312, DW_AT_data_member_location[DW_OP_plus_uconst 0x1d]
    4384                      .dwattr $C$DW$312, DW_AT_accessibility(DW_ACCESS_public)
    4385                      .dwattr $C$DW$312, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4386                      .dwattr $C$DW$312, DW_AT_decl_line(0x6f)
    4387                      .dwattr $C$DW$312, DW_AT_decl_column(0x19)
    4388              $C$DW$313       .dwtag  DW_TAG_member
    4389                      .dwattr $C$DW$313, DW_AT_type(*$C$DW$T$11)
    4390                      .dwattr $C$DW$313, DW_AT_name("uxItemSize")
    4391                      .dwattr $C$DW$313, DW_AT_TI_symbol_name("_uxItemSize")
    4392                      .dwattr $C$DW$313, DW_AT_data_member_location[DW_OP_plus_uconst 0x1e]
    4393                      .dwattr $C$DW$313, DW_AT_accessibility(DW_ACCESS_public)
    4394                      .dwattr $C$DW$313, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4395                      .dwattr $C$DW$313, DW_AT_decl_line(0x70)
    4396                      .dwattr $C$DW$313, DW_AT_decl_column(0x19)
    4397              $C$DW$314       .dwtag  DW_TAG_member
    4398                      .dwattr $C$DW$314, DW_AT_type(*$C$DW$T$10)
    4399                      .dwattr $C$DW$314, DW_AT_name("xRxLock")
    4400                      .dwattr $C$DW$314, DW_AT_TI_symbol_name("_xRxLock")
    4401                      .dwattr $C$DW$314, DW_AT_data_member_location[DW_OP_plus_uconst 0x1f]
    4402                      .dwattr $C$DW$314, DW_AT_accessibility(DW_ACCESS_public)
    4403                      .dwattr $C$DW$314, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4404                      .dwattr $C$DW$314, DW_AT_decl_line(0x72)
    4405                      .dwattr $C$DW$314, DW_AT_decl_column(0x17)
    4406              $C$DW$315       .dwtag  DW_TAG_member
    4407                      .dwattr $C$DW$315, DW_AT_type(*$C$DW$T$10)
    4408                      .dwattr $C$DW$315, DW_AT_name("xTxLock")
    4409                      .dwattr $C$DW$315, DW_AT_TI_symbol_name("_xTxLock")
    4410                      .dwattr $C$DW$315, DW_AT_data_member_location[DW_OP_plus_uconst 0x20]
    4411                      .dwattr $C$DW$315, DW_AT_accessibility(DW_ACCESS_public)
    4412                      .dwattr $C$DW$315, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4413                      .dwattr $C$DW$315, DW_AT_decl_line(0x73)
    4414                      .dwattr $C$DW$315, DW_AT_decl_column(0x17)
    4415                      .dwendtag $C$DW$T$34
    4416              
    4417                      .dwattr $C$DW$T$34, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4418                      .dwattr $C$DW$T$34, DW_AT_decl_line(0x63)
    4419                      .dwattr $C$DW$T$34, DW_AT_decl_column(0x10)
    4420              $C$DW$T$80      .dwtag  DW_TAG_typedef, DW_AT_name("xQUEUE")
    4421                      .dwattr $C$DW$T$80, DW_AT_type(*$C$DW$T$34)
    4422                      .dwattr $C$DW$T$80, DW_AT_language(DW_LANG_C)
    4423                      .dwattr $C$DW$T$80, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4424                      .dwattr $C$DW$T$80, DW_AT_decl_line(0x75)
    4425                      .dwattr $C$DW$T$80, DW_AT_decl_column(0x03)
    4426              $C$DW$T$81      .dwtag  DW_TAG_pointer_type
    4427                      .dwattr $C$DW$T$81, DW_AT_type(*$C$DW$T$80)
    4428                      .dwattr $C$DW$T$81, DW_AT_address_class(0x17)
    4429              $C$DW$T$82      .dwtag  DW_TAG_typedef, DW_AT_name("xQueueHandle")
    4430                      .dwattr $C$DW$T$82, DW_AT_type(*$C$DW$T$81)
    4431                      .dwattr $C$DW$T$82, DW_AT_language(DW_LANG_C)
    4432                      .dwattr $C$DW$T$82, DW_AT_decl_file("../FreeRTOS/Source/queue.c")
    4433                      .dwattr $C$DW$T$82, DW_AT_decl_line(0x7d)
    4434                      .dwattr $C$DW$T$82, DW_AT_decl_column(0x12)
    4435              $C$DW$316       .dwtag  DW_TAG_TI_far_type
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   91

    4436                      .dwattr $C$DW$316, DW_AT_type(*$C$DW$T$82)
    4437              $C$DW$T$105     .dwtag  DW_TAG_const_type
    4438                      .dwattr $C$DW$T$105, DW_AT_type(*$C$DW$316)
    4439              $C$DW$317       .dwtag  DW_TAG_TI_far_type
    4440                      .dwattr $C$DW$317, DW_AT_type(*$C$DW$T$81)
    4441              $C$DW$T$87      .dwtag  DW_TAG_const_type
    4442                      .dwattr $C$DW$T$87, DW_AT_type(*$C$DW$317)
    4443              
    4444              $C$DW$T$35      .dwtag  DW_TAG_structure_type
    4445                      .dwattr $C$DW$T$35, DW_AT_byte_size(0x02)
    4446              $C$DW$318       .dwtag  DW_TAG_member
    4447                      .dwattr $C$DW$318, DW_AT_type(*$C$DW$T$10)
    4448                      .dwattr $C$DW$318, DW_AT_name("quot")
    4449                      .dwattr $C$DW$318, DW_AT_TI_symbol_name("_quot")
    4450                      .dwattr $C$DW$318, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4451                      .dwattr $C$DW$318, DW_AT_accessibility(DW_ACCESS_public)
    4452                      .dwattr $C$DW$318, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Genera
    4453                      .dwattr $C$DW$318, DW_AT_decl_line(0x12)
    4454                      .dwattr $C$DW$318, DW_AT_decl_column(0x16)
    4455              $C$DW$319       .dwtag  DW_TAG_member
    4456                      .dwattr $C$DW$319, DW_AT_type(*$C$DW$T$10)
    4457                      .dwattr $C$DW$319, DW_AT_name("rem")
    4458                      .dwattr $C$DW$319, DW_AT_TI_symbol_name("_rem")
    4459                      .dwattr $C$DW$319, DW_AT_data_member_location[DW_OP_plus_uconst 0x1]
    4460                      .dwattr $C$DW$319, DW_AT_accessibility(DW_ACCESS_public)
    4461                      .dwattr $C$DW$319, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Genera
    4462                      .dwattr $C$DW$319, DW_AT_decl_line(0x12)
    4463                      .dwattr $C$DW$319, DW_AT_decl_column(0x1c)
    4464                      .dwendtag $C$DW$T$35
    4465              
    4466                      .dwattr $C$DW$T$35, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gener
    4467                      .dwattr $C$DW$T$35, DW_AT_decl_line(0x12)
    4468                      .dwattr $C$DW$T$35, DW_AT_decl_column(0x10)
    4469              $C$DW$T$126     .dwtag  DW_TAG_typedef, DW_AT_name("div_t")
    4470                      .dwattr $C$DW$T$126, DW_AT_type(*$C$DW$T$35)
    4471                      .dwattr $C$DW$T$126, DW_AT_language(DW_LANG_C)
    4472                      .dwattr $C$DW$T$126, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gene
    4473                      .dwattr $C$DW$T$126, DW_AT_decl_line(0x12)
    4474                      .dwattr $C$DW$T$126, DW_AT_decl_column(0x23)
    4475              
    4476              $C$DW$T$36      .dwtag  DW_TAG_structure_type
    4477                      .dwattr $C$DW$T$36, DW_AT_byte_size(0x04)
    4478              $C$DW$320       .dwtag  DW_TAG_member
    4479                      .dwattr $C$DW$320, DW_AT_type(*$C$DW$T$12)
    4480                      .dwattr $C$DW$320, DW_AT_name("quot")
    4481                      .dwattr $C$DW$320, DW_AT_TI_symbol_name("_quot")
    4482                      .dwattr $C$DW$320, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4483                      .dwattr $C$DW$320, DW_AT_accessibility(DW_ACCESS_public)
    4484                      .dwattr $C$DW$320, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Genera
    4485                      .dwattr $C$DW$320, DW_AT_decl_line(0x14)
    4486                      .dwattr $C$DW$320, DW_AT_decl_column(0x17)
    4487              $C$DW$321       .dwtag  DW_TAG_member
    4488                      .dwattr $C$DW$321, DW_AT_type(*$C$DW$T$12)
    4489                      .dwattr $C$DW$321, DW_AT_name("rem")
    4490                      .dwattr $C$DW$321, DW_AT_TI_symbol_name("_rem")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   92

    4491                      .dwattr $C$DW$321, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4492                      .dwattr $C$DW$321, DW_AT_accessibility(DW_ACCESS_public)
    4493                      .dwattr $C$DW$321, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Genera
    4494                      .dwattr $C$DW$321, DW_AT_decl_line(0x14)
    4495                      .dwattr $C$DW$321, DW_AT_decl_column(0x1d)
    4496                      .dwendtag $C$DW$T$36
    4497              
    4498                      .dwattr $C$DW$T$36, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gener
    4499                      .dwattr $C$DW$T$36, DW_AT_decl_line(0x14)
    4500                      .dwattr $C$DW$T$36, DW_AT_decl_column(0x10)
    4501              $C$DW$T$127     .dwtag  DW_TAG_typedef, DW_AT_name("ldiv_t")
    4502                      .dwattr $C$DW$T$127, DW_AT_type(*$C$DW$T$36)
    4503                      .dwattr $C$DW$T$127, DW_AT_language(DW_LANG_C)
    4504                      .dwattr $C$DW$T$127, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gene
    4505                      .dwattr $C$DW$T$127, DW_AT_decl_line(0x14)
    4506                      .dwattr $C$DW$T$127, DW_AT_decl_column(0x24)
    4507              
    4508              $C$DW$T$37      .dwtag  DW_TAG_structure_type
    4509                      .dwattr $C$DW$T$37, DW_AT_byte_size(0x08)
    4510              $C$DW$322       .dwtag  DW_TAG_member
    4511                      .dwattr $C$DW$322, DW_AT_type(*$C$DW$T$14)
    4512                      .dwattr $C$DW$322, DW_AT_name("quot")
    4513                      .dwattr $C$DW$322, DW_AT_TI_symbol_name("_quot")
    4514                      .dwattr $C$DW$322, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4515                      .dwattr $C$DW$322, DW_AT_accessibility(DW_ACCESS_public)
    4516                      .dwattr $C$DW$322, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Genera
    4517                      .dwattr $C$DW$322, DW_AT_decl_line(0x17)
    4518                      .dwattr $C$DW$322, DW_AT_decl_column(0x1c)
    4519              $C$DW$323       .dwtag  DW_TAG_member
    4520                      .dwattr $C$DW$323, DW_AT_type(*$C$DW$T$14)
    4521                      .dwattr $C$DW$323, DW_AT_name("rem")
    4522                      .dwattr $C$DW$323, DW_AT_TI_symbol_name("_rem")
    4523                      .dwattr $C$DW$323, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4524                      .dwattr $C$DW$323, DW_AT_accessibility(DW_ACCESS_public)
    4525                      .dwattr $C$DW$323, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Genera
    4526                      .dwattr $C$DW$323, DW_AT_decl_line(0x17)
    4527                      .dwattr $C$DW$323, DW_AT_decl_column(0x22)
    4528                      .dwendtag $C$DW$T$37
    4529              
    4530                      .dwattr $C$DW$T$37, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gener
    4531                      .dwattr $C$DW$T$37, DW_AT_decl_line(0x17)
    4532                      .dwattr $C$DW$T$37, DW_AT_decl_column(0x10)
    4533              $C$DW$T$128     .dwtag  DW_TAG_typedef, DW_AT_name("lldiv_t")
    4534                      .dwattr $C$DW$T$128, DW_AT_type(*$C$DW$T$37)
    4535                      .dwattr $C$DW$T$128, DW_AT_language(DW_LANG_C)
    4536                      .dwattr $C$DW$T$128, DW_AT_decl_file("C:/Texas Instruments Tools/ccsv4/tools/compiler/C5500 Code Gene
    4537                      .dwattr $C$DW$T$128, DW_AT_decl_line(0x17)
    4538                      .dwattr $C$DW$T$128, DW_AT_decl_column(0x29)
    4539              
    4540              $C$DW$T$38      .dwtag  DW_TAG_structure_type
    4541                      .dwattr $C$DW$T$38, DW_AT_name("xMEMORY_REGION")
    4542                      .dwattr $C$DW$T$38, DW_AT_byte_size(0x06)
    4543              $C$DW$324       .dwtag  DW_TAG_member
    4544                      .dwattr $C$DW$324, DW_AT_type(*$C$DW$T$3)
    4545                      .dwattr $C$DW$324, DW_AT_name("pvBaseAddress")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   93

    4546                      .dwattr $C$DW$324, DW_AT_TI_symbol_name("_pvBaseAddress")
    4547                      .dwattr $C$DW$324, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4548                      .dwattr $C$DW$324, DW_AT_accessibility(DW_ACCESS_public)
    4549                      .dwattr $C$DW$324, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4550                      .dwattr $C$DW$324, DW_AT_decl_line(0x67)
    4551                      .dwattr $C$DW$324, DW_AT_decl_column(0x08)
    4552              $C$DW$325       .dwtag  DW_TAG_member
    4553                      .dwattr $C$DW$325, DW_AT_type(*$C$DW$T$13)
    4554                      .dwattr $C$DW$325, DW_AT_name("ulLengthInBytes")
    4555                      .dwattr $C$DW$325, DW_AT_TI_symbol_name("_ulLengthInBytes")
    4556                      .dwattr $C$DW$325, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4557                      .dwattr $C$DW$325, DW_AT_accessibility(DW_ACCESS_public)
    4558                      .dwattr $C$DW$325, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4559                      .dwattr $C$DW$325, DW_AT_decl_line(0x68)
    4560                      .dwattr $C$DW$325, DW_AT_decl_column(0x10)
    4561              $C$DW$326       .dwtag  DW_TAG_member
    4562                      .dwattr $C$DW$326, DW_AT_type(*$C$DW$T$13)
    4563                      .dwattr $C$DW$326, DW_AT_name("ulParameters")
    4564                      .dwattr $C$DW$326, DW_AT_TI_symbol_name("_ulParameters")
    4565                      .dwattr $C$DW$326, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4566                      .dwattr $C$DW$326, DW_AT_accessibility(DW_ACCESS_public)
    4567                      .dwattr $C$DW$326, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4568                      .dwattr $C$DW$326, DW_AT_decl_line(0x69)
    4569                      .dwattr $C$DW$326, DW_AT_decl_column(0x10)
    4570                      .dwendtag $C$DW$T$38
    4571              
    4572                      .dwattr $C$DW$T$38, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    4573                      .dwattr $C$DW$T$38, DW_AT_decl_line(0x65)
    4574                      .dwattr $C$DW$T$38, DW_AT_decl_column(0x10)
    4575              $C$DW$T$46      .dwtag  DW_TAG_typedef, DW_AT_name("xMemoryRegion")
    4576                      .dwattr $C$DW$T$46, DW_AT_type(*$C$DW$T$38)
    4577                      .dwattr $C$DW$T$46, DW_AT_language(DW_LANG_C)
    4578                      .dwattr $C$DW$T$46, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    4579                      .dwattr $C$DW$T$46, DW_AT_decl_line(0x6a)
    4580                      .dwattr $C$DW$T$46, DW_AT_decl_column(0x03)
    4581              
    4582              $C$DW$T$47      .dwtag  DW_TAG_array_type
    4583                      .dwattr $C$DW$T$47, DW_AT_type(*$C$DW$T$46)
    4584                      .dwattr $C$DW$T$47, DW_AT_language(DW_LANG_C)
    4585                      .dwattr $C$DW$T$47, DW_AT_byte_size(0x06)
    4586              $C$DW$327       .dwtag  DW_TAG_subrange_type
    4587                      .dwattr $C$DW$327, DW_AT_upper_bound(0x00)
    4588                      .dwendtag $C$DW$T$47
    4589              
    4590              
    4591              $C$DW$T$48      .dwtag  DW_TAG_structure_type
    4592                      .dwattr $C$DW$T$48, DW_AT_name("xTASK_PARAMTERS")
    4593                      .dwattr $C$DW$T$48, DW_AT_byte_size(0x12)
    4594              $C$DW$328       .dwtag  DW_TAG_member
    4595                      .dwattr $C$DW$328, DW_AT_type(*$C$DW$T$41)
    4596                      .dwattr $C$DW$328, DW_AT_name("pvTaskCode")
    4597                      .dwattr $C$DW$328, DW_AT_TI_symbol_name("_pvTaskCode")
    4598                      .dwattr $C$DW$328, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4599                      .dwattr $C$DW$328, DW_AT_accessibility(DW_ACCESS_public)
    4600                      .dwattr $C$DW$328, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   94

    4601                      .dwattr $C$DW$328, DW_AT_decl_line(0x71)
    4602                      .dwattr $C$DW$328, DW_AT_decl_column(0x0e)
    4603              $C$DW$329       .dwtag  DW_TAG_member
    4604                      .dwattr $C$DW$329, DW_AT_type(*$C$DW$T$44)
    4605                      .dwattr $C$DW$329, DW_AT_name("pcName")
    4606                      .dwattr $C$DW$329, DW_AT_TI_symbol_name("_pcName")
    4607                      .dwattr $C$DW$329, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4608                      .dwattr $C$DW$329, DW_AT_accessibility(DW_ACCESS_public)
    4609                      .dwattr $C$DW$329, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4610                      .dwattr $C$DW$329, DW_AT_decl_line(0x72)
    4611                      .dwattr $C$DW$329, DW_AT_decl_column(0x1c)
    4612              $C$DW$330       .dwtag  DW_TAG_member
    4613                      .dwattr $C$DW$330, DW_AT_type(*$C$DW$T$9)
    4614                      .dwattr $C$DW$330, DW_AT_name("usStackDepth")
    4615                      .dwattr $C$DW$330, DW_AT_TI_symbol_name("_usStackDepth")
    4616                      .dwattr $C$DW$330, DW_AT_data_member_location[DW_OP_plus_uconst 0x4]
    4617                      .dwattr $C$DW$330, DW_AT_accessibility(DW_ACCESS_public)
    4618                      .dwattr $C$DW$330, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4619                      .dwattr $C$DW$330, DW_AT_decl_line(0x73)
    4620                      .dwattr $C$DW$330, DW_AT_decl_column(0x11)
    4621              $C$DW$331       .dwtag  DW_TAG_member
    4622                      .dwattr $C$DW$331, DW_AT_type(*$C$DW$T$3)
    4623                      .dwattr $C$DW$331, DW_AT_name("pvParameters")
    4624                      .dwattr $C$DW$331, DW_AT_TI_symbol_name("_pvParameters")
    4625                      .dwattr $C$DW$331, DW_AT_data_member_location[DW_OP_plus_uconst 0x6]
    4626                      .dwattr $C$DW$331, DW_AT_accessibility(DW_ACCESS_public)
    4627                      .dwattr $C$DW$331, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4628                      .dwattr $C$DW$331, DW_AT_decl_line(0x74)
    4629                      .dwattr $C$DW$331, DW_AT_decl_column(0x08)
    4630              $C$DW$332       .dwtag  DW_TAG_member
    4631                      .dwattr $C$DW$332, DW_AT_type(*$C$DW$T$11)
    4632                      .dwattr $C$DW$332, DW_AT_name("uxPriority")
    4633                      .dwattr $C$DW$332, DW_AT_TI_symbol_name("_uxPriority")
    4634                      .dwattr $C$DW$332, DW_AT_data_member_location[DW_OP_plus_uconst 0x8]
    4635                      .dwattr $C$DW$332, DW_AT_accessibility(DW_ACCESS_public)
    4636                      .dwattr $C$DW$332, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4637                      .dwattr $C$DW$332, DW_AT_decl_line(0x75)
    4638                      .dwattr $C$DW$332, DW_AT_decl_column(0x19)
    4639              $C$DW$333       .dwtag  DW_TAG_member
    4640                      .dwattr $C$DW$333, DW_AT_type(*$C$DW$T$45)
    4641                      .dwattr $C$DW$333, DW_AT_name("puxStackBuffer")
    4642                      .dwattr $C$DW$333, DW_AT_TI_symbol_name("_puxStackBuffer")
    4643                      .dwattr $C$DW$333, DW_AT_data_member_location[DW_OP_plus_uconst 0xa]
    4644                      .dwattr $C$DW$333, DW_AT_accessibility(DW_ACCESS_public)
    4645                      .dwattr $C$DW$333, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4646                      .dwattr $C$DW$333, DW_AT_decl_line(0x76)
    4647                      .dwattr $C$DW$333, DW_AT_decl_column(0x12)
    4648              $C$DW$334       .dwtag  DW_TAG_member
    4649                      .dwattr $C$DW$334, DW_AT_type(*$C$DW$T$47)
    4650                      .dwattr $C$DW$334, DW_AT_name("xRegions")
    4651                      .dwattr $C$DW$334, DW_AT_TI_symbol_name("_xRegions")
    4652                      .dwattr $C$DW$334, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
    4653                      .dwattr $C$DW$334, DW_AT_accessibility(DW_ACCESS_public)
    4654                      .dwattr $C$DW$334, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4655                      .dwattr $C$DW$334, DW_AT_decl_line(0x77)
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   95

    4656                      .dwattr $C$DW$334, DW_AT_decl_column(0x10)
    4657                      .dwendtag $C$DW$T$48
    4658              
    4659                      .dwattr $C$DW$T$48, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    4660                      .dwattr $C$DW$T$48, DW_AT_decl_line(0x6f)
    4661                      .dwattr $C$DW$T$48, DW_AT_decl_column(0x10)
    4662              $C$DW$T$129     .dwtag  DW_TAG_typedef, DW_AT_name("xTaskParameters")
    4663                      .dwattr $C$DW$T$129, DW_AT_type(*$C$DW$T$48)
    4664                      .dwattr $C$DW$T$129, DW_AT_language(DW_LANG_C)
    4665                      .dwattr $C$DW$T$129, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/
    4666                      .dwattr $C$DW$T$129, DW_AT_decl_line(0x78)
    4667                      .dwattr $C$DW$T$129, DW_AT_decl_column(0x03)
    4668              
    4669              $C$DW$T$53      .dwtag  DW_TAG_structure_type
    4670                      .dwattr $C$DW$T$53, DW_AT_name("corCoRoutineControlBlock")
    4671                      .dwattr $C$DW$T$53, DW_AT_byte_size(0x1a)
    4672              $C$DW$335       .dwtag  DW_TAG_member
    4673                      .dwattr $C$DW$335, DW_AT_type(*$C$DW$T$52)
    4674                      .dwattr $C$DW$335, DW_AT_name("pxCoRoutineFunction")
    4675                      .dwattr $C$DW$335, DW_AT_TI_symbol_name("_pxCoRoutineFunction")
    4676                      .dwattr $C$DW$335, DW_AT_data_member_location[DW_OP_plus_uconst 0x0]
    4677                      .dwattr $C$DW$335, DW_AT_accessibility(DW_ACCESS_public)
    4678                      .dwattr $C$DW$335, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4679                      .dwattr $C$DW$335, DW_AT_decl_line(0x50)
    4680                      .dwattr $C$DW$335, DW_AT_decl_column(0x15)
    4681              $C$DW$336       .dwtag  DW_TAG_member
    4682                      .dwattr $C$DW$336, DW_AT_type(*$C$DW$T$25)
    4683                      .dwattr $C$DW$336, DW_AT_name("xGenericListItem")
    4684                      .dwattr $C$DW$336, DW_AT_TI_symbol_name("_xGenericListItem")
    4685                      .dwattr $C$DW$336, DW_AT_data_member_location[DW_OP_plus_uconst 0x2]
    4686                      .dwattr $C$DW$336, DW_AT_accessibility(DW_ACCESS_public)
    4687                      .dwattr $C$DW$336, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4688                      .dwattr $C$DW$336, DW_AT_decl_line(0x51)
    4689                      .dwattr $C$DW$336, DW_AT_decl_column(0x0f)
    4690              $C$DW$337       .dwtag  DW_TAG_member
    4691                      .dwattr $C$DW$337, DW_AT_type(*$C$DW$T$25)
    4692                      .dwattr $C$DW$337, DW_AT_name("xEventListItem")
    4693                      .dwattr $C$DW$337, DW_AT_TI_symbol_name("_xEventListItem")
    4694                      .dwattr $C$DW$337, DW_AT_data_member_location[DW_OP_plus_uconst 0xc]
    4695                      .dwattr $C$DW$337, DW_AT_accessibility(DW_ACCESS_public)
    4696                      .dwattr $C$DW$337, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4697                      .dwattr $C$DW$337, DW_AT_decl_line(0x52)
    4698                      .dwattr $C$DW$337, DW_AT_decl_column(0x0f)
    4699              $C$DW$338       .dwtag  DW_TAG_member
    4700                      .dwattr $C$DW$338, DW_AT_type(*$C$DW$T$11)
    4701                      .dwattr $C$DW$338, DW_AT_name("uxPriority")
    4702                      .dwattr $C$DW$338, DW_AT_TI_symbol_name("_uxPriority")
    4703                      .dwattr $C$DW$338, DW_AT_data_member_location[DW_OP_plus_uconst 0x16]
    4704                      .dwattr $C$DW$338, DW_AT_accessibility(DW_ACCESS_public)
    4705                      .dwattr $C$DW$338, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4706                      .dwattr $C$DW$338, DW_AT_decl_line(0x53)
    4707                      .dwattr $C$DW$338, DW_AT_decl_column(0x1a)
    4708              $C$DW$339       .dwtag  DW_TAG_member
    4709                      .dwattr $C$DW$339, DW_AT_type(*$C$DW$T$11)
    4710                      .dwattr $C$DW$339, DW_AT_name("uxIndex")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   96

    4711                      .dwattr $C$DW$339, DW_AT_TI_symbol_name("_uxIndex")
    4712                      .dwattr $C$DW$339, DW_AT_data_member_location[DW_OP_plus_uconst 0x17]
    4713                      .dwattr $C$DW$339, DW_AT_accessibility(DW_ACCESS_public)
    4714                      .dwattr $C$DW$339, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4715                      .dwattr $C$DW$339, DW_AT_decl_line(0x54)
    4716                      .dwattr $C$DW$339, DW_AT_decl_column(0x1a)
    4717              $C$DW$340       .dwtag  DW_TAG_member
    4718                      .dwattr $C$DW$340, DW_AT_type(*$C$DW$T$9)
    4719                      .dwattr $C$DW$340, DW_AT_name("uxState")
    4720                      .dwattr $C$DW$340, DW_AT_TI_symbol_name("_uxState")
    4721                      .dwattr $C$DW$340, DW_AT_data_member_location[DW_OP_plus_uconst 0x18]
    4722                      .dwattr $C$DW$340, DW_AT_accessibility(DW_ACCESS_public)
    4723                      .dwattr $C$DW$340, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/in
    4724                      .dwattr $C$DW$340, DW_AT_decl_line(0x55)
    4725                      .dwattr $C$DW$340, DW_AT_decl_column(0x13)
    4726                      .dwendtag $C$DW$T$53
    4727              
    4728                      .dwattr $C$DW$T$53, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/i
    4729                      .dwattr $C$DW$T$53, DW_AT_decl_line(0x4e)
    4730                      .dwattr $C$DW$T$53, DW_AT_decl_column(0x10)
    4731              $C$DW$T$130     .dwtag  DW_TAG_typedef, DW_AT_name("corCRCB")
    4732                      .dwattr $C$DW$T$130, DW_AT_type(*$C$DW$T$53)
    4733                      .dwattr $C$DW$T$130, DW_AT_language(DW_LANG_C)
    4734                      .dwattr $C$DW$T$130, DW_AT_decl_file("E:/temp/c5515_eZdsp_FreeRTOS_Demo/EZDSP_Sample/FreeRTOS/Source/
    4735                      .dwattr $C$DW$T$130, DW_AT_decl_line(0x56)
    4736                      .dwattr $C$DW$T$130, DW_AT_decl_column(0x03)
    4737                      .dwattr $C$DW$CU, DW_AT_language(DW_LANG_C)
    4738              
    4739              ;***************************************************************
    4740              ;* DWARF CIE ENTRIES                                           *
    4741              ;***************************************************************
    4742              
    4743              $C$DW$CIE       .dwcie 91
    4744                      .dwcfi  cfa_register, 36
    4745                      .dwcfi  cfa_offset, 0
    4746                      .dwcfi  undefined, 0
    4747                      .dwcfi  undefined, 1
    4748                      .dwcfi  undefined, 2
    4749                      .dwcfi  undefined, 3
    4750                      .dwcfi  undefined, 4
    4751                      .dwcfi  undefined, 5
    4752                      .dwcfi  undefined, 6
    4753                      .dwcfi  undefined, 7
    4754                      .dwcfi  undefined, 8
    4755                      .dwcfi  undefined, 9
    4756                      .dwcfi  undefined, 10
    4757                      .dwcfi  undefined, 11
    4758                      .dwcfi  undefined, 12
    4759                      .dwcfi  undefined, 13
    4760                      .dwcfi  same_value, 14
    4761                      .dwcfi  same_value, 15
    4762                      .dwcfi  undefined, 16
    4763                      .dwcfi  undefined, 17
    4764                      .dwcfi  undefined, 18
    4765                      .dwcfi  undefined, 19
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   97

    4766                      .dwcfi  undefined, 20
    4767                      .dwcfi  undefined, 21
    4768                      .dwcfi  undefined, 22
    4769                      .dwcfi  undefined, 23
    4770                      .dwcfi  undefined, 24
    4771                      .dwcfi  undefined, 25
    4772                      .dwcfi  same_value, 26
    4773                      .dwcfi  same_value, 27
    4774                      .dwcfi  same_value, 28
    4775                      .dwcfi  same_value, 29
    4776                      .dwcfi  same_value, 30
    4777                      .dwcfi  same_value, 31
    4778                      .dwcfi  undefined, 32
    4779                      .dwcfi  undefined, 33
    4780                      .dwcfi  undefined, 34
    4781                      .dwcfi  undefined, 35
    4782                      .dwcfi  undefined, 36
    4783                      .dwcfi  undefined, 37
    4784                      .dwcfi  undefined, 38
    4785                      .dwcfi  undefined, 39
    4786                      .dwcfi  undefined, 40
    4787                      .dwcfi  undefined, 41
    4788                      .dwcfi  undefined, 42
    4789                      .dwcfi  undefined, 43
    4790                      .dwcfi  undefined, 44
    4791                      .dwcfi  undefined, 45
    4792                      .dwcfi  undefined, 46
    4793                      .dwcfi  undefined, 47
    4794                      .dwcfi  undefined, 48
    4795                      .dwcfi  undefined, 49
    4796                      .dwcfi  undefined, 50
    4797                      .dwcfi  undefined, 51
    4798                      .dwcfi  undefined, 52
    4799                      .dwcfi  undefined, 53
    4800                      .dwcfi  undefined, 54
    4801                      .dwcfi  undefined, 55
    4802                      .dwcfi  undefined, 56
    4803                      .dwcfi  undefined, 57
    4804                      .dwcfi  undefined, 58
    4805                      .dwcfi  undefined, 59
    4806                      .dwcfi  undefined, 60
    4807                      .dwcfi  undefined, 61
    4808                      .dwcfi  undefined, 62
    4809                      .dwcfi  undefined, 63
    4810                      .dwcfi  undefined, 64
    4811                      .dwcfi  undefined, 65
    4812                      .dwcfi  undefined, 66
    4813                      .dwcfi  undefined, 67
    4814                      .dwcfi  undefined, 68
    4815                      .dwcfi  undefined, 69
    4816                      .dwcfi  undefined, 70
    4817                      .dwcfi  undefined, 71
    4818                      .dwcfi  undefined, 72
    4819                      .dwcfi  undefined, 73
    4820                      .dwcfi  undefined, 74
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   98

    4821                      .dwcfi  undefined, 75
    4822                      .dwcfi  undefined, 76
    4823                      .dwcfi  undefined, 77
    4824                      .dwcfi  undefined, 78
    4825                      .dwcfi  undefined, 79
    4826                      .dwcfi  undefined, 80
    4827                      .dwcfi  undefined, 81
    4828                      .dwcfi  undefined, 82
    4829                      .dwcfi  undefined, 83
    4830                      .dwcfi  undefined, 84
    4831                      .dwcfi  undefined, 85
    4832                      .dwcfi  undefined, 86
    4833                      .dwcfi  undefined, 87
    4834                      .dwcfi  undefined, 88
    4835                      .dwcfi  undefined, 89
    4836                      .dwcfi  undefined, 90
    4837                      .dwcfi  undefined, 91
    4838                      .dwendentry
    4839              
    4840              ;***************************************************************
    4841              ;* DWARF REGISTER MAP                                          *
    4842              ;***************************************************************
    4843              
    4844              $C$DW$341       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0")
    4845                      .dwattr $C$DW$341, DW_AT_location[DW_OP_reg0]
    4846              $C$DW$342       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0")
    4847                      .dwattr $C$DW$342, DW_AT_location[DW_OP_reg1]
    4848              $C$DW$343       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC0_G")
    4849                      .dwattr $C$DW$343, DW_AT_location[DW_OP_reg2]
    4850              $C$DW$344       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1")
    4851                      .dwattr $C$DW$344, DW_AT_location[DW_OP_reg3]
    4852              $C$DW$345       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1")
    4853                      .dwattr $C$DW$345, DW_AT_location[DW_OP_reg4]
    4854              $C$DW$346       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC1_G")
    4855                      .dwattr $C$DW$346, DW_AT_location[DW_OP_reg5]
    4856              $C$DW$347       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2")
    4857                      .dwattr $C$DW$347, DW_AT_location[DW_OP_reg6]
    4858              $C$DW$348       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2")
    4859                      .dwattr $C$DW$348, DW_AT_location[DW_OP_reg7]
    4860              $C$DW$349       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC2_G")
    4861                      .dwattr $C$DW$349, DW_AT_location[DW_OP_reg8]
    4862              $C$DW$350       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3")
    4863                      .dwattr $C$DW$350, DW_AT_location[DW_OP_reg9]
    4864              $C$DW$351       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3")
    4865                      .dwattr $C$DW$351, DW_AT_location[DW_OP_reg10]
    4866              $C$DW$352       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AC3_G")
    4867                      .dwattr $C$DW$352, DW_AT_location[DW_OP_reg11]
    4868              $C$DW$353       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T0")
    4869                      .dwattr $C$DW$353, DW_AT_location[DW_OP_reg12]
    4870              $C$DW$354       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T1")
    4871                      .dwattr $C$DW$354, DW_AT_location[DW_OP_reg13]
    4872              $C$DW$355       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T2")
    4873                      .dwattr $C$DW$355, DW_AT_location[DW_OP_reg14]
    4874              $C$DW$356       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("T3")
    4875                      .dwattr $C$DW$356, DW_AT_location[DW_OP_reg15]
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE   99

    4876              $C$DW$357       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR0")
    4877                      .dwattr $C$DW$357, DW_AT_location[DW_OP_reg16]
    4878              $C$DW$358       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR0")
    4879                      .dwattr $C$DW$358, DW_AT_location[DW_OP_reg17]
    4880              $C$DW$359       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR1")
    4881                      .dwattr $C$DW$359, DW_AT_location[DW_OP_reg18]
    4882              $C$DW$360       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR1")
    4883                      .dwattr $C$DW$360, DW_AT_location[DW_OP_reg19]
    4884              $C$DW$361       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR2")
    4885                      .dwattr $C$DW$361, DW_AT_location[DW_OP_reg20]
    4886              $C$DW$362       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR2")
    4887                      .dwattr $C$DW$362, DW_AT_location[DW_OP_reg21]
    4888              $C$DW$363       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR3")
    4889                      .dwattr $C$DW$363, DW_AT_location[DW_OP_reg22]
    4890              $C$DW$364       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR3")
    4891                      .dwattr $C$DW$364, DW_AT_location[DW_OP_reg23]
    4892              $C$DW$365       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR4")
    4893                      .dwattr $C$DW$365, DW_AT_location[DW_OP_reg24]
    4894              $C$DW$366       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR4")
    4895                      .dwattr $C$DW$366, DW_AT_location[DW_OP_reg25]
    4896              $C$DW$367       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR5")
    4897                      .dwattr $C$DW$367, DW_AT_location[DW_OP_reg26]
    4898              $C$DW$368       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR5")
    4899                      .dwattr $C$DW$368, DW_AT_location[DW_OP_reg27]
    4900              $C$DW$369       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR6")
    4901                      .dwattr $C$DW$369, DW_AT_location[DW_OP_reg28]
    4902              $C$DW$370       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR6")
    4903                      .dwattr $C$DW$370, DW_AT_location[DW_OP_reg29]
    4904              $C$DW$371       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR7")
    4905                      .dwattr $C$DW$371, DW_AT_location[DW_OP_reg30]
    4906              $C$DW$372       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XAR7")
    4907                      .dwattr $C$DW$372, DW_AT_location[DW_OP_reg31]
    4908              $C$DW$373       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("FP")
    4909                      .dwattr $C$DW$373, DW_AT_location[DW_OP_regx 0x20]
    4910              $C$DW$374       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XFP")
    4911                      .dwattr $C$DW$374, DW_AT_location[DW_OP_regx 0x21]
    4912              $C$DW$375       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("PC")
    4913                      .dwattr $C$DW$375, DW_AT_location[DW_OP_regx 0x22]
    4914              $C$DW$376       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SP")
    4915                      .dwattr $C$DW$376, DW_AT_location[DW_OP_regx 0x23]
    4916              $C$DW$377       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XSP")
    4917                      .dwattr $C$DW$377, DW_AT_location[DW_OP_regx 0x24]
    4918              $C$DW$378       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BKC")
    4919                      .dwattr $C$DW$378, DW_AT_location[DW_OP_regx 0x25]
    4920              $C$DW$379       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BK03")
    4921                      .dwattr $C$DW$379, DW_AT_location[DW_OP_regx 0x26]
    4922              $C$DW$380       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BK47")
    4923                      .dwattr $C$DW$380, DW_AT_location[DW_OP_regx 0x27]
    4924              $C$DW$381       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST0")
    4925                      .dwattr $C$DW$381, DW_AT_location[DW_OP_regx 0x28]
    4926              $C$DW$382       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST1")
    4927                      .dwattr $C$DW$382, DW_AT_location[DW_OP_regx 0x29]
    4928              $C$DW$383       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST2")
    4929                      .dwattr $C$DW$383, DW_AT_location[DW_OP_regx 0x2a]
    4930              $C$DW$384       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ST3")
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE  100

    4931                      .dwattr $C$DW$384, DW_AT_location[DW_OP_regx 0x2b]
    4932              $C$DW$385       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP")
    4933                      .dwattr $C$DW$385, DW_AT_location[DW_OP_regx 0x2c]
    4934              $C$DW$386       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP05")
    4935                      .dwattr $C$DW$386, DW_AT_location[DW_OP_regx 0x2d]
    4936              $C$DW$387       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("MDP67")
    4937                      .dwattr $C$DW$387, DW_AT_location[DW_OP_regx 0x2e]
    4938              $C$DW$388       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRC0")
    4939                      .dwattr $C$DW$388, DW_AT_location[DW_OP_regx 0x2f]
    4940              $C$DW$389       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA0")
    4941                      .dwattr $C$DW$389, DW_AT_location[DW_OP_regx 0x30]
    4942              $C$DW$390       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA0_H")
    4943                      .dwattr $C$DW$390, DW_AT_location[DW_OP_regx 0x31]
    4944              $C$DW$391       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA0")
    4945                      .dwattr $C$DW$391, DW_AT_location[DW_OP_regx 0x32]
    4946              $C$DW$392       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA0_H")
    4947                      .dwattr $C$DW$392, DW_AT_location[DW_OP_regx 0x33]
    4948              $C$DW$393       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRS1")
    4949                      .dwattr $C$DW$393, DW_AT_location[DW_OP_regx 0x34]
    4950              $C$DW$394       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BRC1")
    4951                      .dwattr $C$DW$394, DW_AT_location[DW_OP_regx 0x35]
    4952              $C$DW$395       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA1")
    4953                      .dwattr $C$DW$395, DW_AT_location[DW_OP_regx 0x36]
    4954              $C$DW$396       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RSA1_H")
    4955                      .dwattr $C$DW$396, DW_AT_location[DW_OP_regx 0x37]
    4956              $C$DW$397       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA1")
    4957                      .dwattr $C$DW$397, DW_AT_location[DW_OP_regx 0x38]
    4958              $C$DW$398       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("REA1_H")
    4959                      .dwattr $C$DW$398, DW_AT_location[DW_OP_regx 0x39]
    4960              $C$DW$399       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CSR")
    4961                      .dwattr $C$DW$399, DW_AT_location[DW_OP_regx 0x3a]
    4962              $C$DW$400       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RPTC")
    4963                      .dwattr $C$DW$400, DW_AT_location[DW_OP_regx 0x3b]
    4964              $C$DW$401       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CDP")
    4965                      .dwattr $C$DW$401, DW_AT_location[DW_OP_regx 0x3c]
    4966              $C$DW$402       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("XCDP")
    4967                      .dwattr $C$DW$402, DW_AT_location[DW_OP_regx 0x3d]
    4968              $C$DW$403       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TRN0")
    4969                      .dwattr $C$DW$403, DW_AT_location[DW_OP_regx 0x3e]
    4970              $C$DW$404       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TRN1")
    4971                      .dwattr $C$DW$404, DW_AT_location[DW_OP_regx 0x3f]
    4972              $C$DW$405       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA01")
    4973                      .dwattr $C$DW$405, DW_AT_location[DW_OP_regx 0x40]
    4974              $C$DW$406       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA23")
    4975                      .dwattr $C$DW$406, DW_AT_location[DW_OP_regx 0x41]
    4976              $C$DW$407       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA45")
    4977                      .dwattr $C$DW$407, DW_AT_location[DW_OP_regx 0x42]
    4978              $C$DW$408       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSA67")
    4979                      .dwattr $C$DW$408, DW_AT_location[DW_OP_regx 0x43]
    4980              $C$DW$409       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("BSAC")
    4981                      .dwattr $C$DW$409, DW_AT_location[DW_OP_regx 0x44]
    4982              $C$DW$410       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CARRY")
    4983                      .dwattr $C$DW$410, DW_AT_location[DW_OP_regx 0x45]
    4984              $C$DW$411       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TC1")
    4985                      .dwattr $C$DW$411, DW_AT_location[DW_OP_regx 0x46]
TMS320C55x Assembler PC v4.3.8 Fri Jan 21 01:13:26 2011

Tools Copyright (c) 1996-2010 Texas Instruments Incorporated
queue.asm                                                            PAGE  101

    4986              $C$DW$412       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("TC2")
    4987                      .dwattr $C$DW$412, DW_AT_location[DW_OP_regx 0x47]
    4988              $C$DW$413       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("M40")
    4989                      .dwattr $C$DW$413, DW_AT_location[DW_OP_regx 0x48]
    4990              $C$DW$414       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SXMD")
    4991                      .dwattr $C$DW$414, DW_AT_location[DW_OP_regx 0x49]
    4992              $C$DW$415       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("ARMS")
    4993                      .dwattr $C$DW$415, DW_AT_location[DW_OP_regx 0x4a]
    4994              $C$DW$416       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("C54CM")
    4995                      .dwattr $C$DW$416, DW_AT_location[DW_OP_regx 0x4b]
    4996              $C$DW$417       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SATA")
    4997                      .dwattr $C$DW$417, DW_AT_location[DW_OP_regx 0x4c]
    4998              $C$DW$418       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SATD")
    4999                      .dwattr $C$DW$418, DW_AT_location[DW_OP_regx 0x4d]
    5000              $C$DW$419       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("RDM")
    5001                      .dwattr $C$DW$419, DW_AT_location[DW_OP_regx 0x4e]
    5002              $C$DW$420       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("FRCT")
    5003                      .dwattr $C$DW$420, DW_AT_location[DW_OP_regx 0x4f]
    5004              $C$DW$421       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("SMUL")
    5005                      .dwattr $C$DW$421, DW_AT_location[DW_OP_regx 0x50]
    5006              $C$DW$422       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("INTM")
    5007                      .dwattr $C$DW$422, DW_AT_location[DW_OP_regx 0x51]
    5008              $C$DW$423       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR0LC")
    5009                      .dwattr $C$DW$423, DW_AT_location[DW_OP_regx 0x52]
    5010              $C$DW$424       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR1LC")
    5011                      .dwattr $C$DW$424, DW_AT_location[DW_OP_regx 0x53]
    5012              $C$DW$425       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR2LC")
    5013                      .dwattr $C$DW$425, DW_AT_location[DW_OP_regx 0x54]
    5014              $C$DW$426       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR3LC")
    5015                      .dwattr $C$DW$426, DW_AT_location[DW_OP_regx 0x55]
    5016              $C$DW$427       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR4LC")
    5017                      .dwattr $C$DW$427, DW_AT_location[DW_OP_regx 0x56]
    5018              $C$DW$428       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR5LC")
    5019                      .dwattr $C$DW$428, DW_AT_location[DW_OP_regx 0x57]
    5020              $C$DW$429       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR6LC")
    5021                      .dwattr $C$DW$429, DW_AT_location[DW_OP_regx 0x58]
    5022              $C$DW$430       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("AR7LC")
    5023                      .dwattr $C$DW$430, DW_AT_location[DW_OP_regx 0x59]
    5024              $C$DW$431       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CDPLC")
    5025                      .dwattr $C$DW$431, DW_AT_location[DW_OP_regx 0x5a]
    5026              $C$DW$432       .dwtag  DW_TAG_TI_assign_register, DW_AT_name("CIE_RETA")
    5027                      .dwattr $C$DW$432, DW_AT_location[DW_OP_regx 0x5b]
    5028                      .dwendtag $C$DW$CU
    5029              

No Assembly Errors, No Assembly Warnings
